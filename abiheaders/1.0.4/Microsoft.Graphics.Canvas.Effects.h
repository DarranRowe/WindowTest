
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __microsoft2Egraphics2Ecanvas2Eeffects_h__
#define __microsoft2Egraphics2Ecanvas2Eeffects_h__
#ifndef __microsoft2Egraphics2Ecanvas2Eeffects_p_h__
#define __microsoft2Egraphics2Ecanvas2Eeffects_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.Canvas.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Effects.h"
#include "Windows.UI.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IAlphaMaskEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect ABI::Microsoft::Graphics::Canvas::Effects::IAlphaMaskEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IAlphaMaskEffectStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics ABI::Microsoft::Graphics::Canvas::Effects::IAlphaMaskEffectStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IArithmeticCompositeEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect ABI::Microsoft::Graphics::Canvas::Effects::IArithmeticCompositeEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IAtlasEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect ABI::Microsoft::Graphics::Canvas::Effects::IAtlasEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IBlendEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect ABI::Microsoft::Graphics::Canvas::Effects::IBlendEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IBorderEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect ABI::Microsoft::Graphics::Canvas::Effects::IBorderEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IBrightnessEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect ABI::Microsoft::Graphics::Canvas::Effects::IBrightnessEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ICanvasEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect ABI::Microsoft::Graphics::Canvas::Effects::ICanvasEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IChromaKeyEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect ABI::Microsoft::Graphics::Canvas::Effects::IChromaKeyEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorManagementEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorManagementEffectStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementEffectStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorManagementProfile;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorManagementProfileFactory;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfileFactory

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorManagementProfileStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfileStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorMatrixEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect ABI::Microsoft::Graphics::Canvas::Effects::IColorMatrixEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IColorSourceEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect ABI::Microsoft::Graphics::Canvas::Effects::IColorSourceEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ICompositeEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect ABI::Microsoft::Graphics::Canvas::Effects::ICompositeEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IContrastEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect ABI::Microsoft::Graphics::Canvas::Effects::IContrastEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IConvolveMatrixEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect ABI::Microsoft::Graphics::Canvas::Effects::IConvolveMatrixEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ICropEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect ABI::Microsoft::Graphics::Canvas::Effects::ICropEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ICrossFadeEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect ABI::Microsoft::Graphics::Canvas::Effects::ICrossFadeEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ICrossFadeEffectStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics ABI::Microsoft::Graphics::Canvas::Effects::ICrossFadeEffectStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDirectionalBlurEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect ABI::Microsoft::Graphics::Canvas::Effects::IDirectionalBlurEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDiscreteTransferEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect ABI::Microsoft::Graphics::Canvas::Effects::IDiscreteTransferEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDisplacementMapEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect ABI::Microsoft::Graphics::Canvas::Effects::IDisplacementMapEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDistantDiffuseEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect ABI::Microsoft::Graphics::Canvas::Effects::IDistantDiffuseEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDistantSpecularEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect ABI::Microsoft::Graphics::Canvas::Effects::IDistantSpecularEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IDpiCompensationEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect ABI::Microsoft::Graphics::Canvas::Effects::IDpiCompensationEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IEdgeDetectionEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect ABI::Microsoft::Graphics::Canvas::Effects::IEdgeDetectionEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IEffectTransferTable3D;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3D

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IEffectTransferTable3DStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3DStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IEmbossEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect ABI::Microsoft::Graphics::Canvas::Effects::IEmbossEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IExposureEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect ABI::Microsoft::Graphics::Canvas::Effects::IExposureEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IGammaTransferEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect ABI::Microsoft::Graphics::Canvas::Effects::IGammaTransferEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IGaussianBlurEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect ABI::Microsoft::Graphics::Canvas::Effects::IGaussianBlurEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IGrayscaleEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect ABI::Microsoft::Graphics::Canvas::Effects::IGrayscaleEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IHighlightsAndShadowsEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect ABI::Microsoft::Graphics::Canvas::Effects::IHighlightsAndShadowsEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IHueRotationEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect ABI::Microsoft::Graphics::Canvas::Effects::IHueRotationEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IHueToRgbEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect ABI::Microsoft::Graphics::Canvas::Effects::IHueToRgbEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IInvertEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect ABI::Microsoft::Graphics::Canvas::Effects::IInvertEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ILinearTransferEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect ABI::Microsoft::Graphics::Canvas::Effects::ILinearTransferEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ILuminanceToAlphaEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect ABI::Microsoft::Graphics::Canvas::Effects::ILuminanceToAlphaEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IMorphologyEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect ABI::Microsoft::Graphics::Canvas::Effects::IMorphologyEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IOpacityEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect ABI::Microsoft::Graphics::Canvas::Effects::IOpacityEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IOpacityEffectStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics ABI::Microsoft::Graphics::Canvas::Effects::IOpacityEffectStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IOpacityMetadataEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect ABI::Microsoft::Graphics::Canvas::Effects::IOpacityMetadataEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPixelShaderEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect ABI::Microsoft::Graphics::Canvas::Effects::IPixelShaderEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPixelShaderEffectFactory;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory ABI::Microsoft::Graphics::Canvas::Effects::IPixelShaderEffectFactory

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPointDiffuseEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect ABI::Microsoft::Graphics::Canvas::Effects::IPointDiffuseEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPointSpecularEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect ABI::Microsoft::Graphics::Canvas::Effects::IPointSpecularEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPosterizeEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect ABI::Microsoft::Graphics::Canvas::Effects::IPosterizeEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IPremultiplyEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect ABI::Microsoft::Graphics::Canvas::Effects::IPremultiplyEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IRgbToHueEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect ABI::Microsoft::Graphics::Canvas::Effects::IRgbToHueEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ISaturationEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect ABI::Microsoft::Graphics::Canvas::Effects::ISaturationEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IScaleEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect ABI::Microsoft::Graphics::Canvas::Effects::IScaleEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ISepiaEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect ABI::Microsoft::Graphics::Canvas::Effects::ISepiaEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IShadowEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect ABI::Microsoft::Graphics::Canvas::Effects::IShadowEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ISharpenEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect ABI::Microsoft::Graphics::Canvas::Effects::ISharpenEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ISpotDiffuseEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect ABI::Microsoft::Graphics::Canvas::Effects::ISpotDiffuseEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ISpotSpecularEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect ABI::Microsoft::Graphics::Canvas::Effects::ISpotSpecularEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IStraightenEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect ABI::Microsoft::Graphics::Canvas::Effects::IStraightenEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITableTransfer3DEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect ABI::Microsoft::Graphics::Canvas::Effects::ITableTransfer3DEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITableTransferEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect ABI::Microsoft::Graphics::Canvas::Effects::ITableTransferEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITemperatureAndTintEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect ABI::Microsoft::Graphics::Canvas::Effects::ITemperatureAndTintEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITileEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect ABI::Microsoft::Graphics::Canvas::Effects::ITileEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITintEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect ABI::Microsoft::Graphics::Canvas::Effects::ITintEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITintEffectStatics;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics ABI::Microsoft::Graphics::Canvas::Effects::ITintEffectStatics

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITransform2DEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect ABI::Microsoft::Graphics::Canvas::Effects::ITransform2DEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITransform3DEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect ABI::Microsoft::Graphics::Canvas::Effects::ITransform3DEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface ITurbulenceEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect ABI::Microsoft::Graphics::Canvas::Effects::ITurbulenceEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IUnPremultiplyEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect ABI::Microsoft::Graphics::Canvas::Effects::IUnPremultiplyEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    interface IVignetteEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect ABI::Microsoft::Graphics::Canvas::Effects::IVignetteEffect

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("09335560-6c6b-5a26-9348-97b781132b20"))
IKeyValuePair<HSTRING, IInspectable*> : IKeyValuePair_impl<HSTRING, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING, IInspectable*> __FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE */



#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5db5fa32-707c-5849-a06b-91c8eb9d10e8"))
IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */



#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe2f3d47-5d47-5499-8374-430c7cda0204"))
IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */


#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Effects {
                interface IGraphicsEffectSource;
            } /* Effects */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource ABI::Windows::Graphics::Effects::IGraphicsEffectSource

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#define DEF___FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c50f44f2-b5b9-50e5-b493-a967ccc21dd2"))
IIterator<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> : IIterator_impl<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Graphics.Effects.IGraphicsEffectSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t;
#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#define DEF___FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42924784-b65c-5e5f-9ea2-d50dcf427e65"))
IIterable<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> : IIterable_impl<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Graphics.Effects.IGraphicsEffectSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t;
#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIMapView_2_HSTRING_IInspectable_USE
#define DEF___FIMapView_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb78502a-f79d-54fa-92c9-90c5039fdf7e"))
IMapView<HSTRING, IInspectable*> : IMapView_impl<HSTRING, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING, IInspectable*> __FIMapView_2_HSTRING_IInspectable_t;
#define __FIMapView_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_IInspectable_USE */



#ifndef DEF___FIMap_2_HSTRING_IInspectable_USE
#define DEF___FIMap_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1b0d3570-0877-5ec2-8a2c-3b9539506aca"))
IMap<HSTRING, IInspectable*> : IMap_impl<HSTRING, IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IMap`2<String, Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING, IInspectable*> __FIMap_2_HSTRING_IInspectable_t;
#define __FIMap_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_IInspectable_USE */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#define DEF___FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("74afa1ad-285c-5bc4-9936-4338f19d7979"))
IVectorView<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> : IVectorView_impl<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Graphics.Effects.IGraphicsEffectSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t;
#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#define DEF___FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b5a2f91f-1f97-50ef-ba3f-27aecbfb6d0a"))
IVector<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> : IVector_impl<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Graphics.Effects.IGraphicsEffectSource>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Graphics::Effects::IGraphicsEffectSource*> __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t;
#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_USE */

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasBufferPrecision : int CanvasBufferPrecision;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */


#ifndef DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_USE
#define DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8bff1f50-aef3-558e-a02b-589b6c0cfea8"))
IReference<enum ABI::Microsoft::Graphics::Canvas::CanvasBufferPrecision> : IReference_impl<enum ABI::Microsoft::Graphics::Canvas::CanvasBufferPrecision>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Microsoft.Graphics.Canvas.CanvasBufferPrecision>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<enum ABI::Microsoft::Graphics::Canvas::CanvasBufferPrecision> __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_t;
#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision ABI::Windows::Foundation::__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_USE */


namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef struct ColorManagementSimpleProfile ColorManagementSimpleProfile;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */


#ifndef DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_USE
#define DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("41db10c7-f02c-5d7f-a12e-4e05047388e7"))
IReference<struct ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementSimpleProfile> : IReference_impl<struct ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementSimpleProfile>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Microsoft.Graphics.Canvas.Effects.ColorManagementSimpleProfile>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementSimpleProfile> __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_t;
#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile ABI::Windows::Foundation::__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_USE */


namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasAlphaMode : int CanvasAlphaMode;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasColorSpace : int CanvasColorSpace;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasComposite : int CanvasComposite;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                class CanvasDevice;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                interface ICanvasDevice;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice ABI::Microsoft::Graphics::Canvas::ICanvasDevice

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasEdgeBehavior : int CanvasEdgeBehavior;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                typedef enum CanvasImageInterpolation : int CanvasImageInterpolation;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                interface ICanvasImage;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage ABI::Microsoft::Graphics::Canvas::ICanvasImage

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                interface ICanvasResourceCreator;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreator

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                interface ICanvasResourceCreatorWithDpi;
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IClosable;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIClosable ABI::Windows::Foundation::IClosable

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Matrix3x2 Matrix3x2;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Matrix4x4 Matrix4x4;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector2 Vector2;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector3 Vector3;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                typedef struct Vector4 Vector4;
            } /* Numerics */
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace DirectX {
                typedef enum DirectXPixelFormat : int DirectXPixelFormat;
            } /* DirectX */
        } /* Graphics */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Graphics {
            namespace Effects {
                interface IGraphicsEffect;
            } /* Effects */
        } /* Graphics */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect ABI::Windows::Graphics::Effects::IGraphicsEffect

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            typedef struct Color Color;
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum BlendEffectMode : int BlendEffectMode;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum ColorManagementEffectQuality : int ColorManagementEffectQuality;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum ColorManagementGamma : int ColorManagementGamma;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum ColorManagementProfileType : int ColorManagementProfileType;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum ColorManagementRenderingIntent : int ColorManagementRenderingIntent;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum EdgeDetectionEffectMode : int EdgeDetectionEffectMode;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum EffectBorderMode : int EffectBorderMode;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum EffectChannelSelect : int EffectChannelSelect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum EffectHueColorSpace : int EffectHueColorSpace;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum EffectOptimization : int EffectOptimization;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum ExtendedColorSpace : int ExtendedColorSpace;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum MorphologyEffectMode : int MorphologyEffectMode;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum SamplerCoordinateMapping : int SamplerCoordinateMapping;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef enum TurbulenceEffectNoise : int TurbulenceEffectNoise;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    typedef struct Matrix5x4 Matrix5x4;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    class ColorManagementProfile;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    class EffectTransferTable3D;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    class PixelShaderEffect;
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.BlendEffectMode
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum BlendEffectMode : int
                    {
                        BlendEffectMode_Multiply = 0,
                        BlendEffectMode_Screen = 1,
                        BlendEffectMode_Darken = 2,
                        BlendEffectMode_Lighten = 3,
                        BlendEffectMode_Dissolve = 4,
                        BlendEffectMode_ColorBurn = 5,
                        BlendEffectMode_LinearBurn = 6,
                        BlendEffectMode_DarkerColor = 7,
                        BlendEffectMode_LighterColor = 8,
                        BlendEffectMode_ColorDodge = 9,
                        BlendEffectMode_LinearDodge = 10,
                        BlendEffectMode_Overlay = 11,
                        BlendEffectMode_SoftLight = 12,
                        BlendEffectMode_HardLight = 13,
                        BlendEffectMode_VividLight = 14,
                        BlendEffectMode_LinearLight = 15,
                        BlendEffectMode_PinLight = 16,
                        BlendEffectMode_HardMix = 17,
                        BlendEffectMode_Difference = 18,
                        BlendEffectMode_Exclusion = 19,
                        BlendEffectMode_Hue = 20,
                        BlendEffectMode_Saturation = 21,
                        BlendEffectMode_Color = 22,
                        BlendEffectMode_Luminosity = 23,
                        BlendEffectMode_Subtract = 24,
                        BlendEffectMode_Division = 25,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementEffectQuality
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum ColorManagementEffectQuality : int
                    {
                        ColorManagementEffectQuality_Proof = 0,
                        ColorManagementEffectQuality_Normal = 1,
                        ColorManagementEffectQuality_Best = 2,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementGamma
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum ColorManagementGamma : int
                    {
                        ColorManagementGamma_G22 = 0,
                        ColorManagementGamma_G10 = 1,
                        ColorManagementGamma_G2084 = 2,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementProfileType
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum ColorManagementProfileType : int
                    {
                        ColorManagementProfileType_Icc = 0,
                        ColorManagementProfileType_Simple = 1,
                        ColorManagementProfileType_Extended = 2,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementRenderingIntent
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum ColorManagementRenderingIntent : int
                    {
                        ColorManagementRenderingIntent_Perceptual = 0,
                        ColorManagementRenderingIntent_RelativeColorimetric = 1,
                        ColorManagementRenderingIntent_Saturation = 2,
                        ColorManagementRenderingIntent_AbsoluteColorimetric = 3,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum EdgeDetectionEffectMode : int
                    {
                        EdgeDetectionEffectMode_Sobel = 0,
                        EdgeDetectionEffectMode_Prewitt = 1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectBorderMode
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum EffectBorderMode : int
                    {
                        EffectBorderMode_Soft = 0,
                        EffectBorderMode_Hard = 1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectChannelSelect
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum EffectChannelSelect : int
                    {
                        EffectChannelSelect_Red = 0,
                        EffectChannelSelect_Green = 1,
                        EffectChannelSelect_Blue = 2,
                        EffectChannelSelect_Alpha = 3,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectHueColorSpace
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum EffectHueColorSpace : int
                    {
                        EffectHueColorSpace_Hsv = 0,
                        EffectHueColorSpace_Hsl = 1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectOptimization
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum EffectOptimization : int
                    {
                        EffectOptimization_Speed = 0,
                        EffectOptimization_Balanced = 1,
                        EffectOptimization_Quality = 2,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ExtendedColorSpace
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum ExtendedColorSpace : int
                    {
                        ExtendedColorSpace_FullG22P709 = 0,
                        ExtendedColorSpace_FullG10P709 = 1,
                        ExtendedColorSpace_StudioG22P709 = 2,
                        ExtendedColorSpace_StudioG22P2020 = 3,
                        ExtendedColorSpace_FullG2084P2020 = 12,
                        ExtendedColorSpace_StudioG2084P2020 = 14,
                        ExtendedColorSpace_FullG22P2020 = 17,
                        ExtendedColorSpace_Custom = -1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.MorphologyEffectMode
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum MorphologyEffectMode : int
                    {
                        MorphologyEffectMode_Erode = 0,
                        MorphologyEffectMode_Dilate = 1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.SamplerCoordinateMapping
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum SamplerCoordinateMapping : int
                    {
                        SamplerCoordinateMapping_Unknown = 0,
                        SamplerCoordinateMapping_OneToOne = 1,
                        SamplerCoordinateMapping_Offset = 2,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.TurbulenceEffectNoise
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    enum TurbulenceEffectNoise : int
                    {
                        TurbulenceEffectNoise_FractalSum = 0,
                        TurbulenceEffectNoise_Turbulence = 1,
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementSimpleProfile
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    struct ColorManagementSimpleProfile
                    {
                        ABI::Windows::Foundation::Numerics::Vector2 RedPrimary;
                        ABI::Windows::Foundation::Numerics::Vector2 GreenPrimary;
                        ABI::Windows::Foundation::Numerics::Vector2 BluePrimary;
                        ABI::Windows::Foundation::Numerics::Vector2 WhitePointXZ;
                        ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementGamma Gamma;
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.Matrix5x4
 *
 */
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    struct Matrix5x4
                    {
                        FLOAT M11;
                        FLOAT M12;
                        FLOAT M13;
                        FLOAT M14;
                        FLOAT M21;
                        FLOAT M22;
                        FLOAT M23;
                        FLOAT M24;
                        FLOAT M31;
                        FLOAT M32;
                        FLOAT M33;
                        FLOAT M34;
                        FLOAT M41;
                        FLOAT M42;
                        FLOAT M43;
                        FLOAT M44;
                        FLOAT M51;
                        FLOAT M52;
                        FLOAT M53;
                        FLOAT M54;
                    };
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAlphaMaskEffect[] = L"Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("9ba6607e-75c9-5388-892f-dd3440564d98")
                    IAlphaMaskEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMask(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMask(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAlphaMaskEffect = _uuidof(IAlphaMaskEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAlphaMaskEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffectStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("cc31105c-0377-5708-8484-1ad8ee3e554b")
                    IAlphaMaskEffectStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_IsSupported(
                            boolean* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAlphaMaskEffectStatics = _uuidof(IAlphaMaskEffectStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IArithmeticCompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("beeb682b-d64c-5c8b-a1fb-332162ed099c")
                    IArithmeticCompositeEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MultiplyAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MultiplyAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Offset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Offset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IArithmeticCompositeEffect = _uuidof(IArithmeticCompositeEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAtlasEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AtlasEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAtlasEffect[] = L"Microsoft.Graphics.Canvas.Effects.IAtlasEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("f7f26eba-f015-5eff-9af3-7bd2d44904bd")
                    IAtlasEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SourceRectangle(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceRectangle(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_PaddingRectangle(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_PaddingRectangle(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAtlasEffect = _uuidof(IAtlasEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBlendEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BlendEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBlendEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBlendEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("5673248e-7266-5e49-b2ab-2589d5d875c3")
                    IBlendEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::BlendEffectMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::BlendEffectMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Background(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Background(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Foreground(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Foreground(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBlendEffect = _uuidof(IBlendEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBorderEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BorderEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBorderEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBorderEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("31602441-15db-5b4a-98dd-ba4247548b41")
                    IBorderEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ExtendX(
                            ABI::Microsoft::Graphics::Canvas::CanvasEdgeBehavior* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ExtendX(
                            ABI::Microsoft::Graphics::Canvas::CanvasEdgeBehavior value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ExtendY(
                            ABI::Microsoft::Graphics::Canvas::CanvasEdgeBehavior* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ExtendY(
                            ABI::Microsoft::Graphics::Canvas::CanvasEdgeBehavior value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBorderEffect = _uuidof(IBorderEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBrightnessEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BrightnessEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBrightnessEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBrightnessEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("beced347-025f-5727-8f7d-498d67df557e")
                    IBrightnessEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_WhitePoint(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_WhitePoint(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlackPoint(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlackPoint(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBrightnessEffect = _uuidof(IBrightnessEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICanvasEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICanvasEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("0ef96f8c-9b5e-4bf0-a399-aad8ce53db55")
                    ICanvasEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CacheOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CacheOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BufferPrecision(
                            __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BufferPrecision(
                            __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE InvalidateSourceRectangle(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi* resourceCreator,
                            UINT32 sourceIndex,
                            ABI::Windows::Foundation::Rect invalidRectangle
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetInvalidRectangles(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi* resourceCreator,
                            UINT32* valueElementsLength,
                            ABI::Windows::Foundation::Rect** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetRequiredSourceRectangle(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi* resourceCreator,
                            ABI::Windows::Foundation::Rect outputRectangle,
                            ABI::Microsoft::Graphics::Canvas::Effects::ICanvasEffect* sourceEffect,
                            UINT32 sourceIndex,
                            ABI::Windows::Foundation::Rect sourceBounds,
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetRequiredSourceRectangles(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreatorWithDpi* resourceCreator,
                            ABI::Windows::Foundation::Rect outputRectangle,
                            UINT32 sourceEffectsLength,
                            ABI::Microsoft::Graphics::Canvas::Effects::ICanvasEffect** sourceEffects,
                            UINT32 sourceIndicesLength,
                            UINT32* sourceIndices,
                            UINT32 sourceBoundsLength,
                            ABI::Windows::Foundation::Rect* sourceBounds,
                            UINT32* valueElementsLength,
                            ABI::Windows::Foundation::Rect** valueElements
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICanvasEffect = _uuidof(ICanvasEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IChromaKeyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("f14b9464-1871-5eaa-9db6-c0901140e9d3")
                    IChromaKeyEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Tolerance(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Tolerance(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InvertAlpha(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InvertAlpha(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Feather(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Feather(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IChromaKeyEffect = _uuidof(IChromaKeyEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("6e8bbe37-e1e4-5ad0-b98d-940e3213a54e")
                    IColorManagementEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SourceColorProfile(
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceColorProfile(
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SourceRenderingIntent(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementRenderingIntent* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceRenderingIntent(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementRenderingIntent value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_OutputColorProfile(
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_OutputColorProfile(
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_OutputRenderingIntent(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementRenderingIntent* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_OutputRenderingIntent(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementRenderingIntent value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Quality(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementEffectQuality* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Quality(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementEffectQuality value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorManagementEffect = _uuidof(IColorManagementEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementEffectStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("31c7af98-f2d4-55fc-b129-a70736e6da05")
                    IColorManagementEffectStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE IsBestQualitySupported(
                            ABI::Microsoft::Graphics::Canvas::ICanvasDevice* device,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorManagementEffectStatics = _uuidof(IColorManagementEffectStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfile
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfile[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfile";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("5123a56b-b199-47ab-aebe-d308044423fe")
                    IColorManagementProfile : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ColorSpace(
                            ABI::Microsoft::Graphics::Canvas::CanvasColorSpace* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IccProfile(
                            UINT32* valueElementsLength,
                            BYTE** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Type(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementProfileType* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SimpleProfile(
                            __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ExtendedColorSpace(
                            ABI::Microsoft::Graphics::Canvas::Effects::ExtendedColorSpace* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorManagementProfile = _uuidof(IColorManagementProfile);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfileFactory
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfileFactory[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfileFactory";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7a0f1c98-94c6-4621-9877-c51a17823edf")
                    IColorManagementProfileFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            ABI::Microsoft::Graphics::Canvas::CanvasColorSpace colorSpace,
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorManagementProfileFactory = _uuidof(IColorManagementProfileFactory);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfileStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfileStatics[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfileStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("94eef610-03bd-4e82-9479-62a616be75f1")
                    IColorManagementProfileStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateCustom(
                            UINT32 iccProfileLength,
                            BYTE* iccProfile,
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateSimple(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementSimpleProfile simpleProfile,
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateExtended(
                            ABI::Microsoft::Graphics::Canvas::Effects::ExtendedColorSpace colorSpace,
                            ABI::Microsoft::Graphics::Canvas::Effects::IColorManagementProfile** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE IsSupported(
                            ABI::Microsoft::Graphics::Canvas::Effects::ColorManagementProfileType type,
                            ABI::Microsoft::Graphics::Canvas::ICanvasDevice* device,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorManagementProfileStatics = _uuidof(IColorManagementProfileStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("e6ae54c4-883d-588e-b451-e9ebe3830437")
                    IColorMatrixEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ColorMatrix(
                            ABI::Microsoft::Graphics::Canvas::Effects::Matrix5x4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorMatrix(
                            ABI::Microsoft::Graphics::Canvas::Effects::Matrix5x4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorMatrixEffect = _uuidof(IColorMatrixEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorSourceEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorSourceEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorSourceEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorSourceEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("25f942c7-7fee-518a-ba7b-22a0060af7f6")
                    IColorSourceEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IColorSourceEffect = _uuidof(IColorSourceEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICompositeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CompositeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICompositeEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("f8808c48-cdc7-5db4-807c-b9344ff71984")
                    ICompositeEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Mode(
                            ABI::Microsoft::Graphics::Canvas::CanvasComposite* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Mode(
                            ABI::Microsoft::Graphics::Canvas::CanvasComposite value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Sources(
                            __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICompositeEffect = _uuidof(ICompositeEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IContrastEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ContrastEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IContrastEffect[] = L"Microsoft.Graphics.Canvas.Effects.IContrastEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("da8a2b9f-594e-560a-9eaa-1f912408fe79")
                    IContrastEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Contrast(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Contrast(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampSource(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampSource(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IContrastEffect = _uuidof(IContrastEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IConvolveMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("82961257-a78d-5440-8026-af57d4a76a9e")
                    IConvolveMatrixEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_KernelScale(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_KernelScale(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_KernelWidth(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_KernelWidth(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_KernelHeight(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_KernelHeight(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_KernelMatrix(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_KernelMatrix(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Divisor(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Divisor(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Offset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Offset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_KernelOffset(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_KernelOffset(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_PreserveAlpha(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_PreserveAlpha(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IConvolveMatrixEffect = _uuidof(IConvolveMatrixEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICropEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CropEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICropEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICropEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("d8a1c2a5-e031-566d-8f7c-ba07cfb58aae")
                    ICropEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SourceRectangle(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceRectangle(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICropEffect = _uuidof(ICropEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICrossFadeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("be161a9f-43d2-5613-8600-d51e3d7ce288")
                    ICrossFadeEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CrossFade(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CrossFade(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICrossFadeEffect = _uuidof(ICrossFadeEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICrossFadeEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICrossFadeEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.ICrossFadeEffectStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("a3b67330-6284-5ef6-99e8-b4b05d2b8bfc")
                    ICrossFadeEffectStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_IsSupported(
                            boolean* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICrossFadeEffectStatics = _uuidof(ICrossFadeEffectStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDirectionalBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("5d155c4b-0882-506a-a8e1-12e1ead17f0a")
                    IDirectionalBlurEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_BlurAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlurAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Angle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Angle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDirectionalBlurEffect = _uuidof(IDirectionalBlurEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDiscreteTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7f1f54f9-21b5-5b91-9506-832c536fddfa")
                    IDiscreteTransferEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RedTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDiscreteTransferEffect = _uuidof(IDiscreteTransferEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDisplacementMapEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("45f57c50-d4d9-5af1-8a6b-50378f3498a2")
                    IDisplacementMapEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_XChannelSelect(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectChannelSelect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_XChannelSelect(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectChannelSelect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_YChannelSelect(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectChannelSelect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_YChannelSelect(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectChannelSelect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Displacement(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Displacement(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDisplacementMapEffect = _uuidof(IDisplacementMapEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDistantDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("d501b10b-b445-50f4-8b8f-cdecfcdd1321")
                    IDistantDiffuseEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Azimuth(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Azimuth(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Elevation(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Elevation(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_DiffuseAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_DiffuseAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDistantDiffuseEffect = _uuidof(IDistantDiffuseEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDistantSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("a7a828df-3072-545f-8d75-86c100f03231")
                    IDistantSpecularEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Azimuth(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Azimuth(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Elevation(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Elevation(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDistantSpecularEffect = _uuidof(IDistantSpecularEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDpiCompensationEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("636597cd-f94a-55b6-9cf0-694a53d638ea")
                    IDpiCompensationEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SourceDpi(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceDpi(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IDpiCompensationEffect = _uuidof(IDpiCompensationEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEdgeDetectionEffect[] = L"Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("69f6cf3a-f38f-5a88-974a-29390b957e5c")
                    IEdgeDetectionEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlurAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlurAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EdgeDetectionEffectMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EdgeDetectionEffectMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_OverlayEdges(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_OverlayEdges(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEdgeDetectionEffect = _uuidof(IEdgeDetectionEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEffectTransferTable3D[] = L"Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7af06b86-2c45-49c8-8f44-e15a6d4fa44e")
                    IEffectTransferTable3D : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Device(
                            ABI::Microsoft::Graphics::Canvas::ICanvasDevice** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEffectTransferTable3D = _uuidof(IEffectTransferTable3D);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3DStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEffectTransferTable3DStatics[] = L"Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3DStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("3cb83559-216a-4bca-9bb6-e233c5ad2c48")
                    IEffectTransferTable3DStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateFromColors(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreator* resourceCreator,
                            UINT32 colorsLength,
                            ABI::Windows::UI::Color* colors,
                            INT32 sizeB,
                            INT32 sizeG,
                            INT32 sizeR,
                            ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3D** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE CreateFromBytes(
                            ABI::Microsoft::Graphics::Canvas::ICanvasResourceCreator* resourceCreator,
                            UINT32 bytesLength,
                            BYTE* bytes,
                            INT32 sizeB,
                            INT32 sizeG,
                            INT32 sizeR,
                            ABI::Windows::Graphics::DirectX::DirectXPixelFormat format,
                            ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3D** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEffectTransferTable3DStatics = _uuidof(IEffectTransferTable3DStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEmbossEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EmbossEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEmbossEffect[] = L"Microsoft.Graphics.Canvas.Effects.IEmbossEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("617bff35-481c-5596-aba5-00a162349d7b")
                    IEmbossEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Angle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Angle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEmbossEffect = _uuidof(IEmbossEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IExposureEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ExposureEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IExposureEffect[] = L"Microsoft.Graphics.Canvas.Effects.IExposureEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("b9e20a03-2232-5fd3-b408-15784b79dbb0")
                    IExposureEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Exposure(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Exposure(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IExposureEffect = _uuidof(IExposureEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GammaTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGammaTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("b4576b6b-6c3e-534a-8576-d46df4fce93d")
                    IGammaTransferEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RedAmplitude(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedAmplitude(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenAmplitude(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenAmplitude(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueAmplitude(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueAmplitude(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaAmplitude(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaAmplitude(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGammaTransferEffect = _uuidof(IGammaTransferEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGaussianBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("a82ec394-6734-5830-9123-2c82b27dd3c0")
                    IGaussianBlurEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_BlurAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlurAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGaussianBlurEffect = _uuidof(IGaussianBlurEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GrayscaleEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGrayscaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("78e13b83-0638-53f8-b0b3-5b0b320a9ad2")
                    IGrayscaleEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGrayscaleEffect = _uuidof(IGrayscaleEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHighlightsAndShadowsEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7f90be14-267e-5088-bc36-2e0aad869b52")
                    IHighlightsAndShadowsEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Highlights(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Highlights(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Shadows(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Shadows(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Clarity(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Clarity(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MaskBlurAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaskBlurAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SourceIsLinearGamma(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceIsLinearGamma(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHighlightsAndShadowsEffect = _uuidof(IHighlightsAndShadowsEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHueRotationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HueRotationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHueRotationEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHueRotationEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("c172ebf2-e35f-58ae-ad2c-561eceaf2694")
                    IHueRotationEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Angle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Angle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHueRotationEffect = _uuidof(IHueRotationEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HueToRgbEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHueToRgbEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("1e97c12c-b743-53d0-88c4-8435272b0a3d")
                    IHueToRgbEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SourceColorSpace(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectHueColorSpace* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceColorSpace(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectHueColorSpace value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IHueToRgbEffect = _uuidof(IHueToRgbEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IInvertEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.InvertEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IInvertEffect[] = L"Microsoft.Graphics.Canvas.Effects.IInvertEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("d4adcdfc-0f60-524d-936a-7f2736ad33d8")
                    IInvertEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IInvertEffect = _uuidof(IInvertEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.LinearTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ILinearTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("43d27ad0-8937-5fdb-876a-4e91cb47540c")
                    ILinearTransferEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RedOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedSlope(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedSlope(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenSlope(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenSlope(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueSlope(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueSlope(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaOffset(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaOffset(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaSlope(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaSlope(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILinearTransferEffect = _uuidof(ILinearTransferEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ILuminanceToAlphaEffect[] = L"Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("22364900-ac51-5bd3-8bd2-d626fc9a65f9")
                    ILuminanceToAlphaEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILuminanceToAlphaEffect = _uuidof(ILuminanceToAlphaEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IMorphologyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.MorphologyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IMorphologyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IMorphologyEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("ff065fdb-62c8-5808-921e-49efa43a3d34")
                    IMorphologyEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::MorphologyEffectMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Mode(
                            ABI::Microsoft::Graphics::Canvas::Effects::MorphologyEffectMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Width(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Width(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Height(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Height(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMorphologyEffect = _uuidof(IMorphologyEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityEffect[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("94b6ad75-c540-51b8-a9d1-544174adc68d")
                    IOpacityEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IOpacityEffect = _uuidof(IOpacityEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityEffectStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("91a7cde3-b9b7-5437-8878-fb2e14100e6d")
                    IOpacityEffectStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_IsSupported(
                            boolean* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IOpacityEffectStatics = _uuidof(IOpacityEffectStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityMetadataEffect[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("099f3299-9b0a-5ed3-b044-4a6fc96f8362")
                    IOpacityMetadataEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_OpaqueRectangle(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_OpaqueRectangle(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IOpacityMetadataEffect = _uuidof(IOpacityMetadataEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPixelShaderEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("fc8c3c31-fa96-45e2-8b72-1741c65cee8e")
                    IPixelShaderEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Properties(
                            __FIMap_2_HSTRING_IInspectable** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source3(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source4(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source5(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source6(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source7(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source8(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source3(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source4(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source5(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source6(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source7(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source8(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source3Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source4Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source5Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source6Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source7Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source8Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source3Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source4Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source5Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source6Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source7Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source8Mapping(
                            ABI::Microsoft::Graphics::Canvas::Effects::SamplerCoordinateMapping value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source3BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source4BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source5BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source6BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source7BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source8BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source3BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source4BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source5BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source6BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source7BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source8BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MaxSamplerOffset(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaxSamplerOffset(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source1Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source2Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source3Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source4Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source5Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source6Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source7Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source8Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source1Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source2Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source3Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source4Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source5Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source6Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source7Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source8Interpolation(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE IsSupported(
                            ABI::Microsoft::Graphics::Canvas::ICanvasDevice* device,
                            boolean* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPixelShaderEffect = _uuidof(IPixelShaderEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPixelShaderEffectFactory
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPixelShaderEffectFactory[] = L"Microsoft.Graphics.Canvas.Effects.IPixelShaderEffectFactory";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("9d1727e5-489d-4abc-b129-5361e3534af4")
                    IPixelShaderEffectFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Create(
                            UINT32 shaderCodeLength,
                            BYTE* shaderCode,
                            ABI::Microsoft::Graphics::Canvas::Effects::IPixelShaderEffect** effect
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPixelShaderEffectFactory = _uuidof(IPixelShaderEffectFactory);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPointDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("6cce09ec-f847-5661-af4b-531dd3dd7d6e")
                    IPointDiffuseEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_DiffuseAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_DiffuseAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPointDiffuseEffect = _uuidof(IPointDiffuseEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PointSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPointSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("ec8afe9b-8501-5286-a43c-1afff7420ad6")
                    IPointSpecularEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPointSpecularEffect = _uuidof(IPointSpecularEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPosterizeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PosterizeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPosterizeEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPosterizeEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("2f631a3b-c89a-507c-9756-299b61434fa4")
                    IPosterizeEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RedValueCount(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedValueCount(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenValueCount(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenValueCount(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueValueCount(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueValueCount(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPosterizeEffect = _uuidof(IPosterizeEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PremultiplyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("d29a9d1e-bd57-5f3e-9ae0-009c6ac5b06d")
                    IPremultiplyEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPremultiplyEffect = _uuidof(IPremultiplyEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.RgbToHueEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IRgbToHueEffect[] = L"Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7caeadc6-9eb3-5895-b876-f485c9574847")
                    IRgbToHueEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_OutputColorSpace(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectHueColorSpace* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_OutputColorSpace(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectHueColorSpace value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRgbToHueEffect = _uuidof(IRgbToHueEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISaturationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SaturationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISaturationEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISaturationEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("f85a5ed7-7212-57a6-b357-61038961c58d")
                    ISaturationEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Saturation(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Saturation(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISaturationEffect = _uuidof(ISaturationEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IScaleEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ScaleEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IScaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.IScaleEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7522ae90-bec2-512c-bcc0-4d6a97e3ed34")
                    IScaleEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Scale(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Scale(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Sharpness(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Sharpness(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IScaleEffect = _uuidof(IScaleEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISepiaEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SepiaEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISepiaEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISepiaEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("f933471f-a7af-5521-be79-b0da22976cff")
                    ISepiaEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISepiaEffect = _uuidof(ISepiaEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IShadowEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ShadowEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IShadowEffect[] = L"Microsoft.Graphics.Canvas.Effects.IShadowEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("3947c621-78da-5489-9927-be655f4576e2")
                    IShadowEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_BlurAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlurAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ShadowColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ShadowColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Optimization(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectOptimization value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ShadowColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ShadowColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IShadowEffect = _uuidof(IShadowEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISharpenEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SharpenEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISharpenEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISharpenEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("7efef0a1-7578-5f62-8364-46145674ef7e")
                    ISharpenEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Threshold(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Threshold(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISharpenEffect = _uuidof(ISharpenEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISpotDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("b3dcbe44-1dd7-5cb3-95e5-a48974cd12e8")
                    ISpotDiffuseEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightTarget(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightTarget(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Focus(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Focus(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LimitingConeAngle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LimitingConeAngle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_DiffuseAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_DiffuseAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISpotDiffuseEffect = _uuidof(ISpotDiffuseEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISpotSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("83ae4cd0-80aa-5783-8572-f15e5f85329e")
                    ISpotSpecularEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightPosition(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightTarget(
                            ABI::Windows::Foundation::Numerics::Vector3* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightTarget(
                            ABI::Windows::Foundation::Numerics::Vector3 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Focus(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Focus(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LimitingConeAngle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LimitingConeAngle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularExponent(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularExponent(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpecularAmount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpecularAmount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapScale(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapScale(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapKernelSize(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_HeightMapInterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LightColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISpotSpecularEffect = _uuidof(ISpotSpecularEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IStraightenEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.StraightenEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IStraightenEffect[] = L"Microsoft.Graphics.Canvas.Effects.IStraightenEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("965fc262-2eba-59e6-935f-2389cb5a305a")
                    IStraightenEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Angle(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Angle(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MaintainSize(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MaintainSize(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IStraightenEffect = _uuidof(IStraightenEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITableTransfer3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("ef09c6e0-9437-53f7-b7b4-b53c79a0bc37")
                    ITableTransfer3DEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Table(
                            ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3D** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Table(
                            ABI::Microsoft::Graphics::Canvas::Effects::IEffectTransferTable3D* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasAlphaMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITableTransfer3DEffect = _uuidof(ITableTransfer3DEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITableTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TableTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITableTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITableTransferEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("bf0b63b6-fe77-5198-a2a1-3fb80c268b8f")
                    ITableTransferEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RedTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RedDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RedDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GreenDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GreenDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BlueDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BlueDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaTable(
                            UINT32* valueElementsLength,
                            FLOAT** valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaTable(
                            UINT32 valueElementsLength,
                            FLOAT* valueElements
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlphaDisable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlphaDisable(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITableTransferEffect = _uuidof(ITableTransferEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITemperatureAndTintEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("8ae43e02-2619-5d78-8980-4ed569549bd8")
                    ITemperatureAndTintEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Temperature(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Temperature(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Tint(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Tint(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITemperatureAndTintEffect = _uuidof(ITemperatureAndTintEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITileEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TileEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITileEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITileEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("78a809cb-1154-5ad6-a880-e3a175772815")
                    ITileEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SourceRectangle(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SourceRectangle(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITileEffect = _uuidof(ITileEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITintEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITintEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITintEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("729a21ea-c61e-5308-9eae-d638aa1f5b8c")
                    ITintEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ClampOutput(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ClampOutput(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITintEffect = _uuidof(ITintEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITintEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITintEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.ITintEffectStatics";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("65e31771-4baf-5c8c-93f4-3b874e29f68d")
                    ITintEffectStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_IsSupported(
                            boolean* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITintEffectStatics = _uuidof(ITintEffectStatics);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITransform2DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.Transform2DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITransform2DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITransform2DEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("4467d118-33e7-5b1a-87c2-0f1f0497353d")
                    ITransform2DEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                            ABI::Windows::Foundation::Numerics::Matrix3x2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                            ABI::Windows::Foundation::Numerics::Matrix3x2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Sharpness(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Sharpness(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITransform2DEffect = _uuidof(ITransform2DEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITransform3DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.Transform3DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITransform3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITransform3DEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("3025ed7f-8f25-5e0b-80c9-56bbdd3e8a10")
                    ITransform3DEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationMode(
                            ABI::Microsoft::Graphics::Canvas::CanvasImageInterpolation value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                            ABI::Microsoft::Graphics::Canvas::Effects::EffectBorderMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                            ABI::Windows::Foundation::Numerics::Matrix4x4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                            ABI::Windows::Foundation::Numerics::Matrix4x4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITransform3DEffect = _uuidof(ITransform3DEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TurbulenceEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITurbulenceEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("1cb1b33d-20e9-564b-856e-37e9fa1d0016")
                    ITurbulenceEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Offset(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Offset(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Size(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Size(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Frequency(
                            ABI::Windows::Foundation::Numerics::Vector2* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Frequency(
                            ABI::Windows::Foundation::Numerics::Vector2 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Octaves(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Octaves(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Seed(
                            INT32* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Seed(
                            INT32 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Noise(
                            ABI::Microsoft::Graphics::Canvas::Effects::TurbulenceEffectNoise* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Noise(
                            ABI::Microsoft::Graphics::Canvas::Effects::TurbulenceEffectNoise value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Tileable(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Tileable(
                            boolean value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITurbulenceEffect = _uuidof(ITurbulenceEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IUnPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("73098bb4-dcf1-5403-af44-3344d2982d40")
                    IUnPremultiplyEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IUnPremultiplyEffect = _uuidof(IUnPremultiplyEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IVignetteEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.VignetteEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IVignetteEffect[] = L"Microsoft.Graphics.Canvas.Effects.IVignetteEffect";
namespace ABI {
    namespace Microsoft {
        namespace Graphics {
            namespace Canvas {
                namespace Effects {
                    MIDL_INTERFACE("574d0f9f-eec7-5989-ac53-135868cf5e0c")
                    IVignetteEffect : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Amount(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Amount(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Curve(
                            FLOAT* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Curve(
                            FLOAT value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorHdr(
                            ABI::Windows::Foundation::Numerics::Vector4 value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource** source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Source(
                            ABI::Windows::Graphics::Effects::IGraphicsEffectSource* source
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IVignetteEffect = _uuidof(IVignetteEffect);
                } /* Effects */
            } /* Canvas */
        } /* Graphics */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__) */

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect[] = L"Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.AtlasEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IAtlasEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AtlasEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AtlasEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_AtlasEffect[] = L"Microsoft.Graphics.Canvas.Effects.AtlasEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BlendEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBlendEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BlendEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BlendEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BlendEffect[] = L"Microsoft.Graphics.Canvas.Effects.BlendEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BorderEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBorderEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BorderEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BorderEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BorderEffect[] = L"Microsoft.Graphics.Canvas.Effects.BorderEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BrightnessEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBrightnessEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BrightnessEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BrightnessEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BrightnessEffect[] = L"Microsoft.Graphics.Canvas.Effects.BrightnessEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect[] = L"Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorManagementEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorManagementEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorManagementProfile ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile[] = L"Microsoft.Graphics.Canvas.Effects.ColorManagementProfile";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorSourceEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorSourceEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorSourceEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CompositeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICompositeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CompositeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CompositeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.CompositeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ContrastEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IContrastEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ContrastEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ContrastEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ContrastEffect[] = L"Microsoft.Graphics.Canvas.Effects.ContrastEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CropEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICropEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CropEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CropEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CropEffect[] = L"Microsoft.Graphics.Canvas.Effects.CropEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect[] = L"Microsoft.Graphics.Canvas.Effects.CrossFadeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect[] = L"Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect[] = L"Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect[] = L"Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D[] = L"Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EmbossEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEmbossEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EmbossEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EmbossEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EmbossEffect[] = L"Microsoft.Graphics.Canvas.Effects.EmbossEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ExposureEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IExposureEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ExposureEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ExposureEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ExposureEffect[] = L"Microsoft.Graphics.Canvas.Effects.ExposureEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GammaTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.GammaTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GrayscaleEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.GrayscaleEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect[] = L"Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HueRotationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHueRotationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueRotationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueRotationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HueRotationEffect[] = L"Microsoft.Graphics.Canvas.Effects.HueRotationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HueToRgbEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect[] = L"Microsoft.Graphics.Canvas.Effects.HueToRgbEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.InvertEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IInvertEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_InvertEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_InvertEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_InvertEffect[] = L"Microsoft.Graphics.Canvas.Effects.InvertEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.LinearTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.LinearTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect[] = L"Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.MorphologyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IMorphologyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_MorphologyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_MorphologyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_MorphologyEffect[] = L"Microsoft.Graphics.Canvas.Effects.MorphologyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IOpacityEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_OpacityEffect[] = L"Microsoft.Graphics.Canvas.Effects.OpacityEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect[] = L"Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect[] = L"Microsoft.Graphics.Canvas.Effects.PixelShaderEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PointSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.PointSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PosterizeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPosterizeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PosterizeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PosterizeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PosterizeEffect[] = L"Microsoft.Graphics.Canvas.Effects.PosterizeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PremultiplyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.PremultiplyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.RgbToHueEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect[] = L"Microsoft.Graphics.Canvas.Effects.RgbToHueEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SaturationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISaturationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SaturationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SaturationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SaturationEffect[] = L"Microsoft.Graphics.Canvas.Effects.SaturationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ScaleEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IScaleEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ScaleEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ScaleEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ScaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.ScaleEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SepiaEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISepiaEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SepiaEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SepiaEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SepiaEffect[] = L"Microsoft.Graphics.Canvas.Effects.SepiaEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ShadowEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IShadowEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ShadowEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ShadowEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ShadowEffect[] = L"Microsoft.Graphics.Canvas.Effects.ShadowEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SharpenEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISharpenEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SharpenEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SharpenEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SharpenEffect[] = L"Microsoft.Graphics.Canvas.Effects.SharpenEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.StraightenEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IStraightenEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_StraightenEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_StraightenEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_StraightenEffect[] = L"Microsoft.Graphics.Canvas.Effects.StraightenEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TableTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITableTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TableTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.TableTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect[] = L"Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TileEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITileEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TileEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TileEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TileEffect[] = L"Microsoft.Graphics.Canvas.Effects.TileEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITintEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TintEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TintEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TintEffect[] = L"Microsoft.Graphics.Canvas.Effects.TintEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.Transform2DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITransform2DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform2DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform2DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_Transform2DEffect[] = L"Microsoft.Graphics.Canvas.Effects.Transform2DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.Transform3DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITransform3DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform3DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform3DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_Transform3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.Transform3DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TurbulenceEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect[] = L"Microsoft.Graphics.Canvas.Effects.TurbulenceEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.VignetteEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IVignetteEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_VignetteEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_VignetteEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_VignetteEffect[] = L"Microsoft.Graphics.Canvas.Effects.VignetteEffect";
#endif

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_IInspectable __FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_IInspectable;

typedef struct __FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIKeyValuePair_2_HSTRING_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIKeyValuePair_2_HSTRING_IInspectable_get_Key(This, result) \
    ((This)->lpVtbl->get_Key(This, result))

#define __FIKeyValuePair_2_HSTRING_IInspectable_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        __FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable;

typedef struct __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable* This,
        __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable** result);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

typedef struct __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

interface __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource
{
    CONST_VTBL struct __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

typedef struct __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __FIIterator_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource** result);

    END_INTERFACE
} __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

interface __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource
{
    CONST_VTBL struct __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef interface __FIMapView_2_HSTRING_IInspectable __FIMapView_2_HSTRING_IInspectable;

#if !defined(____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_IInspectable __FIMapView_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_IInspectable;

typedef struct __FIMapView_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMapView_2_HSTRING_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMapView_2_HSTRING_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMapView_2_HSTRING_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__FIMapView_2_HSTRING_IInspectable* This,
        __FIMapView_2_HSTRING_IInspectable** first,
        __FIMapView_2_HSTRING_IInspectable** second);

    END_INTERFACE
} __FIMapView_2_HSTRING_IInspectableVtbl;

interface __FIMapView_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMapView_2_HSTRING_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMapView_2_HSTRING_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMapView_2_HSTRING_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMapView_2_HSTRING_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMapView_2_HSTRING_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMapView_2_HSTRING_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMapView_2_HSTRING_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMapView_2_HSTRING_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMapView_2_HSTRING_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMapView_2_HSTRING_IInspectable_Split(This, first, second) \
    ((This)->lpVtbl->Split(This, first, second))

#endif /* COBJMACROS */

#endif // ____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_IInspectable __FIMap_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_IInspectable;

typedef struct __FIMap_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIMap_2_HSTRING_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIMap_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIMap_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIMap_2_HSTRING_IInspectable* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIMap_2_HSTRING_IInspectable* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIMap_2_HSTRING_IInspectable* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Lookup)(__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIMap_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIMap_2_HSTRING_IInspectable* This,
        __FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIMap_2_HSTRING_IInspectable* This);

    END_INTERFACE
} __FIMap_2_HSTRING_IInspectableVtbl;

interface __FIMap_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIMap_2_HSTRING_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIMap_2_HSTRING_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIMap_2_HSTRING_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIMap_2_HSTRING_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIMap_2_HSTRING_IInspectable_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIMap_2_HSTRING_IInspectable_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIMap_2_HSTRING_IInspectable_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIMap_2_HSTRING_IInspectable_Lookup(This, key, result) \
    ((This)->lpVtbl->Lookup(This, key, result))

#define __FIMap_2_HSTRING_IInspectable_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIMap_2_HSTRING_IInspectable_HasKey(This, key, result) \
    ((This)->lpVtbl->HasKey(This, key, result))

#define __FIMap_2_HSTRING_IInspectable_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIMap_2_HSTRING_IInspectable_Insert(This, key, value, result) \
    ((This)->lpVtbl->Insert(This, key, value, result))

#define __FIMap_2_HSTRING_IInspectable_Remove(This, key) \
    ((This)->lpVtbl->Remove(This, key))

#define __FIMap_2_HSTRING_IInspectable_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#endif /* COBJMACROS */

#endif // ____FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

typedef struct __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

interface __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource
{
    CONST_VTBL struct __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource;

typedef struct __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __FIVectorView_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items);

    END_INTERFACE
} __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

interface __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource
{
    CONST_VTBL struct __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision;

#if !defined(____FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__)
#define ____FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__

typedef interface __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision;

typedef struct __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision* result);

    END_INTERFACE
} __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl;

interface __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision
{
    CONST_VTBL struct __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile;

#if !defined(____FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__)
#define ____FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__

typedef interface __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile;

typedef struct __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile* result);

    END_INTERFACE
} __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl;

interface __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile
{
    CONST_VTBL struct __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 __x_ABI_CWindows_CFoundation_CNumerics_CVector4;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4 __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4;

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.BlendEffectMode
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode
{
    BlendEffectMode_Multiply = 0,
    BlendEffectMode_Screen = 1,
    BlendEffectMode_Darken = 2,
    BlendEffectMode_Lighten = 3,
    BlendEffectMode_Dissolve = 4,
    BlendEffectMode_ColorBurn = 5,
    BlendEffectMode_LinearBurn = 6,
    BlendEffectMode_DarkerColor = 7,
    BlendEffectMode_LighterColor = 8,
    BlendEffectMode_ColorDodge = 9,
    BlendEffectMode_LinearDodge = 10,
    BlendEffectMode_Overlay = 11,
    BlendEffectMode_SoftLight = 12,
    BlendEffectMode_HardLight = 13,
    BlendEffectMode_VividLight = 14,
    BlendEffectMode_LinearLight = 15,
    BlendEffectMode_PinLight = 16,
    BlendEffectMode_HardMix = 17,
    BlendEffectMode_Difference = 18,
    BlendEffectMode_Exclusion = 19,
    BlendEffectMode_Hue = 20,
    BlendEffectMode_Saturation = 21,
    BlendEffectMode_Color = 22,
    BlendEffectMode_Luminosity = 23,
    BlendEffectMode_Subtract = 24,
    BlendEffectMode_Division = 25,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementEffectQuality
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality
{
    ColorManagementEffectQuality_Proof = 0,
    ColorManagementEffectQuality_Normal = 1,
    ColorManagementEffectQuality_Best = 2,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementGamma
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma
{
    ColorManagementGamma_G22 = 0,
    ColorManagementGamma_G10 = 1,
    ColorManagementGamma_G2084 = 2,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementProfileType
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType
{
    ColorManagementProfileType_Icc = 0,
    ColorManagementProfileType_Simple = 1,
    ColorManagementProfileType_Extended = 2,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementRenderingIntent
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent
{
    ColorManagementRenderingIntent_Perceptual = 0,
    ColorManagementRenderingIntent_RelativeColorimetric = 1,
    ColorManagementRenderingIntent_Saturation = 2,
    ColorManagementRenderingIntent_AbsoluteColorimetric = 3,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode
{
    EdgeDetectionEffectMode_Sobel = 0,
    EdgeDetectionEffectMode_Prewitt = 1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectBorderMode
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode
{
    EffectBorderMode_Soft = 0,
    EffectBorderMode_Hard = 1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectChannelSelect
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect
{
    EffectChannelSelect_Red = 0,
    EffectChannelSelect_Green = 1,
    EffectChannelSelect_Blue = 2,
    EffectChannelSelect_Alpha = 3,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectHueColorSpace
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace
{
    EffectHueColorSpace_Hsv = 0,
    EffectHueColorSpace_Hsl = 1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.EffectOptimization
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization
{
    EffectOptimization_Speed = 0,
    EffectOptimization_Balanced = 1,
    EffectOptimization_Quality = 2,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ExtendedColorSpace
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace
{
    ExtendedColorSpace_FullG22P709 = 0,
    ExtendedColorSpace_FullG10P709 = 1,
    ExtendedColorSpace_StudioG22P709 = 2,
    ExtendedColorSpace_StudioG22P2020 = 3,
    ExtendedColorSpace_FullG2084P2020 = 12,
    ExtendedColorSpace_StudioG2084P2020 = 14,
    ExtendedColorSpace_FullG22P2020 = 17,
    ExtendedColorSpace_Custom = -1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.MorphologyEffectMode
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode
{
    MorphologyEffectMode_Erode = 0,
    MorphologyEffectMode_Dilate = 1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.SamplerCoordinateMapping
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping
{
    SamplerCoordinateMapping_Unknown = 0,
    SamplerCoordinateMapping_OneToOne = 1,
    SamplerCoordinateMapping_Offset = 2,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.TurbulenceEffectNoise
 *
 */
enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise
{
    TurbulenceEffectNoise_FractalSum = 0,
    TurbulenceEffectNoise_Turbulence = 1,
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.ColorManagementSimpleProfile
 *
 */
struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile
{
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 RedPrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 GreenPrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 BluePrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 WhitePointXZ;
    enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma Gamma;
};

/*
 *
 * Struct Microsoft.Graphics.Canvas.Effects.Matrix5x4
 *
 */
struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4
{
    FLOAT M11;
    FLOAT M12;
    FLOAT M13;
    FLOAT M14;
    FLOAT M21;
    FLOAT M22;
    FLOAT M23;
    FLOAT M24;
    FLOAT M31;
    FLOAT M32;
    FLOAT M33;
    FLOAT M34;
    FLOAT M41;
    FLOAT M42;
    FLOAT M43;
    FLOAT M44;
    FLOAT M51;
    FLOAT M52;
    FLOAT M53;
    FLOAT M54;
};

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAlphaMaskEffect[] = L"Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMask)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMask)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_get_AlphaMask(This, source) \
    ((This)->lpVtbl->get_AlphaMask(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_put_AlphaMask(This, source) \
    ((This)->lpVtbl->put_AlphaMask(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAlphaMaskEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffectStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_get_IsSupported(This, value) \
    ((This)->lpVtbl->get_IsSupported(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IArithmeticCompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MultiplyAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MultiplyAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source1Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_MultiplyAmount(This, value) \
    ((This)->lpVtbl->get_MultiplyAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_MultiplyAmount(This, value) \
    ((This)->lpVtbl->put_MultiplyAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_Source1Amount(This, value) \
    ((This)->lpVtbl->get_Source1Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_Source1Amount(This, value) \
    ((This)->lpVtbl->put_Source1Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_Source2Amount(This, value) \
    ((This)->lpVtbl->get_Source2Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_Source2Amount(This, value) \
    ((This)->lpVtbl->put_Source2Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_Source1(This, source) \
    ((This)->lpVtbl->get_Source1(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_Source1(This, source) \
    ((This)->lpVtbl->put_Source1(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_get_Source2(This, source) \
    ((This)->lpVtbl->get_Source2(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_put_Source2(This, source) \
    ((This)->lpVtbl->put_Source2(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IAtlasEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.AtlasEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IAtlasEffect[] = L"Microsoft.Graphics.Canvas.Effects.IAtlasEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_PaddingRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_get_SourceRectangle(This, value) \
    ((This)->lpVtbl->get_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_put_SourceRectangle(This, value) \
    ((This)->lpVtbl->put_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_get_PaddingRectangle(This, value) \
    ((This)->lpVtbl->get_PaddingRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_put_PaddingRectangle(This, value) \
    ((This)->lpVtbl->put_PaddingRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBlendEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BlendEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBlendEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBlendEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_get_Mode(This, value) \
    ((This)->lpVtbl->get_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_put_Mode(This, value) \
    ((This)->lpVtbl->put_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_get_Background(This, source) \
    ((This)->lpVtbl->get_Background(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_put_Background(This, source) \
    ((This)->lpVtbl->put_Background(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_get_Foreground(This, source) \
    ((This)->lpVtbl->get_Foreground(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_put_Foreground(This, source) \
    ((This)->lpVtbl->put_Foreground(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBorderEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BorderEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBorderEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBorderEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendX)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendX)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendY)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendY)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_get_ExtendX(This, value) \
    ((This)->lpVtbl->get_ExtendX(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_put_ExtendX(This, value) \
    ((This)->lpVtbl->put_ExtendX(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_get_ExtendY(This, value) \
    ((This)->lpVtbl->get_ExtendY(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_put_ExtendY(This, value) \
    ((This)->lpVtbl->put_ExtendY(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IBrightnessEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.BrightnessEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IBrightnessEffect[] = L"Microsoft.Graphics.Canvas.Effects.IBrightnessEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_WhitePoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_WhitePoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_BlackPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_BlackPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_get_WhitePoint(This, value) \
    ((This)->lpVtbl->get_WhitePoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_put_WhitePoint(This, value) \
    ((This)->lpVtbl->put_WhitePoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_get_BlackPoint(This, value) \
    ((This)->lpVtbl->get_BlackPoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_put_BlackPoint(This, value) \
    ((This)->lpVtbl->put_BlackPoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICanvasEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICanvasEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CacheOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CacheOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BufferPrecision)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision** value);
    HRESULT (STDMETHODCALLTYPE* put_BufferPrecision)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __FIReference_1_Microsoft__CGraphics__CCanvas__CCanvasBufferPrecision* value);
    HRESULT (STDMETHODCALLTYPE* InvalidateSourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        UINT32 sourceIndex,
        struct __x_ABI_CWindows_CFoundation_CRect invalidRectangle);
    HRESULT (STDMETHODCALLTYPE* GetInvalidRectangles)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        UINT32* valueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CRect** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetRequiredSourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        struct __x_ABI_CWindows_CFoundation_CRect outputRectangle,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* sourceEffect,
        UINT32 sourceIndex,
        struct __x_ABI_CWindows_CFoundation_CRect sourceBounds,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* GetRequiredSourceRectangles)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        struct __x_ABI_CWindows_CFoundation_CRect outputRectangle,
        UINT32 sourceEffectsLength,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect** sourceEffects,
        UINT32 sourceIndicesLength,
        UINT32* sourceIndices,
        UINT32 sourceBoundsLength,
        struct __x_ABI_CWindows_CFoundation_CRect* sourceBounds,
        UINT32* valueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CRect** valueElements);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_get_CacheOutput(This, value) \
    ((This)->lpVtbl->get_CacheOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_put_CacheOutput(This, value) \
    ((This)->lpVtbl->put_CacheOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_get_BufferPrecision(This, value) \
    ((This)->lpVtbl->get_BufferPrecision(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_put_BufferPrecision(This, value) \
    ((This)->lpVtbl->put_BufferPrecision(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_InvalidateSourceRectangle(This, resourceCreator, sourceIndex, invalidRectangle) \
    ((This)->lpVtbl->InvalidateSourceRectangle(This, resourceCreator, sourceIndex, invalidRectangle))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetInvalidRectangles(This, resourceCreator, valueElementsLength, valueElements) \
    ((This)->lpVtbl->GetInvalidRectangles(This, resourceCreator, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetRequiredSourceRectangle(This, resourceCreator, outputRectangle, sourceEffect, sourceIndex, sourceBounds, value) \
    ((This)->lpVtbl->GetRequiredSourceRectangle(This, resourceCreator, outputRectangle, sourceEffect, sourceIndex, sourceBounds, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_GetRequiredSourceRectangles(This, resourceCreator, outputRectangle, sourceEffectsLength, sourceEffects, sourceIndicesLength, sourceIndices, sourceBoundsLength, sourceBounds, valueElementsLength, valueElements) \
    ((This)->lpVtbl->GetRequiredSourceRectangles(This, resourceCreator, outputRectangle, sourceEffectsLength, sourceEffects, sourceIndicesLength, sourceIndices, sourceBoundsLength, sourceBounds, valueElementsLength, valueElements))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IChromaKeyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Tolerance)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Tolerance)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InvertAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_InvertAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Feather)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Feather)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_Tolerance(This, value) \
    ((This)->lpVtbl->get_Tolerance(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_Tolerance(This, value) \
    ((This)->lpVtbl->put_Tolerance(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_InvertAlpha(This, value) \
    ((This)->lpVtbl->get_InvertAlpha(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_InvertAlpha(This, value) \
    ((This)->lpVtbl->put_InvertAlpha(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_Feather(This, value) \
    ((This)->lpVtbl->get_Feather(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_Feather(This, value) \
    ((This)->lpVtbl->put_Feather(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_ColorHdr(This, value) \
    ((This)->lpVtbl->get_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_ColorHdr(This, value) \
    ((This)->lpVtbl->put_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent value);
    HRESULT (STDMETHODCALLTYPE* get_OutputColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_OutputColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_OutputRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent* value);
    HRESULT (STDMETHODCALLTYPE* put_OutputRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality* value);
    HRESULT (STDMETHODCALLTYPE* put_Quality)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_SourceColorProfile(This, value) \
    ((This)->lpVtbl->get_SourceColorProfile(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_SourceColorProfile(This, value) \
    ((This)->lpVtbl->put_SourceColorProfile(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_SourceRenderingIntent(This, value) \
    ((This)->lpVtbl->get_SourceRenderingIntent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_SourceRenderingIntent(This, value) \
    ((This)->lpVtbl->put_SourceRenderingIntent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_OutputColorProfile(This, value) \
    ((This)->lpVtbl->get_OutputColorProfile(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_OutputColorProfile(This, value) \
    ((This)->lpVtbl->put_OutputColorProfile(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_OutputRenderingIntent(This, value) \
    ((This)->lpVtbl->get_OutputRenderingIntent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_OutputRenderingIntent(This, value) \
    ((This)->lpVtbl->put_OutputRenderingIntent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_AlphaMode(This, value) \
    ((This)->lpVtbl->put_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_Quality(This, value) \
    ((This)->lpVtbl->get_Quality(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_Quality(This, value) \
    ((This)->lpVtbl->put_Quality(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementEffectStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsBestQualitySupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_IsBestQualitySupported(This, device, result) \
    ((This)->lpVtbl->IsBestQualitySupported(This, device, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfile
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfile[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfile";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* get_IccProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        UINT32* valueElementsLength,
        BYTE** valueElements);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType* value);
    HRESULT (STDMETHODCALLTYPE* get_SimpleProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        __FIReference_1_Microsoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_get_ColorSpace(This, value) \
    ((This)->lpVtbl->get_ColorSpace(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_get_IccProfile(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_IccProfile(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_get_Type(This, value) \
    ((This)->lpVtbl->get_Type(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_get_SimpleProfile(This, value) \
    ((This)->lpVtbl->get_SimpleProfile(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_get_ExtendedColorSpace(This, value) \
    ((This)->lpVtbl->get_ExtendedColorSpace(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfileFactory
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfileFactory[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfileFactory";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace colorSpace,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_Create(This, colorSpace, result) \
    ((This)->lpVtbl->Create(This, colorSpace, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorManagementProfileStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorManagementProfileStatics[] = L"Microsoft.Graphics.Canvas.Effects.IColorManagementProfileStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateCustom)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        UINT32 iccProfileLength,
        BYTE* iccProfile,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* CreateSimple)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile simpleProfile,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* CreateExtended)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace colorSpace,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType type,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_CreateCustom(This, iccProfileLength, iccProfile, result) \
    ((This)->lpVtbl->CreateCustom(This, iccProfileLength, iccProfile, result))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_CreateSimple(This, simpleProfile, result) \
    ((This)->lpVtbl->CreateSimple(This, simpleProfile, result))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_CreateExtended(This, colorSpace, result) \
    ((This)->lpVtbl->CreateExtended(This, colorSpace, result))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_IsSupported(This, type, device, result) \
    ((This)->lpVtbl->IsSupported(This, type, device, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4 value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_get_ColorMatrix(This, value) \
    ((This)->lpVtbl->get_ColorMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_put_ColorMatrix(This, value) \
    ((This)->lpVtbl->put_ColorMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_put_AlphaMode(This, value) \
    ((This)->lpVtbl->put_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IColorSourceEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ColorSourceEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IColorSourceEffect[] = L"Microsoft.Graphics.Canvas.Effects.IColorSourceEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_get_ColorHdr(This, value) \
    ((This)->lpVtbl->get_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_put_ColorHdr(This, value) \
    ((This)->lpVtbl->put_ColorHdr(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICompositeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CompositeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICompositeEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite value);
    HRESULT (STDMETHODCALLTYPE* get_Sources)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        __FIVector_1_Windows__CGraphics__CEffects__CIGraphicsEffectSource** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_get_Mode(This, value) \
    ((This)->lpVtbl->get_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_put_Mode(This, value) \
    ((This)->lpVtbl->put_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_get_Sources(This, value) \
    ((This)->lpVtbl->get_Sources(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IContrastEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ContrastEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IContrastEffect[] = L"Microsoft.Graphics.Canvas.Effects.IContrastEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Contrast)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Contrast)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ClampSource)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampSource)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_get_Contrast(This, value) \
    ((This)->lpVtbl->get_Contrast(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_put_Contrast(This, value) \
    ((This)->lpVtbl->put_Contrast(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_get_ClampSource(This, value) \
    ((This)->lpVtbl->get_ClampSource(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_put_ClampSource(This, value) \
    ((This)->lpVtbl->put_ClampSource(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IConvolveMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_KernelScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_KernelWidth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelWidth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KernelHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KernelMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_KernelMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_Divisor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Divisor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_KernelOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_PreserveAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreserveAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_KernelScale(This, value) \
    ((This)->lpVtbl->get_KernelScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_KernelScale(This, value) \
    ((This)->lpVtbl->put_KernelScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_KernelWidth(This, value) \
    ((This)->lpVtbl->get_KernelWidth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_KernelWidth(This, value) \
    ((This)->lpVtbl->put_KernelWidth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_KernelHeight(This, value) \
    ((This)->lpVtbl->get_KernelHeight(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_KernelHeight(This, value) \
    ((This)->lpVtbl->put_KernelHeight(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_KernelMatrix(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_KernelMatrix(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_KernelMatrix(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_KernelMatrix(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_Divisor(This, value) \
    ((This)->lpVtbl->get_Divisor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_Divisor(This, value) \
    ((This)->lpVtbl->put_Divisor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_KernelOffset(This, value) \
    ((This)->lpVtbl->get_KernelOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_KernelOffset(This, value) \
    ((This)->lpVtbl->put_KernelOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_PreserveAlpha(This, value) \
    ((This)->lpVtbl->get_PreserveAlpha(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_PreserveAlpha(This, value) \
    ((This)->lpVtbl->put_PreserveAlpha(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICropEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CropEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICropEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICropEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_get_SourceRectangle(This, value) \
    ((This)->lpVtbl->get_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_put_SourceRectangle(This, value) \
    ((This)->lpVtbl->put_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICrossFadeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CrossFade)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_CrossFade)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_get_CrossFade(This, value) \
    ((This)->lpVtbl->get_CrossFade(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_put_CrossFade(This, value) \
    ((This)->lpVtbl->put_CrossFade(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_get_Source2(This, source) \
    ((This)->lpVtbl->get_Source2(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_put_Source2(This, source) \
    ((This)->lpVtbl->put_Source2(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_get_Source1(This, source) \
    ((This)->lpVtbl->get_Source1(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_put_Source1(This, source) \
    ((This)->lpVtbl->put_Source1(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ICrossFadeEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ICrossFadeEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.ICrossFadeEffectStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_get_IsSupported(This, value) \
    ((This)->lpVtbl->get_IsSupported(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDirectionalBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_get_BlurAmount(This, value) \
    ((This)->lpVtbl->get_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_put_BlurAmount(This, value) \
    ((This)->lpVtbl->put_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_get_Angle(This, value) \
    ((This)->lpVtbl->get_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_put_Angle(This, value) \
    ((This)->lpVtbl->put_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_get_Optimization(This, value) \
    ((This)->lpVtbl->get_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_put_Optimization(This, value) \
    ((This)->lpVtbl->put_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDiscreteTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_RedTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_RedTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_RedTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_RedTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_RedDisable(This, value) \
    ((This)->lpVtbl->get_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_RedDisable(This, value) \
    ((This)->lpVtbl->put_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_GreenTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_GreenTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_GreenTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_GreenTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_GreenDisable(This, value) \
    ((This)->lpVtbl->get_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_GreenDisable(This, value) \
    ((This)->lpVtbl->put_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_BlueTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_BlueTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_BlueTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_BlueTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_BlueDisable(This, value) \
    ((This)->lpVtbl->get_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_BlueDisable(This, value) \
    ((This)->lpVtbl->put_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_AlphaTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_AlphaTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_AlphaTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_AlphaTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_AlphaDisable(This, value) \
    ((This)->lpVtbl->get_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_AlphaDisable(This, value) \
    ((This)->lpVtbl->put_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDisplacementMapEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_XChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect* value);
    HRESULT (STDMETHODCALLTYPE* put_XChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect value);
    HRESULT (STDMETHODCALLTYPE* get_YChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect* value);
    HRESULT (STDMETHODCALLTYPE* put_YChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Displacement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Displacement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_get_Amount(This, value) \
    ((This)->lpVtbl->get_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_put_Amount(This, value) \
    ((This)->lpVtbl->put_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_get_XChannelSelect(This, value) \
    ((This)->lpVtbl->get_XChannelSelect(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_put_XChannelSelect(This, value) \
    ((This)->lpVtbl->put_XChannelSelect(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_get_YChannelSelect(This, value) \
    ((This)->lpVtbl->get_YChannelSelect(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_put_YChannelSelect(This, value) \
    ((This)->lpVtbl->put_YChannelSelect(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_get_Displacement(This, source) \
    ((This)->lpVtbl->get_Displacement(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_put_Displacement(This, source) \
    ((This)->lpVtbl->put_Displacement(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDistantDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_Azimuth(This, value) \
    ((This)->lpVtbl->get_Azimuth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_Azimuth(This, value) \
    ((This)->lpVtbl->put_Azimuth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_Elevation(This, value) \
    ((This)->lpVtbl->get_Elevation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_Elevation(This, value) \
    ((This)->lpVtbl->put_Elevation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_DiffuseAmount(This, value) \
    ((This)->lpVtbl->get_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_DiffuseAmount(This, value) \
    ((This)->lpVtbl->put_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDistantSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_Azimuth(This, value) \
    ((This)->lpVtbl->get_Azimuth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_Azimuth(This, value) \
    ((This)->lpVtbl->put_Azimuth(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_Elevation(This, value) \
    ((This)->lpVtbl->get_Elevation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_Elevation(This, value) \
    ((This)->lpVtbl->put_Elevation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_SpecularExponent(This, value) \
    ((This)->lpVtbl->get_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_SpecularExponent(This, value) \
    ((This)->lpVtbl->put_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_SpecularAmount(This, value) \
    ((This)->lpVtbl->get_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_SpecularAmount(This, value) \
    ((This)->lpVtbl->put_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IDpiCompensationEffect[] = L"Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDpi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceDpi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_get_SourceDpi(This, value) \
    ((This)->lpVtbl->get_SourceDpi(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_put_SourceDpi(This, value) \
    ((This)->lpVtbl->put_SourceDpi(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEdgeDetectionEffect[] = L"Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_OverlayEdges)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_OverlayEdges)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_Amount(This, value) \
    ((This)->lpVtbl->get_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_Amount(This, value) \
    ((This)->lpVtbl->put_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_BlurAmount(This, value) \
    ((This)->lpVtbl->get_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_BlurAmount(This, value) \
    ((This)->lpVtbl->put_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_Mode(This, value) \
    ((This)->lpVtbl->get_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_Mode(This, value) \
    ((This)->lpVtbl->put_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_OverlayEdges(This, value) \
    ((This)->lpVtbl->get_OverlayEdges(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_OverlayEdges(This, value) \
    ((This)->lpVtbl->put_OverlayEdges(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_AlphaMode(This, value) \
    ((This)->lpVtbl->put_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEffectTransferTable3D[] = L"Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_get_Device(This, value) \
    ((This)->lpVtbl->get_Device(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3DStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEffectTransferTable3DStatics[] = L"Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3DStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromColors)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        UINT32 colorsLength,
        struct __x_ABI_CWindows_CUI_CColor* colors,
        INT32 sizeB,
        INT32 sizeG,
        INT32 sizeR,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromBytes)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        UINT32 bytesLength,
        BYTE* bytes,
        INT32 sizeB,
        INT32 sizeG,
        INT32 sizeR,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat format,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_CreateFromColors(This, resourceCreator, colorsLength, colors, sizeB, sizeG, sizeR, result) \
    ((This)->lpVtbl->CreateFromColors(This, resourceCreator, colorsLength, colors, sizeB, sizeG, sizeR, result))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_CreateFromBytes(This, resourceCreator, bytesLength, bytes, sizeB, sizeG, sizeR, format, result) \
    ((This)->lpVtbl->CreateFromBytes(This, resourceCreator, bytesLength, bytes, sizeB, sizeG, sizeR, format, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IEmbossEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.EmbossEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IEmbossEffect[] = L"Microsoft.Graphics.Canvas.Effects.IEmbossEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_get_Amount(This, value) \
    ((This)->lpVtbl->get_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_put_Amount(This, value) \
    ((This)->lpVtbl->put_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_get_Angle(This, value) \
    ((This)->lpVtbl->get_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_put_Angle(This, value) \
    ((This)->lpVtbl->put_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IExposureEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ExposureEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IExposureEffect[] = L"Microsoft.Graphics.Canvas.Effects.IExposureEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Exposure)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Exposure)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_get_Exposure(This, value) \
    ((This)->lpVtbl->get_Exposure(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_put_Exposure(This, value) \
    ((This)->lpVtbl->put_Exposure(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GammaTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGammaTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RedAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_RedAmplitude(This, value) \
    ((This)->lpVtbl->get_RedAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_RedAmplitude(This, value) \
    ((This)->lpVtbl->put_RedAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_RedExponent(This, value) \
    ((This)->lpVtbl->get_RedExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_RedExponent(This, value) \
    ((This)->lpVtbl->put_RedExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_RedOffset(This, value) \
    ((This)->lpVtbl->get_RedOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_RedOffset(This, value) \
    ((This)->lpVtbl->put_RedOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_RedDisable(This, value) \
    ((This)->lpVtbl->get_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_RedDisable(This, value) \
    ((This)->lpVtbl->put_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_GreenAmplitude(This, value) \
    ((This)->lpVtbl->get_GreenAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_GreenAmplitude(This, value) \
    ((This)->lpVtbl->put_GreenAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_GreenExponent(This, value) \
    ((This)->lpVtbl->get_GreenExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_GreenExponent(This, value) \
    ((This)->lpVtbl->put_GreenExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_GreenOffset(This, value) \
    ((This)->lpVtbl->get_GreenOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_GreenOffset(This, value) \
    ((This)->lpVtbl->put_GreenOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_GreenDisable(This, value) \
    ((This)->lpVtbl->get_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_GreenDisable(This, value) \
    ((This)->lpVtbl->put_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_BlueAmplitude(This, value) \
    ((This)->lpVtbl->get_BlueAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_BlueAmplitude(This, value) \
    ((This)->lpVtbl->put_BlueAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_BlueExponent(This, value) \
    ((This)->lpVtbl->get_BlueExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_BlueExponent(This, value) \
    ((This)->lpVtbl->put_BlueExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_BlueOffset(This, value) \
    ((This)->lpVtbl->get_BlueOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_BlueOffset(This, value) \
    ((This)->lpVtbl->put_BlueOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_BlueDisable(This, value) \
    ((This)->lpVtbl->get_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_BlueDisable(This, value) \
    ((This)->lpVtbl->put_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_AlphaAmplitude(This, value) \
    ((This)->lpVtbl->get_AlphaAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_AlphaAmplitude(This, value) \
    ((This)->lpVtbl->put_AlphaAmplitude(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_AlphaExponent(This, value) \
    ((This)->lpVtbl->get_AlphaExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_AlphaExponent(This, value) \
    ((This)->lpVtbl->put_AlphaExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_AlphaOffset(This, value) \
    ((This)->lpVtbl->get_AlphaOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_AlphaOffset(This, value) \
    ((This)->lpVtbl->put_AlphaOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_AlphaDisable(This, value) \
    ((This)->lpVtbl->get_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_AlphaDisable(This, value) \
    ((This)->lpVtbl->put_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGaussianBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_get_BlurAmount(This, value) \
    ((This)->lpVtbl->get_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_put_BlurAmount(This, value) \
    ((This)->lpVtbl->put_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_get_Optimization(This, value) \
    ((This)->lpVtbl->get_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_put_Optimization(This, value) \
    ((This)->lpVtbl->put_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.GrayscaleEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IGrayscaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHighlightsAndShadowsEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Highlights)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Highlights)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Shadows)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Shadows)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Clarity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Clarity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaskBlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaskBlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SourceIsLinearGamma)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceIsLinearGamma)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_Highlights(This, value) \
    ((This)->lpVtbl->get_Highlights(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_Highlights(This, value) \
    ((This)->lpVtbl->put_Highlights(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_Shadows(This, value) \
    ((This)->lpVtbl->get_Shadows(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_Shadows(This, value) \
    ((This)->lpVtbl->put_Shadows(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_Clarity(This, value) \
    ((This)->lpVtbl->get_Clarity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_Clarity(This, value) \
    ((This)->lpVtbl->put_Clarity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_MaskBlurAmount(This, value) \
    ((This)->lpVtbl->get_MaskBlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_MaskBlurAmount(This, value) \
    ((This)->lpVtbl->put_MaskBlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_SourceIsLinearGamma(This, value) \
    ((This)->lpVtbl->get_SourceIsLinearGamma(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_SourceIsLinearGamma(This, value) \
    ((This)->lpVtbl->put_SourceIsLinearGamma(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHueRotationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HueRotationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHueRotationEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHueRotationEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_get_Angle(This, value) \
    ((This)->lpVtbl->get_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_put_Angle(This, value) \
    ((This)->lpVtbl->put_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.HueToRgbEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IHueToRgbEffect[] = L"Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_get_SourceColorSpace(This, value) \
    ((This)->lpVtbl->get_SourceColorSpace(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_put_SourceColorSpace(This, value) \
    ((This)->lpVtbl->put_SourceColorSpace(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IInvertEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.InvertEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IInvertEffect[] = L"Microsoft.Graphics.Canvas.Effects.IInvertEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.LinearTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ILinearTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_RedOffset(This, value) \
    ((This)->lpVtbl->get_RedOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_RedOffset(This, value) \
    ((This)->lpVtbl->put_RedOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_RedSlope(This, value) \
    ((This)->lpVtbl->get_RedSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_RedSlope(This, value) \
    ((This)->lpVtbl->put_RedSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_RedDisable(This, value) \
    ((This)->lpVtbl->get_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_RedDisable(This, value) \
    ((This)->lpVtbl->put_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_GreenOffset(This, value) \
    ((This)->lpVtbl->get_GreenOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_GreenOffset(This, value) \
    ((This)->lpVtbl->put_GreenOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_GreenSlope(This, value) \
    ((This)->lpVtbl->get_GreenSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_GreenSlope(This, value) \
    ((This)->lpVtbl->put_GreenSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_GreenDisable(This, value) \
    ((This)->lpVtbl->get_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_GreenDisable(This, value) \
    ((This)->lpVtbl->put_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_BlueOffset(This, value) \
    ((This)->lpVtbl->get_BlueOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_BlueOffset(This, value) \
    ((This)->lpVtbl->put_BlueOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_BlueSlope(This, value) \
    ((This)->lpVtbl->get_BlueSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_BlueSlope(This, value) \
    ((This)->lpVtbl->put_BlueSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_BlueDisable(This, value) \
    ((This)->lpVtbl->get_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_BlueDisable(This, value) \
    ((This)->lpVtbl->put_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_AlphaOffset(This, value) \
    ((This)->lpVtbl->get_AlphaOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_AlphaOffset(This, value) \
    ((This)->lpVtbl->put_AlphaOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_AlphaSlope(This, value) \
    ((This)->lpVtbl->get_AlphaSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_AlphaSlope(This, value) \
    ((This)->lpVtbl->put_AlphaSlope(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_AlphaDisable(This, value) \
    ((This)->lpVtbl->get_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_AlphaDisable(This, value) \
    ((This)->lpVtbl->put_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ILuminanceToAlphaEffect[] = L"Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IMorphologyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.MorphologyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IMorphologyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IMorphologyEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_get_Mode(This, value) \
    ((This)->lpVtbl->get_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_put_Mode(This, value) \
    ((This)->lpVtbl->put_Mode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_get_Width(This, value) \
    ((This)->lpVtbl->get_Width(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_put_Width(This, value) \
    ((This)->lpVtbl->put_Width(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_get_Height(This, value) \
    ((This)->lpVtbl->get_Height(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_put_Height(This, value) \
    ((This)->lpVtbl->put_Height(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityEffect[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_get_Opacity(This, value) \
    ((This)->lpVtbl->get_Opacity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_put_Opacity(This, value) \
    ((This)->lpVtbl->put_Opacity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityEffectStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_get_IsSupported(This, value) \
    ((This)->lpVtbl->get_IsSupported(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IOpacityMetadataEffect[] = L"Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OpaqueRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_OpaqueRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_get_OpaqueRectangle(This, value) \
    ((This)->lpVtbl->get_OpaqueRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_put_OpaqueRectangle(This, value) \
    ((This)->lpVtbl->put_OpaqueRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPixelShaderEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __FIMap_2_HSTRING_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source3)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source4)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source5)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source6)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source7)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source8)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source3)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source4)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source5)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source6)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source7)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source8)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source1Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source3Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source4Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source5Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source6Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source7Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source8Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* get_Source1BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source2BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source3BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source4BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source5BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source6BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source7BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source8BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSamplerOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSamplerOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source1Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source3Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source4Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source5Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source6Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source7Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source8Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Properties(This, value) \
    ((This)->lpVtbl->get_Properties(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source1(This, source) \
    ((This)->lpVtbl->get_Source1(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source2(This, source) \
    ((This)->lpVtbl->get_Source2(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source3(This, source) \
    ((This)->lpVtbl->get_Source3(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source4(This, source) \
    ((This)->lpVtbl->get_Source4(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source5(This, source) \
    ((This)->lpVtbl->get_Source5(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source6(This, source) \
    ((This)->lpVtbl->get_Source6(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source7(This, source) \
    ((This)->lpVtbl->get_Source7(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source8(This, source) \
    ((This)->lpVtbl->get_Source8(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source1(This, source) \
    ((This)->lpVtbl->put_Source1(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source2(This, source) \
    ((This)->lpVtbl->put_Source2(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source3(This, source) \
    ((This)->lpVtbl->put_Source3(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source4(This, source) \
    ((This)->lpVtbl->put_Source4(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source5(This, source) \
    ((This)->lpVtbl->put_Source5(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source6(This, source) \
    ((This)->lpVtbl->put_Source6(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source7(This, source) \
    ((This)->lpVtbl->put_Source7(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source8(This, source) \
    ((This)->lpVtbl->put_Source8(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source1Mapping(This, value) \
    ((This)->lpVtbl->get_Source1Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source2Mapping(This, value) \
    ((This)->lpVtbl->get_Source2Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source3Mapping(This, value) \
    ((This)->lpVtbl->get_Source3Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source4Mapping(This, value) \
    ((This)->lpVtbl->get_Source4Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source5Mapping(This, value) \
    ((This)->lpVtbl->get_Source5Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source6Mapping(This, value) \
    ((This)->lpVtbl->get_Source6Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source7Mapping(This, value) \
    ((This)->lpVtbl->get_Source7Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source8Mapping(This, value) \
    ((This)->lpVtbl->get_Source8Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source1Mapping(This, value) \
    ((This)->lpVtbl->put_Source1Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source2Mapping(This, value) \
    ((This)->lpVtbl->put_Source2Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source3Mapping(This, value) \
    ((This)->lpVtbl->put_Source3Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source4Mapping(This, value) \
    ((This)->lpVtbl->put_Source4Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source5Mapping(This, value) \
    ((This)->lpVtbl->put_Source5Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source6Mapping(This, value) \
    ((This)->lpVtbl->put_Source6Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source7Mapping(This, value) \
    ((This)->lpVtbl->put_Source7Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source8Mapping(This, value) \
    ((This)->lpVtbl->put_Source8Mapping(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source1BorderMode(This, value) \
    ((This)->lpVtbl->get_Source1BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source2BorderMode(This, value) \
    ((This)->lpVtbl->get_Source2BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source3BorderMode(This, value) \
    ((This)->lpVtbl->get_Source3BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source4BorderMode(This, value) \
    ((This)->lpVtbl->get_Source4BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source5BorderMode(This, value) \
    ((This)->lpVtbl->get_Source5BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source6BorderMode(This, value) \
    ((This)->lpVtbl->get_Source6BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source7BorderMode(This, value) \
    ((This)->lpVtbl->get_Source7BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source8BorderMode(This, value) \
    ((This)->lpVtbl->get_Source8BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source1BorderMode(This, value) \
    ((This)->lpVtbl->put_Source1BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source2BorderMode(This, value) \
    ((This)->lpVtbl->put_Source2BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source3BorderMode(This, value) \
    ((This)->lpVtbl->put_Source3BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source4BorderMode(This, value) \
    ((This)->lpVtbl->put_Source4BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source5BorderMode(This, value) \
    ((This)->lpVtbl->put_Source5BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source6BorderMode(This, value) \
    ((This)->lpVtbl->put_Source6BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source7BorderMode(This, value) \
    ((This)->lpVtbl->put_Source7BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source8BorderMode(This, value) \
    ((This)->lpVtbl->put_Source8BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_MaxSamplerOffset(This, value) \
    ((This)->lpVtbl->get_MaxSamplerOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_MaxSamplerOffset(This, value) \
    ((This)->lpVtbl->put_MaxSamplerOffset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source1Interpolation(This, value) \
    ((This)->lpVtbl->get_Source1Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source2Interpolation(This, value) \
    ((This)->lpVtbl->get_Source2Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source3Interpolation(This, value) \
    ((This)->lpVtbl->get_Source3Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source4Interpolation(This, value) \
    ((This)->lpVtbl->get_Source4Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source5Interpolation(This, value) \
    ((This)->lpVtbl->get_Source5Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source6Interpolation(This, value) \
    ((This)->lpVtbl->get_Source6Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source7Interpolation(This, value) \
    ((This)->lpVtbl->get_Source7Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_get_Source8Interpolation(This, value) \
    ((This)->lpVtbl->get_Source8Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source1Interpolation(This, value) \
    ((This)->lpVtbl->put_Source1Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source2Interpolation(This, value) \
    ((This)->lpVtbl->put_Source2Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source3Interpolation(This, value) \
    ((This)->lpVtbl->put_Source3Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source4Interpolation(This, value) \
    ((This)->lpVtbl->put_Source4Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source5Interpolation(This, value) \
    ((This)->lpVtbl->put_Source5Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source6Interpolation(This, value) \
    ((This)->lpVtbl->put_Source6Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source7Interpolation(This, value) \
    ((This)->lpVtbl->put_Source7Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_put_Source8Interpolation(This, value) \
    ((This)->lpVtbl->put_Source8Interpolation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_IsSupported(This, device, result) \
    ((This)->lpVtbl->IsSupported(This, device, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPixelShaderEffectFactory
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPixelShaderEffectFactory[] = L"Microsoft.Graphics.Canvas.Effects.IPixelShaderEffectFactory";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        UINT32 shaderCodeLength,
        BYTE* shaderCode,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect** effect);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_Create(This, shaderCodeLength, shaderCode, effect) \
    ((This)->lpVtbl->Create(This, shaderCodeLength, shaderCode, effect))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPointDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_LightPosition(This, value) \
    ((This)->lpVtbl->get_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_LightPosition(This, value) \
    ((This)->lpVtbl->put_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_DiffuseAmount(This, value) \
    ((This)->lpVtbl->get_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_DiffuseAmount(This, value) \
    ((This)->lpVtbl->put_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PointSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPointSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_LightPosition(This, value) \
    ((This)->lpVtbl->get_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_LightPosition(This, value) \
    ((This)->lpVtbl->put_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_SpecularExponent(This, value) \
    ((This)->lpVtbl->get_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_SpecularExponent(This, value) \
    ((This)->lpVtbl->put_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_SpecularAmount(This, value) \
    ((This)->lpVtbl->get_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_SpecularAmount(This, value) \
    ((This)->lpVtbl->put_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPosterizeEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PosterizeEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPosterizeEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPosterizeEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RedValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_RedValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_GreenValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BlueValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_get_RedValueCount(This, value) \
    ((This)->lpVtbl->get_RedValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_put_RedValueCount(This, value) \
    ((This)->lpVtbl->put_RedValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_get_GreenValueCount(This, value) \
    ((This)->lpVtbl->get_GreenValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_put_GreenValueCount(This, value) \
    ((This)->lpVtbl->put_GreenValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_get_BlueValueCount(This, value) \
    ((This)->lpVtbl->get_BlueValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_put_BlueValueCount(This, value) \
    ((This)->lpVtbl->put_BlueValueCount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.PremultiplyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.RgbToHueEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IRgbToHueEffect[] = L"Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OutputColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_OutputColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_get_OutputColorSpace(This, value) \
    ((This)->lpVtbl->get_OutputColorSpace(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_put_OutputColorSpace(This, value) \
    ((This)->lpVtbl->put_OutputColorSpace(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISaturationEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SaturationEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISaturationEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISaturationEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Saturation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Saturation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_get_Saturation(This, value) \
    ((This)->lpVtbl->get_Saturation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_put_Saturation(This, value) \
    ((This)->lpVtbl->put_Saturation(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IScaleEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ScaleEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IScaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.IScaleEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_Scale(This, value) \
    ((This)->lpVtbl->get_Scale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_Scale(This, value) \
    ((This)->lpVtbl->put_Scale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_CenterPoint(This, value) \
    ((This)->lpVtbl->get_CenterPoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_CenterPoint(This, value) \
    ((This)->lpVtbl->put_CenterPoint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_Sharpness(This, value) \
    ((This)->lpVtbl->get_Sharpness(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_Sharpness(This, value) \
    ((This)->lpVtbl->put_Sharpness(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISepiaEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SepiaEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISepiaEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISepiaEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_get_Intensity(This, value) \
    ((This)->lpVtbl->get_Intensity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_put_Intensity(This, value) \
    ((This)->lpVtbl->put_Intensity(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_put_AlphaMode(This, value) \
    ((This)->lpVtbl->put_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IShadowEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.ShadowEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IShadowEffect[] = L"Microsoft.Graphics.Canvas.Effects.IShadowEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ShadowColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_ShadowColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_ShadowColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ShadowColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_get_BlurAmount(This, value) \
    ((This)->lpVtbl->get_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_put_BlurAmount(This, value) \
    ((This)->lpVtbl->put_BlurAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_get_ShadowColor(This, value) \
    ((This)->lpVtbl->get_ShadowColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_put_ShadowColor(This, value) \
    ((This)->lpVtbl->put_ShadowColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_get_Optimization(This, value) \
    ((This)->lpVtbl->get_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_put_Optimization(This, value) \
    ((This)->lpVtbl->put_Optimization(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_get_ShadowColorHdr(This, value) \
    ((This)->lpVtbl->get_ShadowColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_put_ShadowColorHdr(This, value) \
    ((This)->lpVtbl->put_ShadowColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISharpenEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SharpenEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISharpenEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISharpenEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Threshold)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Threshold)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_get_Amount(This, value) \
    ((This)->lpVtbl->get_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_put_Amount(This, value) \
    ((This)->lpVtbl->put_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_get_Threshold(This, value) \
    ((This)->lpVtbl->get_Threshold(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_put_Threshold(This, value) \
    ((This)->lpVtbl->put_Threshold(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISpotDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_LightPosition(This, value) \
    ((This)->lpVtbl->get_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_LightPosition(This, value) \
    ((This)->lpVtbl->put_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_LightTarget(This, value) \
    ((This)->lpVtbl->get_LightTarget(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_LightTarget(This, value) \
    ((This)->lpVtbl->put_LightTarget(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_Focus(This, value) \
    ((This)->lpVtbl->get_Focus(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_Focus(This, value) \
    ((This)->lpVtbl->put_Focus(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_LimitingConeAngle(This, value) \
    ((This)->lpVtbl->get_LimitingConeAngle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_LimitingConeAngle(This, value) \
    ((This)->lpVtbl->put_LimitingConeAngle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_DiffuseAmount(This, value) \
    ((This)->lpVtbl->get_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_DiffuseAmount(This, value) \
    ((This)->lpVtbl->put_DiffuseAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ISpotSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_LightPosition(This, value) \
    ((This)->lpVtbl->get_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_LightPosition(This, value) \
    ((This)->lpVtbl->put_LightPosition(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_LightTarget(This, value) \
    ((This)->lpVtbl->get_LightTarget(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_LightTarget(This, value) \
    ((This)->lpVtbl->put_LightTarget(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_Focus(This, value) \
    ((This)->lpVtbl->get_Focus(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_Focus(This, value) \
    ((This)->lpVtbl->put_Focus(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_LimitingConeAngle(This, value) \
    ((This)->lpVtbl->get_LimitingConeAngle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_LimitingConeAngle(This, value) \
    ((This)->lpVtbl->put_LimitingConeAngle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_SpecularExponent(This, value) \
    ((This)->lpVtbl->get_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_SpecularExponent(This, value) \
    ((This)->lpVtbl->put_SpecularExponent(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_SpecularAmount(This, value) \
    ((This)->lpVtbl->get_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_SpecularAmount(This, value) \
    ((This)->lpVtbl->put_SpecularAmount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_HeightMapScale(This, value) \
    ((This)->lpVtbl->get_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_HeightMapScale(This, value) \
    ((This)->lpVtbl->put_HeightMapScale(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_LightColor(This, value) \
    ((This)->lpVtbl->get_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_LightColor(This, value) \
    ((This)->lpVtbl->put_LightColor(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->get_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_HeightMapKernelSize(This, value) \
    ((This)->lpVtbl->put_HeightMapKernelSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->get_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_HeightMapInterpolationMode(This, value) \
    ((This)->lpVtbl->put_HeightMapInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_LightColorHdr(This, value) \
    ((This)->lpVtbl->get_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_LightColorHdr(This, value) \
    ((This)->lpVtbl->put_LightColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IStraightenEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.StraightenEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IStraightenEffect[] = L"Microsoft.Graphics.Canvas.Effects.IStraightenEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaintainSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MaintainSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_get_Angle(This, value) \
    ((This)->lpVtbl->get_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_put_Angle(This, value) \
    ((This)->lpVtbl->put_Angle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_get_MaintainSize(This, value) \
    ((This)->lpVtbl->get_MaintainSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_put_MaintainSize(This, value) \
    ((This)->lpVtbl->put_MaintainSize(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITableTransfer3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Table)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** value);
    HRESULT (STDMETHODCALLTYPE* put_Table)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_get_Table(This, value) \
    ((This)->lpVtbl->get_Table(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_put_Table(This, value) \
    ((This)->lpVtbl->put_Table(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_get_AlphaMode(This, value) \
    ((This)->lpVtbl->get_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_put_AlphaMode(This, value) \
    ((This)->lpVtbl->put_AlphaMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITableTransferEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TableTransferEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITableTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITableTransferEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_RedTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_RedTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_RedTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_RedTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_RedDisable(This, value) \
    ((This)->lpVtbl->get_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_RedDisable(This, value) \
    ((This)->lpVtbl->put_RedDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_GreenTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_GreenTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_GreenTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_GreenTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_GreenDisable(This, value) \
    ((This)->lpVtbl->get_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_GreenDisable(This, value) \
    ((This)->lpVtbl->put_GreenDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_BlueTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_BlueTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_BlueTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_BlueTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_BlueDisable(This, value) \
    ((This)->lpVtbl->get_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_BlueDisable(This, value) \
    ((This)->lpVtbl->put_BlueDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_AlphaTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->get_AlphaTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_AlphaTable(This, valueElementsLength, valueElements) \
    ((This)->lpVtbl->put_AlphaTable(This, valueElementsLength, valueElements))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_AlphaDisable(This, value) \
    ((This)->lpVtbl->get_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_AlphaDisable(This, value) \
    ((This)->lpVtbl->put_AlphaDisable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITemperatureAndTintEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Temperature)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Temperature)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Tint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Tint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_get_Temperature(This, value) \
    ((This)->lpVtbl->get_Temperature(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_put_Temperature(This, value) \
    ((This)->lpVtbl->put_Temperature(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_get_Tint(This, value) \
    ((This)->lpVtbl->get_Tint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_put_Tint(This, value) \
    ((This)->lpVtbl->put_Tint(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITileEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TileEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITileEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITileEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_get_SourceRectangle(This, value) \
    ((This)->lpVtbl->get_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_put_SourceRectangle(This, value) \
    ((This)->lpVtbl->put_SourceRectangle(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITintEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITintEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITintEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_get_ClampOutput(This, value) \
    ((This)->lpVtbl->get_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_put_ClampOutput(This, value) \
    ((This)->lpVtbl->put_ClampOutput(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_get_ColorHdr(This, value) \
    ((This)->lpVtbl->get_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_put_ColorHdr(This, value) \
    ((This)->lpVtbl->put_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITintEffectStatics
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITintEffectStatics[] = L"Microsoft.Graphics.Canvas.Effects.ITintEffectStatics";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        boolean* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_get_IsSupported(This, value) \
    ((This)->lpVtbl->get_IsSupported(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITransform2DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.Transform2DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITransform2DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITransform2DEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* get_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_get_Sharpness(This, value) \
    ((This)->lpVtbl->get_Sharpness(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_put_Sharpness(This, value) \
    ((This)->lpVtbl->put_Sharpness(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITransform3DEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.Transform3DEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITransform3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITransform3DEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_get_InterpolationMode(This, value) \
    ((This)->lpVtbl->get_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_put_InterpolationMode(This, value) \
    ((This)->lpVtbl->put_InterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_get_BorderMode(This, value) \
    ((This)->lpVtbl->get_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_put_BorderMode(This, value) \
    ((This)->lpVtbl->put_BorderMode(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_get_TransformMatrix(This, value) \
    ((This)->lpVtbl->get_TransformMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_put_TransformMatrix(This, value) \
    ((This)->lpVtbl->put_TransformMatrix(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.TurbulenceEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_ITurbulenceEffect[] = L"Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Frequency)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Frequency)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Octaves)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Octaves)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Seed)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Seed)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Noise)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise* value);
    HRESULT (STDMETHODCALLTYPE* put_Noise)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise value);
    HRESULT (STDMETHODCALLTYPE* get_Tileable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Tileable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Frequency(This, value) \
    ((This)->lpVtbl->get_Frequency(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Frequency(This, value) \
    ((This)->lpVtbl->put_Frequency(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Octaves(This, value) \
    ((This)->lpVtbl->get_Octaves(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Octaves(This, value) \
    ((This)->lpVtbl->put_Octaves(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Seed(This, value) \
    ((This)->lpVtbl->get_Seed(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Seed(This, value) \
    ((This)->lpVtbl->put_Seed(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Noise(This, value) \
    ((This)->lpVtbl->get_Noise(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Noise(This, value) \
    ((This)->lpVtbl->put_Noise(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_get_Tileable(This, value) \
    ((This)->lpVtbl->get_Tileable(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_put_Tileable(This, value) \
    ((This)->lpVtbl->put_Tileable(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IUnPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__) */

/*
 *
 * Interface Microsoft.Graphics.Canvas.Effects.IVignetteEffect
 *
 * Interface is a part of the implementation of type Microsoft.Graphics.Canvas.Effects.VignetteEffect
 *
 * Any object which implements this interface must also implement the following interfaces:
 *     Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *     Windows.Graphics.Effects.IGraphicsEffect
 *     Windows.Graphics.Effects.IGraphicsEffectSource
 *     Microsoft.Graphics.Canvas.ICanvasImage
 *     Windows.Foundation.IClosable
 *
 */
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_Graphics_Canvas_Effects_IVignetteEffect[] = L"Microsoft.Graphics.Canvas.Effects.IVignetteEffect";
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Curve)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Curve)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

    END_INTERFACE
} __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl;

interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_get_Amount(This, value) \
    ((This)->lpVtbl->get_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_put_Amount(This, value) \
    ((This)->lpVtbl->put_Amount(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_get_Curve(This, value) \
    ((This)->lpVtbl->get_Curve(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_put_Curve(This, value) \
    ((This)->lpVtbl->put_Curve(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_get_ColorHdr(This, value) \
    ((This)->lpVtbl->get_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_put_ColorHdr(This, value) \
    ((This)->lpVtbl->put_ColorHdr(This, value))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_get_Source(This, source) \
    ((This)->lpVtbl->get_Source(This, source))

#define __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_put_Source(This, source) \
    ((This)->lpVtbl->put_Source(This, source))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__) */

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IAlphaMaskEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_AlphaMaskEffect[] = L"Microsoft.Graphics.Canvas.Effects.AlphaMaskEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IArithmeticCompositeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ArithmeticCompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.ArithmeticCompositeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.AtlasEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IAtlasEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AtlasEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_AtlasEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_AtlasEffect[] = L"Microsoft.Graphics.Canvas.Effects.AtlasEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BlendEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBlendEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BlendEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BlendEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BlendEffect[] = L"Microsoft.Graphics.Canvas.Effects.BlendEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BorderEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBorderEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BorderEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BorderEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BorderEffect[] = L"Microsoft.Graphics.Canvas.Effects.BorderEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.BrightnessEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IBrightnessEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BrightnessEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_BrightnessEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_BrightnessEffect[] = L"Microsoft.Graphics.Canvas.Effects.BrightnessEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IChromaKeyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ChromaKeyEffect[] = L"Microsoft.Graphics.Canvas.Effects.ChromaKeyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorManagementEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorManagementEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorManagementEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorManagementEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorManagementProfile
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorManagementProfile ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorManagementProfile[] = L"Microsoft.Graphics.Canvas.Effects.ColorManagementProfile";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorMatrixEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorMatrixEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ColorSourceEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IColorSourceEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ColorSourceEffect[] = L"Microsoft.Graphics.Canvas.Effects.ColorSourceEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CompositeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICompositeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CompositeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CompositeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CompositeEffect[] = L"Microsoft.Graphics.Canvas.Effects.CompositeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ContrastEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IContrastEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ContrastEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ContrastEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ContrastEffect[] = L"Microsoft.Graphics.Canvas.Effects.ContrastEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IConvolveMatrixEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ConvolveMatrixEffect[] = L"Microsoft.Graphics.Canvas.Effects.ConvolveMatrixEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CropEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICropEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CropEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CropEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CropEffect[] = L"Microsoft.Graphics.Canvas.Effects.CropEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.CrossFadeEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ICrossFadeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_CrossFadeEffect[] = L"Microsoft.Graphics.Canvas.Effects.CrossFadeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDirectionalBlurEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DirectionalBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.DirectionalBlurEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDiscreteTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DiscreteTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.DiscreteTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDisplacementMapEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DisplacementMapEffect[] = L"Microsoft.Graphics.Canvas.Effects.DisplacementMapEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDistantDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DistantDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.DistantDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDistantSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DistantSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.DistantSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IDpiCompensationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_DpiCompensationEffect[] = L"Microsoft.Graphics.Canvas.Effects.DpiCompensationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEdgeDetectionEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EdgeDetectionEffect[] = L"Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEffectTransferTable3D ** Default Interface **
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EffectTransferTable3D[] = L"Microsoft.Graphics.Canvas.Effects.EffectTransferTable3D";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.EmbossEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IEmbossEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EmbossEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_EmbossEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_EmbossEffect[] = L"Microsoft.Graphics.Canvas.Effects.EmbossEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ExposureEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IExposureEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ExposureEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ExposureEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ExposureEffect[] = L"Microsoft.Graphics.Canvas.Effects.ExposureEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GammaTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGammaTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GammaTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.GammaTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGaussianBlurEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GaussianBlurEffect[] = L"Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.GrayscaleEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IGrayscaleEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_GrayscaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.GrayscaleEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHighlightsAndShadowsEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HighlightsAndShadowsEffect[] = L"Microsoft.Graphics.Canvas.Effects.HighlightsAndShadowsEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HueRotationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHueRotationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueRotationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueRotationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HueRotationEffect[] = L"Microsoft.Graphics.Canvas.Effects.HueRotationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.HueToRgbEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IHueToRgbEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_HueToRgbEffect[] = L"Microsoft.Graphics.Canvas.Effects.HueToRgbEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.InvertEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IInvertEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_InvertEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_InvertEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_InvertEffect[] = L"Microsoft.Graphics.Canvas.Effects.InvertEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.LinearTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ILinearTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_LinearTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.LinearTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ILuminanceToAlphaEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_LuminanceToAlphaEffect[] = L"Microsoft.Graphics.Canvas.Effects.LuminanceToAlphaEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.MorphologyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IMorphologyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_MorphologyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_MorphologyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_MorphologyEffect[] = L"Microsoft.Graphics.Canvas.Effects.MorphologyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.OpacityEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IOpacityEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_OpacityEffect[] = L"Microsoft.Graphics.Canvas.Effects.OpacityEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IOpacityMetadataEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_OpacityMetadataEffect[] = L"Microsoft.Graphics.Canvas.Effects.OpacityMetadataEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PixelShaderEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPixelShaderEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PixelShaderEffect[] = L"Microsoft.Graphics.Canvas.Effects.PixelShaderEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPointDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PointDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.PointDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PointSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPointSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PointSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.PointSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PosterizeEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPosterizeEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PosterizeEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PosterizeEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PosterizeEffect[] = L"Microsoft.Graphics.Canvas.Effects.PosterizeEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.PremultiplyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IPremultiplyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_PremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.PremultiplyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.RgbToHueEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IRgbToHueEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_RgbToHueEffect[] = L"Microsoft.Graphics.Canvas.Effects.RgbToHueEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SaturationEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISaturationEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SaturationEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SaturationEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SaturationEffect[] = L"Microsoft.Graphics.Canvas.Effects.SaturationEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ScaleEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IScaleEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ScaleEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ScaleEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ScaleEffect[] = L"Microsoft.Graphics.Canvas.Effects.ScaleEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SepiaEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISepiaEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SepiaEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SepiaEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SepiaEffect[] = L"Microsoft.Graphics.Canvas.Effects.SepiaEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.ShadowEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IShadowEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ShadowEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_ShadowEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_ShadowEffect[] = L"Microsoft.Graphics.Canvas.Effects.ShadowEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SharpenEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISharpenEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SharpenEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SharpenEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SharpenEffect[] = L"Microsoft.Graphics.Canvas.Effects.SharpenEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISpotDiffuseEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SpotDiffuseEffect[] = L"Microsoft.Graphics.Canvas.Effects.SpotDiffuseEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ISpotSpecularEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_SpotSpecularEffect[] = L"Microsoft.Graphics.Canvas.Effects.SpotSpecularEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.StraightenEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IStraightenEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_StraightenEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_StraightenEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_StraightenEffect[] = L"Microsoft.Graphics.Canvas.Effects.StraightenEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITableTransfer3DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TableTransfer3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.TableTransfer3DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TableTransferEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITableTransferEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransferEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TableTransferEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TableTransferEffect[] = L"Microsoft.Graphics.Canvas.Effects.TableTransferEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITemperatureAndTintEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TemperatureAndTintEffect[] = L"Microsoft.Graphics.Canvas.Effects.TemperatureAndTintEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TileEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITileEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TileEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TileEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TileEffect[] = L"Microsoft.Graphics.Canvas.Effects.TileEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TintEffect
 *
 * RuntimeClass can be activated.
 *
 * RuntimeClass contains static methods.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITintEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TintEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TintEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TintEffect[] = L"Microsoft.Graphics.Canvas.Effects.TintEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.Transform2DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITransform2DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform2DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform2DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_Transform2DEffect[] = L"Microsoft.Graphics.Canvas.Effects.Transform2DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.Transform3DEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITransform3DEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform3DEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_Transform3DEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_Transform3DEffect[] = L"Microsoft.Graphics.Canvas.Effects.Transform3DEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.TurbulenceEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.ITurbulenceEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_TurbulenceEffect[] = L"Microsoft.Graphics.Canvas.Effects.TurbulenceEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IUnPremultiplyEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_UnPremultiplyEffect[] = L"Microsoft.Graphics.Canvas.Effects.UnPremultiplyEffect";
#endif

/*
 *
 * Class Microsoft.Graphics.Canvas.Effects.VignetteEffect
 *
 * RuntimeClass can be activated.
 *
 * Class implements the following interfaces:
 *    Microsoft.Graphics.Canvas.Effects.IVignetteEffect ** Default Interface **
 *    Microsoft.Graphics.Canvas.Effects.ICanvasEffect
 *    Microsoft.Graphics.Canvas.ICanvasImage
 *    Windows.Foundation.IClosable
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *    Windows.Graphics.Effects.IGraphicsEffect
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#ifndef RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_VignetteEffect_DEFINED
#define RUNTIMECLASS_Microsoft_Graphics_Canvas_Effects_VignetteEffect_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_Graphics_Canvas_Effects_VignetteEffect[] = L"Microsoft.Graphics.Canvas.Effects.VignetteEffect";
#endif

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __microsoft2Egraphics2Ecanvas2Eeffects_p_h__

#endif // __microsoft2Egraphics2Ecanvas2Eeffects_h__
