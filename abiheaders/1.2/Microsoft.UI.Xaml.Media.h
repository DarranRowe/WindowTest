
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __microsoft2Eui2Examl2Emedia_h__
#define __microsoft2Eui2Examl2Emedia_h__
#ifndef __microsoft2Eui2Examl2Emedia_p_h__
#define __microsoft2Eui2Examl2Emedia_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)
#define MICROSOFT_UI_XAML_WINUICONTRACT_VERSION 0x30000
#endif // defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)

#if !defined(MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION)
#define MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION 0x30000
#endif // defined(MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Microsoft.UI.Composition.h"
#include "Microsoft.UI.Xaml.h"
#include "Microsoft.UI.Xaml.Controls.Primitives.h"
#include "Microsoft.UI.Xaml.Media.Media3D.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IAcrylicBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush ABI::Microsoft::UI::Xaml::Media::IAcrylicBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IAcrylicBrush2;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2 ABI::Microsoft::UI::Xaml::Media::IAcrylicBrush2

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IAcrylicBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory ABI::Microsoft::UI::Xaml::Media::IAcrylicBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IAcrylicBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics ABI::Microsoft::UI::Xaml::Media::IAcrylicBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IAcrylicBrushStatics2;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2 ABI::Microsoft::UI::Xaml::Media::IAcrylicBrushStatics2

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IArcSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment ABI::Microsoft::UI::Xaml::Media::IArcSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IArcSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics ABI::Microsoft::UI::Xaml::Media::IArcSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBezierSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment ABI::Microsoft::UI::Xaml::Media::IBezierSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBezierSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics ABI::Microsoft::UI::Xaml::Media::IBezierSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBitmapCache;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache ABI::Microsoft::UI::Xaml::Media::IBitmapCache

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush ABI::Microsoft::UI::Xaml::Media::IBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory ABI::Microsoft::UI::Xaml::Media::IBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrushOverrides;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides ABI::Microsoft::UI::Xaml::Media::IBrushOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics ABI::Microsoft::UI::Xaml::Media::IBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICacheMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode ABI::Microsoft::UI::Xaml::Media::ICacheMode

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICacheModeFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory ABI::Microsoft::UI::Xaml::Media::ICacheModeFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositeTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform ABI::Microsoft::UI::Xaml::Media::ICompositeTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositeTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics ABI::Microsoft::UI::Xaml::Media::ICompositeTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositionTarget;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget ABI::Microsoft::UI::Xaml::Media::ICompositionTarget

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositionTargetStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics ABI::Microsoft::UI::Xaml::Media::ICompositionTargetStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IEllipseGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry ABI::Microsoft::UI::Xaml::Media::IEllipseGeometry

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IEllipseGeometryStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics ABI::Microsoft::UI::Xaml::Media::IEllipseGeometryStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamily;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily ABI::Microsoft::UI::Xaml::Media::IFontFamily

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamilyFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory ABI::Microsoft::UI::Xaml::Media::IFontFamilyFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamilyStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics ABI::Microsoft::UI::Xaml::Media::IFontFamilyStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform ABI::Microsoft::UI::Xaml::Media::IGeneralTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransformFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory ABI::Microsoft::UI::Xaml::Media::IGeneralTransformFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransformOverrides;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides ABI::Microsoft::UI::Xaml::Media::IGeneralTransformOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry ABI::Microsoft::UI::Xaml::Media::IGeometry

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory ABI::Microsoft::UI::Xaml::Media::IGeometryFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryGroup;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup ABI::Microsoft::UI::Xaml::Media::IGeometryGroup

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryGroupStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics ABI::Microsoft::UI::Xaml::Media::IGeometryGroupStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics ABI::Microsoft::UI::Xaml::Media::IGeometryStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush ABI::Microsoft::UI::Xaml::Media::IGradientBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory ABI::Microsoft::UI::Xaml::Media::IGradientBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics ABI::Microsoft::UI::Xaml::Media::IGradientBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientStop;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop ABI::Microsoft::UI::Xaml::Media::IGradientStop

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientStopStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics ABI::Microsoft::UI::Xaml::Media::IGradientStopStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush ABI::Microsoft::UI::Xaml::Media::IImageBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics ABI::Microsoft::UI::Xaml::Media::IImageBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageSource;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource ABI::Microsoft::UI::Xaml::Media::IImageSource

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageSourceFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory ABI::Microsoft::UI::Xaml::Media::IImageSourceFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry ABI::Microsoft::UI::Xaml::Media::ILineGeometry

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineGeometryStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics ABI::Microsoft::UI::Xaml::Media::ILineGeometryStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment ABI::Microsoft::UI::Xaml::Media::ILineSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics ABI::Microsoft::UI::Xaml::Media::ILineSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush ABI::Microsoft::UI::Xaml::Media::ILinearGradientBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory ABI::Microsoft::UI::Xaml::Media::ILinearGradientBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics ABI::Microsoft::UI::Xaml::Media::ILinearGradientBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILoadedImageSourceLoadCompletedEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs ABI::Microsoft::UI::Xaml::Media::ILoadedImageSourceLoadCompletedEventArgs

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILoadedImageSurface;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILoadedImageSurfaceStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurfaceStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrix3DProjection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection ABI::Microsoft::UI::Xaml::Media::IMatrix3DProjection

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrix3DProjectionStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics ABI::Microsoft::UI::Xaml::Media::IMatrix3DProjectionStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixHelper;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper ABI::Microsoft::UI::Xaml::Media::IMatrixHelper

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixHelperStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics ABI::Microsoft::UI::Xaml::Media::IMatrixHelperStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform ABI::Microsoft::UI::Xaml::Media::IMatrixTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics ABI::Microsoft::UI::Xaml::Media::IMatrixTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMediaTransportControlsThumbnailRequestedEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs ABI::Microsoft::UI::Xaml::Media::IMediaTransportControlsThumbnailRequestedEventArgs

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathFigure;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure ABI::Microsoft::UI::Xaml::Media::IPathFigure

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathFigureStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics ABI::Microsoft::UI::Xaml::Media::IPathFigureStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry ABI::Microsoft::UI::Xaml::Media::IPathGeometry

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathGeometryStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics ABI::Microsoft::UI::Xaml::Media::IPathGeometryStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment ABI::Microsoft::UI::Xaml::Media::IPathSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathSegmentFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory ABI::Microsoft::UI::Xaml::Media::IPathSegmentFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPlaneProjection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection ABI::Microsoft::UI::Xaml::Media::IPlaneProjection

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPlaneProjectionStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics ABI::Microsoft::UI::Xaml::Media::IPlaneProjectionStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyBezierSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment ABI::Microsoft::UI::Xaml::Media::IPolyBezierSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyBezierSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics ABI::Microsoft::UI::Xaml::Media::IPolyBezierSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyLineSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment ABI::Microsoft::UI::Xaml::Media::IPolyLineSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyLineSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics ABI::Microsoft::UI::Xaml::Media::IPolyLineSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyQuadraticBezierSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment ABI::Microsoft::UI::Xaml::Media::IPolyQuadraticBezierSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyQuadraticBezierSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics ABI::Microsoft::UI::Xaml::Media::IPolyQuadraticBezierSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IProjection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection ABI::Microsoft::UI::Xaml::Media::IProjection

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IProjectionFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory ABI::Microsoft::UI::Xaml::Media::IProjectionFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IQuadraticBezierSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegment

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IQuadraticBezierSegmentStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics ABI::Microsoft::UI::Xaml::Media::IQuadraticBezierSegmentStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRadialGradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush ABI::Microsoft::UI::Xaml::Media::IRadialGradientBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRadialGradientBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory ABI::Microsoft::UI::Xaml::Media::IRadialGradientBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRadialGradientBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics ABI::Microsoft::UI::Xaml::Media::IRadialGradientBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRectangleGeometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry ABI::Microsoft::UI::Xaml::Media::IRectangleGeometry

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRectangleGeometryStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics ABI::Microsoft::UI::Xaml::Media::IRectangleGeometryStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRenderedEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs ABI::Microsoft::UI::Xaml::Media::IRenderedEventArgs

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRenderingEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs ABI::Microsoft::UI::Xaml::Media::IRenderingEventArgs

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRotateTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform ABI::Microsoft::UI::Xaml::Media::IRotateTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRotateTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics ABI::Microsoft::UI::Xaml::Media::IRotateTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IScaleTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform ABI::Microsoft::UI::Xaml::Media::IScaleTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IScaleTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics ABI::Microsoft::UI::Xaml::Media::IScaleTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IShadow;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow ABI::Microsoft::UI::Xaml::Media::IShadow

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IShadowFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory ABI::Microsoft::UI::Xaml::Media::IShadowFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISkewTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform ABI::Microsoft::UI::Xaml::Media::ISkewTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISkewTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics ABI::Microsoft::UI::Xaml::Media::ISkewTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush ABI::Microsoft::UI::Xaml::Media::ISolidColorBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory ABI::Microsoft::UI::Xaml::Media::ISolidColorBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics ABI::Microsoft::UI::Xaml::Media::ISolidColorBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IThemeShadow;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow ABI::Microsoft::UI::Xaml::Media::IThemeShadow

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IThemeShadowFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory ABI::Microsoft::UI::Xaml::Media::IThemeShadowFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush ABI::Microsoft::UI::Xaml::Media::ITileBrush

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrushFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory ABI::Microsoft::UI::Xaml::Media::ITileBrushFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrushStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics ABI::Microsoft::UI::Xaml::Media::ITileBrushStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform ABI::Microsoft::UI::Xaml::Media::ITransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory ABI::Microsoft::UI::Xaml::Media::ITransformFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformGroup;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup ABI::Microsoft::UI::Xaml::Media::ITransformGroup

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformGroupStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics ABI::Microsoft::UI::Xaml::Media::ITransformGroupStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITranslateTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform ABI::Microsoft::UI::Xaml::Media::ITranslateTransform

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITranslateTransformStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics ABI::Microsoft::UI::Xaml::Media::ITranslateTransformStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IVisualTreeHelper;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper ABI::Microsoft::UI::Xaml::Media::IVisualTreeHelper

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IVisualTreeHelperStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics ABI::Microsoft::UI::Xaml::Media::IVisualTreeHelperStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlCompositionBrushBase;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBase

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlCompositionBrushBaseFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBaseFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlCompositionBrushBaseOverrides;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBaseOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlCompositionBrushBaseProtected;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBaseProtected

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlCompositionBrushBaseStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBaseStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLight;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight ABI::Microsoft::UI::Xaml::Media::IXamlLight

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLightFactory;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory ABI::Microsoft::UI::Xaml::Media::IXamlLightFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLightOverrides;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides ABI::Microsoft::UI::Xaml::Media::IXamlLightOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLightProtected;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected ABI::Microsoft::UI::Xaml::Media::IXamlLightProtected

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IXamlLightStatics;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics ABI::Microsoft::UI::Xaml::Media::IXamlLightStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

#ifndef DEF___FIIterator_1_double_USE
#define DEF___FIIterator_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("638a2cf4-f474-5318-9055-141cb909ac4b"))
IIterator<double> : IIterator_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<double> __FIIterator_1_double_t;
#define __FIIterator_1_double ABI::Windows::Foundation::Collections::__FIIterator_1_double_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_double_USE */



#ifndef DEF___FIIterable_1_double_USE
#define DEF___FIIterable_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c738964e-9c64-5bce-b5ce-61e9a282ec4a"))
IIterable<double> : IIterable_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<double> __FIIterable_1_double_t;
#define __FIIterable_1_double ABI::Windows::Foundation::Collections::__FIIterable_1_double_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_double_USE */


namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class Popup;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IPopup;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup ABI::Microsoft::UI::Xaml::Controls::Primitives::IPopup

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("899ce360-eade-504b-8c0f-cf3e94a2ea4e"))
IIterator<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*, ABI::Microsoft::UI::Xaml::Controls::Primitives::IPopup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.Primitives.Popup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("968549c1-6a38-52a3-bb27-c43a3ba81280"))
IIterable<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*, ABI::Microsoft::UI::Xaml::Controls::Primitives::IPopup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.Primitives.Popup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Brush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("81bd2155-5609-5b66-9634-69172d5c12c6"))
IIterator<ABI::Microsoft::UI::Xaml::Media::Brush*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Brush*, ABI::Microsoft::UI::Xaml::Media::IBrush*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.Brush>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::Brush*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c0542a9c-ea0b-5c19-80aa-c2caf1ac17f3"))
IIterable<ABI::Microsoft::UI::Xaml::Media::Brush*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Brush*, ABI::Microsoft::UI::Xaml::Media::IBrush*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Brush>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::Brush*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Geometry;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("59d847f1-4b1b-5b2d-a2cb-23622e957dc0"))
IIterator<ABI::Microsoft::UI::Xaml::Media::Geometry*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Geometry*, ABI::Microsoft::UI::Xaml::Media::IGeometry*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.Geometry>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::Geometry*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9b9b662c-ff40-5fb3-a558-84c2ffab9037"))
IIterable<ABI::Microsoft::UI::Xaml::Media::Geometry*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Geometry*, ABI::Microsoft::UI::Xaml::Media::IGeometry*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Geometry>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::Geometry*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GradientStop;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42d46f68-df94-58f9-8cdf-3d403e7dd1d3"))
IIterator<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6b443031-7f9f-5c5a-97a9-3ff557bec586"))
IIterable<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class PathFigure;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0c15c679-2952-5fcd-bfb3-c9064c650072"))
IIterator<ABI::Microsoft::UI::Xaml::Media::PathFigure*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathFigure*, ABI::Microsoft::UI::Xaml::Media::IPathFigure*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.PathFigure>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::PathFigure*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("387967ce-013f-57f5-9a6f-4ca596b0d80a"))
IIterable<ABI::Microsoft::UI::Xaml::Media::PathFigure*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathFigure*, ABI::Microsoft::UI::Xaml::Media::IPathFigure*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathFigure>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::PathFigure*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class PathSegment;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("434e1321-9560-5646-8bf7-e1b06796723f"))
IIterator<ABI::Microsoft::UI::Xaml::Media::PathSegment*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathSegment*, ABI::Microsoft::UI::Xaml::Media::IPathSegment*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.PathSegment>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::PathSegment*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fcc860cd-04a1-5b10-8727-deb2fa51a96b"))
IIterable<ABI::Microsoft::UI::Xaml::Media::PathSegment*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathSegment*, ABI::Microsoft::UI::Xaml::Media::IPathSegment*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathSegment>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::PathSegment*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Transform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ab75535-9fba-54cc-9db3-3fb6c0e4abf5"))
IIterator<ABI::Microsoft::UI::Xaml::Media::Transform*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Transform*, ABI::Microsoft::UI::Xaml::Media::ITransform*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.Transform>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Media::Transform*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1a701f75-905e-59ee-82c8-5913b6c38302"))
IIterable<ABI::Microsoft::UI::Xaml::Media::Transform*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Transform*, ABI::Microsoft::UI::Xaml::Media::ITransform*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Transform>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Media::Transform*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class UIElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IUIElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement ABI::Microsoft::UI::Xaml::IUIElement

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c5f188b0-c653-5209-909a-eb97ca691617"))
IIterator<ABI::Microsoft::UI::Xaml::UIElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::UIElement*> __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("459bb954-42a3-5c74-8f87-42458f19aeaa"))
IIterable<ABI::Microsoft::UI::Xaml::UIElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::UIElement*> __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Point Point;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c602b59e-0a8e-5e99-b478-2b564585278d"))
IIterator<struct ABI::Windows::Foundation::Point> : IIterator_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<struct ABI::Windows::Foundation::Point> __FIIterator_1_Windows__CFoundation__CPoint_t;
#define __FIIterator_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c192280d-3a09-5423-9dc5-67b83ebde41d"))
IIterable<struct ABI::Windows::Foundation::Point> : IIterable_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<struct ABI::Windows::Foundation::Point> __FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("48c5bc90-5bf9-50ee-ae5d-0790f7b81f49"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a367363d-deaf-5d2c-909c-41b0f259ba7c"))
IVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6dbf1655-6d00-5c55-993c-b1a384fa75ce"))
VectorChangedEventHandler<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef VectorChangedEventHandler<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("95f51f05-f191-5bc6-86b0-2a2a4d4ffab1"))
IObservableVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::GradientStop*, ABI::Microsoft::UI::Xaml::Media::IGradientStop*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Media.GradientStop>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IObservableVector<ABI::Microsoft::UI::Xaml::Media::GradientStop*> __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t;
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIVectorView_1_double_USE
#define DEF___FIVectorView_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af7586a8-6b21-5f61-bff1-1b682293ad96"))
IVectorView<double> : IVectorView_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<double> __FIVectorView_1_double_t;
#define __FIVectorView_1_double ABI::Windows::Foundation::Collections::__FIVectorView_1_double_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_double_USE */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ef55f12e-1ca7-51f3-9955-46de4622f0aa"))
IVectorView<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*, ABI::Microsoft::UI::Xaml::Controls::Primitives::IPopup*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.Primitives.Popup>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Controls::Primitives::Popup*> __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("46b04baa-5871-5bab-918b-2714382f92f4"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::Brush*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Brush*, ABI::Microsoft::UI::Xaml::Media::IBrush*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.Brush>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::Brush*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6149b1f9-59ab-52aa-8a45-26755dca5b90"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::Geometry*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Geometry*, ABI::Microsoft::UI::Xaml::Media::IGeometry*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.Geometry>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::Geometry*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ee4d5b1b-f452-5397-9144-86746454eaa4"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::PathFigure*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathFigure*, ABI::Microsoft::UI::Xaml::Media::IPathFigure*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.PathFigure>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::PathFigure*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fff30db4-7bae-5c90-92bf-db5881f76c30"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::PathSegment*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathSegment*, ABI::Microsoft::UI::Xaml::Media::IPathSegment*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.PathSegment>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::PathSegment*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("00ec5143-06da-5002-8c66-dac978959fce"))
IVectorView<ABI::Microsoft::UI::Xaml::Media::Transform*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Transform*, ABI::Microsoft::UI::Xaml::Media::ITransform*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.Transform>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Media::Transform*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE
#define DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0b7b4c9d-182f-582a-bddb-42b1aac30cad"))
IVectorView<struct ABI::Windows::Foundation::Point> : IVectorView_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<struct ABI::Windows::Foundation::Point> __FIVectorView_1_Windows__CFoundation__CPoint_t;
#define __FIVectorView_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000


#ifndef DEF___FIVector_1_double_USE
#define DEF___FIVector_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f452d23c-bf05-5f3e-88e7-d17a6716b911"))
IVector<double> : IVector_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<double> __FIVector_1_double_t;
#define __FIVector_1_double ABI::Windows::Foundation::Collections::__FIVector_1_double_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_double_USE */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4130e096-0206-5c34-b424-40154b99c74d"))
IVector<ABI::Microsoft::UI::Xaml::Media::Brush*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Brush*, ABI::Microsoft::UI::Xaml::Media::IBrush*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Brush>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::Brush*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("62e3ccc0-41e4-5903-933b-ff9118b10ffd"))
IVector<ABI::Microsoft::UI::Xaml::Media::Geometry*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Geometry*, ABI::Microsoft::UI::Xaml::Media::IGeometry*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Geometry>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::Geometry*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ff221c4a-9a65-544f-86cd-0c07bcc48f8a"))
IVector<ABI::Microsoft::UI::Xaml::Media::PathFigure*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathFigure*, ABI::Microsoft::UI::Xaml::Media::IPathFigure*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathFigure>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::PathFigure*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dbbff207-32f0-56fa-b2d8-d4c8e8343ed0"))
IVector<ABI::Microsoft::UI::Xaml::Media::PathSegment*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::PathSegment*, ABI::Microsoft::UI::Xaml::Media::IPathSegment*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathSegment>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::PathSegment*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1e1aebf2-bc80-501f-9404-e0756a423355"))
IVector<ABI::Microsoft::UI::Xaml::Media::Transform*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::Transform*, ABI::Microsoft::UI::Xaml::Media::ITransform*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Transform>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Media::Transform*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CFoundation__CPoint_USE
#define DEF___FIVector_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c0d513a9-ec4a-5a5d-b6d5-b707defdb9f7"))
IVector<struct ABI::Windows::Foundation::Point> : IVector_impl<struct ABI::Windows::Foundation::Point>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Foundation.Point>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<struct ABI::Windows::Foundation::Point> __FIVector_1_Windows__CFoundation__CPoint_t;
#define __FIVector_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CFoundation__CPoint_USE */

#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class RenderedEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_USE
#define DEF___FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("19a913f7-9793-5d2e-b989-7ee26c263a2e"))
IEventHandler<ABI::Microsoft::UI::Xaml::Media::RenderedEventArgs*> : IEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::RenderedEventArgs*, ABI::Microsoft::UI::Xaml::Media::IRenderedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Media.RenderedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<ABI::Microsoft::UI::Xaml::Media::RenderedEventArgs*> __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_t;
#define __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs ABI::Windows::Foundation::__FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.EventHandler`1<Object>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_IInspectable_USE */



#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.IReference`1<Double>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<double> __FIReference_1_double_t;
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_double_USE */


namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class LoadedImageSurface;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class LoadedImageSourceLoadCompletedEventArgs;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e7919d99-f152-5645-a8fe-a3a6739e0f03"))
ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::LoadedImageSurface*, ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadCompletedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::LoadedImageSurface*, ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface*>, ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadCompletedEventArgs*, ABI::Microsoft::UI::Xaml::Media::ILoadedImageSourceLoadCompletedEventArgs*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Media.LoadedImageSurface, Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Microsoft::UI::Xaml::Media::LoadedImageSurface*, ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadCompletedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                class AnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface IAnimationPropertyInfo;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo ABI::Microsoft::UI::Composition::IAnimationPropertyInfo

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                class CompositionBrush;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface ICompositionBrush;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush ABI::Microsoft::UI::Composition::ICompositionBrush

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                typedef enum CompositionColorSpace : int CompositionColorSpace;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                class CompositionLight;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface ICompositionLight;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight ABI::Microsoft::UI::Composition::ICompositionLight

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                class Compositor;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface ICompositor;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CICompositor ABI::Microsoft::UI::Composition::ICompositor

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface IAnimationObject;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject ABI::Microsoft::UI::Composition::IAnimationObject

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Composition {
                interface ICompositionSurface;
            } /* Composition */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface ABI::Microsoft::UI::Composition::ICompositionSurface

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class DependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject ABI::Microsoft::UI::Xaml::IDependencyObject

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class DependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IDependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty ABI::Microsoft::UI::Xaml::IDependencyProperty

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler ABI::Microsoft::UI::Xaml::IExceptionRoutedEventHandler

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Media3D {
                        typedef struct Matrix3D Matrix3D;
                    } /* Media3D */
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventHandler;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler ABI::Microsoft::UI::Xaml::IRoutedEventHandler

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class UIElementWeakCollection;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4fdea5ee-c725-5026-ba83-24e5771357c6"))
IVectorView<ABI::Microsoft::UI::Xaml::UIElement*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::UIElement*> __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ea4a1af0-4286-5f11-8142-6b0169f4e9de"))
IVector<ABI::Microsoft::UI::Xaml::UIElement*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::UIElement*, ABI::Microsoft::UI::Xaml::IUIElement*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.UIElement>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::UIElement*> __FIVector_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class Window;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IWindow;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIWindow ABI::Microsoft::UI::Xaml::IWindow

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class XamlRoot;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IXamlRoot;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot ABI::Microsoft::UI::Xaml::IXamlRoot

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                interface IVectorChangedEventArgs;
            } /* Collections */
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs ABI::Windows::Foundation::Collections::IVectorChangedEventArgs

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Deferral;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IDeferral;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIDeferral ABI::Windows::Foundation::IDeferral

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IClosable;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIClosable ABI::Windows::Foundation::IClosable

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IPropertyValue;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIPropertyValue ABI::Windows::Foundation::IPropertyValue

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Size Size;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct TimeSpan TimeSpan;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */
} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IInputStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIInputStream ABI::Windows::Storage::Streams::IInputStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStream;
            } /* Streams */
        } /* Storage */
    } /* Windows */
} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream ABI::Windows::Storage::Streams::IRandomAccessStream

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace UI {
            typedef struct Color Color;
        } /* UI */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum AlignmentX : int AlignmentX;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum AlignmentY : int AlignmentY;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum BrushMappingMode : int BrushMappingMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum ColorInterpolationMode : int ColorInterpolationMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum FillRule : int FillRule;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum GradientSpreadMethod : int GradientSpreadMethod;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum LoadedImageSourceLoadStatus : int LoadedImageSourceLoadStatus;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum Stretch : int Stretch;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef enum SweepDirection : int SweepDirection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    typedef struct Matrix Matrix;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class AcrylicBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class CacheMode;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class FontFamily;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GeneralTransform;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GeometryCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class GradientStopCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class ImageSource;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class LinearGradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class PathFigureCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class PathSegmentCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class PointCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class Projection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class RadialGradientBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class SolidColorBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class ThemeShadow;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class TileBrush;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class TransformCollection;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class XamlCompositionBrushBase;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    class XamlLight;
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.UI.Xaml.Media.AlignmentX
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum AlignmentX : int
                    {
                        AlignmentX_Left = 0,
                        AlignmentX_Center = 1,
                        AlignmentX_Right = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.AlignmentY
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum AlignmentY : int
                    {
                        AlignmentY_Top = 0,
                        AlignmentY_Center = 1,
                        AlignmentY_Bottom = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.BrushMappingMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum BrushMappingMode : int
                    {
                        BrushMappingMode_Absolute = 0,
                        BrushMappingMode_RelativeToBoundingBox = 1,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.ColorInterpolationMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum ColorInterpolationMode : int
                    {
                        ColorInterpolationMode_ScRgbLinearInterpolation = 0,
                        ColorInterpolationMode_SRgbLinearInterpolation = 1,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.ElementCompositeMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum ElementCompositeMode : int
                    {
                        ElementCompositeMode_Inherit = 0,
                        ElementCompositeMode_SourceOver = 1,
                        ElementCompositeMode_MinBlend = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum FastPlayFallbackBehaviour : int
                    {
                        FastPlayFallbackBehaviour_Skip = 0,
                        FastPlayFallbackBehaviour_Hide = 1,
                        FastPlayFallbackBehaviour_Disable = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.FillRule
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum FillRule : int
                    {
                        FillRule_EvenOdd = 0,
                        FillRule_Nonzero = 1,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.GradientSpreadMethod
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum GradientSpreadMethod : int
                    {
                        GradientSpreadMethod_Pad = 0,
                        GradientSpreadMethod_Reflect = 1,
                        GradientSpreadMethod_Repeat = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum LoadedImageSourceLoadStatus : int
                    {
                        LoadedImageSourceLoadStatus_Success = 0,
                        LoadedImageSourceLoadStatus_NetworkError = 1,
                        LoadedImageSourceLoadStatus_InvalidFormat = 2,
                        LoadedImageSourceLoadStatus_Other = 3,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.PenLineCap
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum PenLineCap : int
                    {
                        PenLineCap_Flat = 0,
                        PenLineCap_Square = 1,
                        PenLineCap_Round = 2,
                        PenLineCap_Triangle = 3,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.PenLineJoin
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum PenLineJoin : int
                    {
                        PenLineJoin_Miter = 0,
                        PenLineJoin_Bevel = 1,
                        PenLineJoin_Round = 2,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.Stretch
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum Stretch : int
                    {
                        Stretch_None = 0,
                        Stretch_Fill = 1,
                        Stretch_Uniform = 2,
                        Stretch_UniformToFill = 3,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.StyleSimulations
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum StyleSimulations : int
                    {
                        StyleSimulations_None = 0,
                        StyleSimulations_BoldSimulation = 1,
                        StyleSimulations_ItalicSimulation = 2,
                        StyleSimulations_BoldItalicSimulation = 3,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.SweepDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    enum SweepDirection : int
                    {
                        SweepDirection_Counterclockwise = 0,
                        SweepDirection_Clockwise = 1,
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.Matrix
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    struct Matrix
                    {
                        DOUBLE M11;
                        DOUBLE M12;
                        DOUBLE M21;
                        DOUBLE M22;
                        DOUBLE OffsetX;
                        DOUBLE OffsetY;
                    };
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrush[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("3a8c760a-941f-58bc-a6d4-aa7a0dd1d036")
                    IAcrylicBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_TintColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TintColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TintOpacity(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TintOpacity(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TintTransitionDuration(
                            ABI::Windows::Foundation::TimeSpan* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TintTransitionDuration(
                            ABI::Windows::Foundation::TimeSpan value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlwaysUseFallback(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlwaysUseFallback(
                            boolean value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAcrylicBrush = _uuidof(IAcrylicBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrush2
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrush2[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrush2";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("23fad570-43ed-5a73-9de7-a303553d5414")
                    IAcrylicBrush2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_TintLuminosityOpacity(
                            __FIReference_1_double** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TintLuminosityOpacity(
                            __FIReference_1_double* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAcrylicBrush2 = _uuidof(IAcrylicBrush2);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushFactory[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("80173353-611d-5a02-8864-1aaa279dff1c")
                    IAcrylicBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IAcrylicBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAcrylicBrushFactory = _uuidof(IAcrylicBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushStatics[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("9d9d366b-00a3-5f3e-98b8-1df7fec1828c")
                    IAcrylicBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_TintColorProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TintOpacityProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TintTransitionDurationProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlwaysUseFallbackProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAcrylicBrushStatics = _uuidof(IAcrylicBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6e3eb0bd-20a1-52ea-aede-478061012279")
                    IAcrylicBrushStatics2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_TintLuminosityOpacityProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IAcrylicBrushStatics2 = _uuidof(IAcrylicBrushStatics2);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IArcSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ArcSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IArcSegment[] = L"Microsoft.UI.Xaml.Media.IArcSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6b7ce02b-87be-5acb-9d3b-c9964c6962d0")
                    IArcSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Size(
                            ABI::Windows::Foundation::Size* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Size(
                            ABI::Windows::Foundation::Size value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsLargeArc(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_IsLargeArc(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SweepDirection(
                            ABI::Microsoft::UI::Xaml::Media::SweepDirection* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SweepDirection(
                            ABI::Microsoft::UI::Xaml::Media::SweepDirection value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IArcSegment = _uuidof(IArcSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IArcSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ArcSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IArcSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IArcSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5ba7ccb3-5bc7-5038-99c5-93dc730230cf")
                    IArcSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_PointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SizeProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationAngleProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsLargeArcProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SweepDirectionProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IArcSegmentStatics = _uuidof(IArcSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBezierSegment[] = L"Microsoft.UI.Xaml.Media.IBezierSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0f36bade-892e-51fe-b94a-3875e86feaae")
                    IBezierSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point1(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point1(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point2(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point2(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point3(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point3(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBezierSegment = _uuidof(IBezierSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IBezierSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("98e74d5c-c97a-50b0-ae0e-d436dc9df16d")
                    IBezierSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point1Property(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point2Property(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point3Property(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBezierSegmentStatics = _uuidof(IBezierSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBitmapCache
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BitmapCache
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBitmapCache[] = L"Microsoft.UI.Xaml.Media.IBitmapCache";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("4b3a8983-27a2-592a-bda4-270431eae038")
                    IBitmapCache : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IBitmapCache = _uuidof(IBitmapCache);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrush[] = L"Microsoft.UI.Xaml.Media.IBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("2de3cb83-1329-5679-88f8-c822bc5442cb")
                    IBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Transform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Transform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RelativeTransform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RelativeTransform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBrush = _uuidof(IBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushFactory[] = L"Microsoft.UI.Xaml.Media.IBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b5258717-6c49-5ba5-87fd-35df382647a5")
                    IBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBrushFactory = _uuidof(IBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushOverrides[] = L"Microsoft.UI.Xaml.Media.IBrushOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b6b08394-bacf-53db-9ac7-be1c693e3513")
                    IBrushOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE PopulatePropertyInfoOverride(
                            HSTRING propertyName,
                            ABI::Microsoft::UI::Composition::IAnimationPropertyInfo* animationPropertyInfo
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBrushOverrides = _uuidof(IBrushOverrides);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushStatics[] = L"Microsoft.UI.Xaml.Media.IBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5b854f50-f818-5f01-91b0-28132d3f5957")
                    IBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_OpacityProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransformProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RelativeTransformProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IBrushStatics = _uuidof(IBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICacheMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CacheMode
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICacheMode[] = L"Microsoft.UI.Xaml.Media.ICacheMode";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("2ff1a1cb-0f48-53fd-b1de-e2223dfb2ff6")
                    ICacheMode : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_ICacheMode = _uuidof(ICacheMode);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICacheModeFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CacheMode
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICacheModeFactory[] = L"Microsoft.UI.Xaml.Media.ICacheModeFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("e257811e-dcc5-51d8-829a-3e9400198a41")
                    ICacheModeFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::ICacheMode** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICacheModeFactory = _uuidof(ICacheModeFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositeTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositeTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositeTransform[] = L"Microsoft.UI.Xaml.Media.ICompositeTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("55c5f8f3-20e4-5b80-a046-ce4d0f62f2fe")
                    ICompositeTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ScaleX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ScaleY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SkewX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SkewX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SkewY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SkewY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Rotation(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Rotation(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TranslateX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TranslateX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TranslateY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_TranslateY(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICompositeTransform = _uuidof(ICompositeTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositeTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositeTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositeTransformStatics[] = L"Microsoft.UI.Xaml.Media.ICompositeTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("7701385b-8eab-5071-bfa5-b453e1e52b43")
                    ICompositeTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SkewXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SkewYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TranslateXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TranslateYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICompositeTransformStatics = _uuidof(ICompositeTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositionTarget
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositionTarget
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositionTarget[] = L"Microsoft.UI.Xaml.Media.ICompositionTarget";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("7d938324-e3ad-597c-93f6-520725410e68")
                    ICompositionTarget : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_ICompositionTarget = _uuidof(ICompositionTarget);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositionTargetStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositionTarget
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositionTargetStatics[] = L"Microsoft.UI.Xaml.Media.ICompositionTargetStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("12a4be6f-6db1-5165-b622-d57ab782745b")
                    ICompositionTargetStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Rendering(
                            __FIEventHandler_1_IInspectable* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_Rendering(
                            EventRegistrationToken token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE add_Rendered(
                            __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_Rendered(
                            EventRegistrationToken token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE add_SurfaceContentsLost(
                            __FIEventHandler_1_IInspectable* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_SurfaceContentsLost(
                            EventRegistrationToken token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetCompositorForCurrentThread(
                            ABI::Microsoft::UI::Composition::ICompositor** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ICompositionTargetStatics = _uuidof(ICompositionTargetStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IEllipseGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IEllipseGeometry[] = L"Microsoft.UI.Xaml.Media.IEllipseGeometry";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("ababd262-d8e4-5b49-bce9-0108a5209d45")
                    IEllipseGeometry : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Center(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Center(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RadiusX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RadiusY(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEllipseGeometry = _uuidof(IEllipseGeometry);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IEllipseGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IEllipseGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IEllipseGeometryStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("e8a33c80-d72f-5248-a71f-4b70a0757f89")
                    IEllipseGeometryStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IEllipseGeometryStatics = _uuidof(IEllipseGeometryStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamily
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamily[] = L"Microsoft.UI.Xaml.Media.IFontFamily";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("18fa5bc1-7294-527c-bb02-b213e0b3a2a3")
                    IFontFamily : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Source(
                            HSTRING* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IFontFamily = _uuidof(IFontFamily);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamilyFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamilyFactory[] = L"Microsoft.UI.Xaml.Media.IFontFamilyFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("61b88a77-d0f9-5e9e-8c28-eda01fede22e")
                    IFontFamilyFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithName(
                            HSTRING familyName,
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IFontFamily** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IFontFamilyFactory = _uuidof(IFontFamilyFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamilyStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamilyStatics[] = L"Microsoft.UI.Xaml.Media.IFontFamilyStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b3eadceb-c471-58fe-93d0-d71b04a7fd54")
                    IFontFamilyStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_XamlAutoFontFamily(
                            ABI::Microsoft::UI::Xaml::Media::IFontFamily** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IFontFamilyStatics = _uuidof(IFontFamilyStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransform[] = L"Microsoft.UI.Xaml.Media.IGeneralTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("04eedeeb-31e5-54c0-ae3f-8bd06645d339")
                    IGeneralTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Inverse(
                            ABI::Microsoft::UI::Xaml::Media::IGeneralTransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TransformPoint(
                            ABI::Windows::Foundation::Point point,
                            ABI::Windows::Foundation::Point* result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryTransform(
                            ABI::Windows::Foundation::Point inPoint,
                            ABI::Windows::Foundation::Point* outPoint,
                            boolean* returnValue
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TransformBounds(
                            ABI::Windows::Foundation::Rect rect,
                            ABI::Windows::Foundation::Rect* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeneralTransform = _uuidof(IGeneralTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransformFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransformFactory[] = L"Microsoft.UI.Xaml.Media.IGeneralTransformFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("2f1025a3-5391-5d1b-8382-3caaa1d26a96")
                    IGeneralTransformFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IGeneralTransform** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeneralTransformFactory = _uuidof(IGeneralTransformFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransformOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransformOverrides[] = L"Microsoft.UI.Xaml.Media.IGeneralTransformOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("ce8970f1-83f8-543f-9cf5-439c461601f1")
                    IGeneralTransformOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_InverseCore(
                            ABI::Microsoft::UI::Xaml::Media::IGeneralTransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TryTransformCore(
                            ABI::Windows::Foundation::Point inPoint,
                            ABI::Windows::Foundation::Point* outPoint,
                            boolean* returnValue
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE TransformBoundsCore(
                            ABI::Windows::Foundation::Rect rect,
                            ABI::Windows::Foundation::Rect* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeneralTransformOverrides = _uuidof(IGeneralTransformOverrides);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometry[] = L"Microsoft.UI.Xaml.Media.IGeometry";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("dc102dcc-3be2-5414-8599-94b6e76ef39b")
                    IGeometry : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Transform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Transform(
                            ABI::Microsoft::UI::Xaml::Media::ITransform* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Bounds(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeometry = _uuidof(IGeometry);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryFactory[] = L"Microsoft.UI.Xaml.Media.IGeometryFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("4edcd536-7949-548a-a9b1-6ff03b951cf3")
                    IGeometryFactory : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IGeometryFactory = _uuidof(IGeometryFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeometryGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryGroup[] = L"Microsoft.UI.Xaml.Media.IGeometryGroup";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b4dde569-ea96-5883-914c-ebb7d818dd3a")
                    IGeometryGroup : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FillRule(
                            ABI::Microsoft::UI::Xaml::Media::FillRule* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_FillRule(
                            ABI::Microsoft::UI::Xaml::Media::FillRule value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Children(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Children(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeometryGroup = _uuidof(IGeometryGroup);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryGroupStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeometryGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryGroupStatics[] = L"Microsoft.UI.Xaml.Media.IGeometryGroupStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("56a23da5-d015-568a-9f8b-11b125cfd9b4")
                    IGeometryGroupStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FillRuleProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ChildrenProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeometryGroupStatics = _uuidof(IGeometryGroupStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IGeometryStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("349f78d0-4978-5742-b7d2-b34ea2c95600")
                    IGeometryStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Empty(
                            ABI::Microsoft::UI::Xaml::Media::IGeometry** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_StandardFlatteningTolerance(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_TransformProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGeometryStatics = _uuidof(IGeometryStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrush[] = L"Microsoft.UI.Xaml.Media.IGradientBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("77c347fa-c4c4-5174-a945-65cab3aa1c75")
                    IGradientBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SpreadMethod(
                            ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpreadMethod(
                            ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MappingMode(
                            ABI::Microsoft::UI::Xaml::Media::BrushMappingMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MappingMode(
                            ABI::Microsoft::UI::Xaml::Media::BrushMappingMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorInterpolationMode(
                            ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ColorInterpolationMode(
                            ABI::Microsoft::UI::Xaml::Media::ColorInterpolationMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GradientStops(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GradientStops(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGradientBrush = _uuidof(IGradientBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.IGradientBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("64ff6177-1eda-565b-b7aa-ac50152e3136")
                    IGradientBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IGradientBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGradientBrushFactory = _uuidof(IGradientBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.IGradientBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("4d3697d7-c6db-501c-8fa2-da30b8c8ca3b")
                    IGradientBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SpreadMethodProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MappingModeProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ColorInterpolationModeProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GradientStopsProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGradientBrushStatics = _uuidof(IGradientBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientStop
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientStop
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientStop[] = L"Microsoft.UI.Xaml.Media.IGradientStop";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("48bcb039-e8e1-5743-94c3-f766011d3b5d")
                    IGradientStop : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Offset(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Offset(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGradientStop = _uuidof(IGradientStop);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientStopStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientStop
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientStopStatics[] = L"Microsoft.UI.Xaml.Media.IGradientStopStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0b566c1b-37de-5bfd-b419-0f7c4c0a0523")
                    IGradientStopStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ColorProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_OffsetProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IGradientStopStatics = _uuidof(IGradientStopStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageBrush[] = L"Microsoft.UI.Xaml.Media.IImageBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("edcd91a3-a868-5ba6-9489-5b12b4c29d85")
                    IImageBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ImageSource(
                            ABI::Microsoft::UI::Xaml::Media::IImageSource** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ImageSource(
                            ABI::Microsoft::UI::Xaml::Media::IImageSource* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE add_ImageFailed(
                            ABI::Microsoft::UI::Xaml::IExceptionRoutedEventHandler* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_ImageFailed(
                            EventRegistrationToken token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE add_ImageOpened(
                            ABI::Microsoft::UI::Xaml::IRoutedEventHandler* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_ImageOpened(
                            EventRegistrationToken token
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IImageBrush = _uuidof(IImageBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageBrushStatics[] = L"Microsoft.UI.Xaml.Media.IImageBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("ce8082dc-a505-5b4f-8861-79630f52c189")
                    IImageBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ImageSourceProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IImageBrushStatics = _uuidof(IImageBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageSource
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageSource[] = L"Microsoft.UI.Xaml.Media.IImageSource";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6c2038f6-d6d5-55e9-9b9e-082f12dbff60")
                    IImageSource : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IImageSource = _uuidof(IImageSource);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageSourceFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageSource
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageSourceFactory[] = L"Microsoft.UI.Xaml.Media.IImageSourceFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0b1e64a3-e353-5901-b84b-ae9842aea5cd")
                    IImageSourceFactory : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IImageSourceFactory = _uuidof(IImageSourceFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineGeometry[] = L"Microsoft.UI.Xaml.Media.ILineGeometry";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("467ef3c5-bc43-50ed-bb23-16be2c63356e")
                    ILineGeometry : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_StartPoint(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_StartPoint(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_EndPoint(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_EndPoint(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILineGeometry = _uuidof(ILineGeometry);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineGeometryStatics[] = L"Microsoft.UI.Xaml.Media.ILineGeometryStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("ce0ecbf3-9389-5304-b7c8-5e610902f258")
                    ILineGeometryStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_StartPointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_EndPointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILineGeometryStatics = _uuidof(ILineGeometryStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineSegment[] = L"Microsoft.UI.Xaml.Media.ILineSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0c618e54-d883-588c-8875-bd8dfd6a6a3e")
                    ILineSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILineSegment = _uuidof(ILineSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineSegmentStatics[] = L"Microsoft.UI.Xaml.Media.ILineSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c3ec48a9-b9c0-561f-9925-d1d1b2a6bae6")
                    ILineSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_PointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILineSegmentStatics = _uuidof(ILineSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrush[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c0ab9638-1bd9-5fa4-9649-48cfa12f0d1e")
                    ILinearGradientBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_StartPoint(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_StartPoint(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_EndPoint(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_EndPoint(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILinearGradientBrush = _uuidof(ILinearGradientBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c0ba7de3-ccfd-534c-882f-3ab39ae723f3")
                    ILinearGradientBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithGradientStopCollectionAndAngle(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* gradientStopCollection,
                            DOUBLE angle,
                            ABI::Microsoft::UI::Xaml::Media::ILinearGradientBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILinearGradientBrushFactory = _uuidof(ILinearGradientBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("df029e84-f6be-5b7e-ba22-3b4e7a6bceee")
                    ILinearGradientBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_StartPointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_EndPointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILinearGradientBrushStatics = _uuidof(ILinearGradientBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSourceLoadCompletedEventArgs[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("4121bb7c-48e8-542d-b950-3ea7e709c0d6")
                    ILoadedImageSourceLoadCompletedEventArgs : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Status(
                            ABI::Microsoft::UI::Xaml::Media::LoadedImageSourceLoadStatus* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILoadedImageSourceLoadCompletedEventArgs = _uuidof(ILoadedImageSourceLoadCompletedEventArgs);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSurface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSurface[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSurface";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b5275540-1706-5851-95cc-498ee81fb183")
                    ILoadedImageSurface : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_DecodedPhysicalSize(
                            ABI::Windows::Foundation::Size* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_DecodedSize(
                            ABI::Windows::Foundation::Size* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_NaturalSize(
                            ABI::Windows::Foundation::Size* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE add_LoadCompleted(
                            __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* handler,
                            EventRegistrationToken* token
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE remove_LoadCompleted(
                            EventRegistrationToken token
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILoadedImageSurface = _uuidof(ILoadedImageSurface);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("25d390c4-4e32-52c2-868f-f2ede74ee442")
                    ILoadedImageSurfaceStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE StartLoadFromUriWithSize(
                            ABI::Windows::Foundation::IUriRuntimeClass* uri,
                            ABI::Windows::Foundation::Size desiredMaxSize,
                            ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE StartLoadFromUri(
                            ABI::Windows::Foundation::IUriRuntimeClass* uri,
                            ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE StartLoadFromStreamWithSize(
                            ABI::Windows::Storage::Streams::IRandomAccessStream* stream,
                            ABI::Windows::Foundation::Size desiredMaxSize,
                            ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE StartLoadFromStream(
                            ABI::Windows::Storage::Streams::IRandomAccessStream* stream,
                            ABI::Microsoft::UI::Xaml::Media::ILoadedImageSurface** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ILoadedImageSurfaceStatics = _uuidof(ILoadedImageSurfaceStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrix3DProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrix3DProjection[] = L"Microsoft.UI.Xaml.Media.IMatrix3DProjection";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("fc3338ef-f390-5bb1-932e-3b7c08788187")
                    IMatrix3DProjection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ProjectionMatrix(
                            ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ProjectionMatrix(
                            ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrix3DProjection = _uuidof(IMatrix3DProjection);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics[] = L"Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("a5a7e267-7a5d-58ef-a8cd-b88ebdf82207")
                    IMatrix3DProjectionStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ProjectionMatrixProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrix3DProjectionStatics = _uuidof(IMatrix3DProjectionStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixHelper[] = L"Microsoft.UI.Xaml.Media.IMatrixHelper";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("9571fd76-cc5c-534d-ac85-cb4ac870c912")
                    IMatrixHelper : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrixHelper = _uuidof(IMatrixHelper);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixHelperStatics[] = L"Microsoft.UI.Xaml.Media.IMatrixHelperStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5762cf6b-4fb0-532f-8368-de960042701f")
                    IMatrixHelperStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Identity(
                            ABI::Microsoft::UI::Xaml::Media::Matrix* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE FromElements(
                            DOUBLE m11,
                            DOUBLE m12,
                            DOUBLE m21,
                            DOUBLE m22,
                            DOUBLE offsetX,
                            DOUBLE offsetY,
                            ABI::Microsoft::UI::Xaml::Media::Matrix* result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetIsIdentity(
                            ABI::Microsoft::UI::Xaml::Media::Matrix target,
                            boolean* result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE Transform(
                            ABI::Microsoft::UI::Xaml::Media::Matrix target,
                            ABI::Windows::Foundation::Point point,
                            ABI::Windows::Foundation::Point* result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrixHelperStatics = _uuidof(IMatrixHelperStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixTransform[] = L"Microsoft.UI.Xaml.Media.IMatrixTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("f03138e1-addd-59fa-b993-3ea69b888ace")
                    IMatrixTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Matrix(
                            ABI::Microsoft::UI::Xaml::Media::Matrix* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Matrix(
                            ABI::Microsoft::UI::Xaml::Media::Matrix value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrixTransform = _uuidof(IMatrixTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixTransformStatics[] = L"Microsoft.UI.Xaml.Media.IMatrixTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d7db9de3-5071-5115-98fb-ccad2fd46e44")
                    IMatrixTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_MatrixProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMatrixTransformStatics = _uuidof(IMatrixTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMediaTransportControlsThumbnailRequestedEventArgs[] = L"Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("fe0ffb86-74b0-5031-accc-b34d0382a637")
                    IMediaTransportControlsThumbnailRequestedEventArgs : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE SetThumbnailImage(
                            ABI::Windows::Storage::Streams::IInputStream* source
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                            ABI::Windows::Foundation::IDeferral** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IMediaTransportControlsThumbnailRequestedEventArgs = _uuidof(IMediaTransportControlsThumbnailRequestedEventArgs);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathFigure
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathFigure
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathFigure[] = L"Microsoft.UI.Xaml.Media.IPathFigure";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0ee00712-bf65-5f27-9c06-14abdf6656d7")
                    IPathFigure : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Segments(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Segments(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_StartPoint(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_StartPoint(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsClosed(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_IsClosed(
                            boolean value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsFilled(
                            boolean* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_IsFilled(
                            boolean value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPathFigure = _uuidof(IPathFigure);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathFigureStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathFigure
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathFigureStatics[] = L"Microsoft.UI.Xaml.Media.IPathFigureStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("93bc33c4-879a-5edb-b8d7-7ecb861a7314")
                    IPathFigureStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_SegmentsProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_StartPointProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsClosedProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_IsFilledProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPathFigureStatics = _uuidof(IPathFigureStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathGeometry[] = L"Microsoft.UI.Xaml.Media.IPathGeometry";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("11b9d95d-d3d9-5337-a05c-73a27a2b5124")
                    IPathGeometry : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FillRule(
                            ABI::Microsoft::UI::Xaml::Media::FillRule* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_FillRule(
                            ABI::Microsoft::UI::Xaml::Media::FillRule value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Figures(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Figures(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPathGeometry = _uuidof(IPathGeometry);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IPathGeometryStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d7f408fe-6c3a-5cce-91cc-c5a95d4b345a")
                    IPathGeometryStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FillRuleProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_FiguresProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPathGeometryStatics = _uuidof(IPathGeometryStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathSegment[] = L"Microsoft.UI.Xaml.Media.IPathSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b922ebbe-08f0-57e9-8785-7e57097f3bd4")
                    IPathSegment : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IPathSegment = _uuidof(IPathSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathSegmentFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathSegmentFactory[] = L"Microsoft.UI.Xaml.Media.IPathSegmentFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("0559a4ff-ac4b-5bb7-b541-d373960e083b")
                    IPathSegmentFactory : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IPathSegmentFactory = _uuidof(IPathSegmentFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPlaneProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PlaneProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPlaneProjection[] = L"Microsoft.UI.Xaml.Media.IPlaneProjection";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d3e22836-0322-5d75-941c-a5ffb05192b2")
                    IPlaneProjection : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LocalOffsetX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LocalOffsetY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetZ(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_LocalOffsetZ(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RotationX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RotationY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationZ(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RotationZ(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterOfRotationX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterOfRotationY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationZ(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterOfRotationZ(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GlobalOffsetX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GlobalOffsetY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetZ(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GlobalOffsetZ(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ProjectionMatrix(
                            ABI::Microsoft::UI::Xaml::Media::Media3D::Matrix3D* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPlaneProjection = _uuidof(IPlaneProjection);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPlaneProjectionStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PlaneProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPlaneProjectionStatics[] = L"Microsoft.UI.Xaml.Media.IPlaneProjectionStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("96d86c18-90dd-564a-828a-8735e4219b1d")
                    IPlaneProjectionStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_LocalOffsetZProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RotationZProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterOfRotationZProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GlobalOffsetZProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ProjectionMatrixProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPlaneProjectionStatics = _uuidof(IPlaneProjectionStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyBezierSegment[] = L"Microsoft.UI.Xaml.Media.IPolyBezierSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d7f760a0-b93a-562a-8118-6330ed22c307")
                    IPolyBezierSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Points(
                            __FIVector_1_Windows__CFoundation__CPoint** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Points(
                            __FIVector_1_Windows__CFoundation__CPoint* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyBezierSegment = _uuidof(IPolyBezierSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("738ef089-a80f-53e0-816f-f787a4461907")
                    IPolyBezierSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_PointsProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyBezierSegmentStatics = _uuidof(IPolyBezierSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyLineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyLineSegment[] = L"Microsoft.UI.Xaml.Media.IPolyLineSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("426ef287-0287-536f-ad9e-6a05ecbb323a")
                    IPolyLineSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Points(
                            __FIVector_1_Windows__CFoundation__CPoint** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Points(
                            __FIVector_1_Windows__CFoundation__CPoint* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyLineSegment = _uuidof(IPolyLineSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("cf54e568-101a-5349-9189-6f9a1e7f5280")
                    IPolyLineSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_PointsProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyLineSegmentStatics = _uuidof(IPolyLineSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("56372f4c-c531-5c3e-b0e0-1645f5a8d872")
                    IPolyQuadraticBezierSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Points(
                            __FIVector_1_Windows__CFoundation__CPoint** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Points(
                            __FIVector_1_Windows__CFoundation__CPoint* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyQuadraticBezierSegment = _uuidof(IPolyQuadraticBezierSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("7eb6374d-cd30-5507-b2ab-c4e3a7dc60bf")
                    IPolyQuadraticBezierSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_PointsProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IPolyQuadraticBezierSegmentStatics = _uuidof(IPolyQuadraticBezierSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Projection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IProjection[] = L"Microsoft.UI.Xaml.Media.IProjection";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c95364b3-6058-5ee5-9e28-d38b7679fcd4")
                    IProjection : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IProjection = _uuidof(IProjection);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IProjectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Projection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IProjectionFactory[] = L"Microsoft.UI.Xaml.Media.IProjectionFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("870ea34f-db61-5b75-89ad-e0480c802937")
                    IProjectionFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IProjection** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IProjectionFactory = _uuidof(IProjectionFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.IQuadraticBezierSegment";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6048abe4-7a12-5195-bd61-71dfd0361c38")
                    IQuadraticBezierSegment : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point1(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point1(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point2(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Point2(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IQuadraticBezierSegment = _uuidof(IQuadraticBezierSegment);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("4d56ea65-0a1a-528a-a5b6-41da03ac71f4")
                    IQuadraticBezierSegmentStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Point1Property(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Point2Property(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IQuadraticBezierSegmentStatics = _uuidof(IQuadraticBezierSegmentStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrush[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5d493ce1-b844-546a-b772-b3bcba7e98ee")
                    IRadialGradientBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Center(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Center(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RadiusX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_RadiusY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GradientOrigin(
                            ABI::Windows::Foundation::Point* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_GradientOrigin(
                            ABI::Windows::Foundation::Point value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MappingMode(
                            ABI::Microsoft::UI::Xaml::Media::BrushMappingMode* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_MappingMode(
                            ABI::Microsoft::UI::Xaml::Media::BrushMappingMode value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationSpace(
                            ABI::Microsoft::UI::Composition::CompositionColorSpace* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_InterpolationSpace(
                            ABI::Microsoft::UI::Composition::CompositionColorSpace value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpreadMethod(
                            ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_SpreadMethod(
                            ABI::Microsoft::UI::Xaml::Media::GradientSpreadMethod value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GradientStops(
                            __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRadialGradientBrush = _uuidof(IRadialGradientBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d90ba26e-9e67-54bd-a2d9-61c8f9f1d433")
                    IRadialGradientBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IRadialGradientBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRadialGradientBrushFactory = _uuidof(IRadialGradientBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("f275a0b8-66f9-5b7d-a415-7eda65fe6dd3")
                    IRadialGradientBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_RadiusYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_GradientOriginProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_InterpolationSpaceProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_MappingModeProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_SpreadMethodProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRadialGradientBrushStatics = _uuidof(IRadialGradientBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRectangleGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRectangleGeometry[] = L"Microsoft.UI.Xaml.Media.IRectangleGeometry";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b6143890-a5f5-54e0-ab42-d88bab451f04")
                    IRectangleGeometry : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Rect(
                            ABI::Windows::Foundation::Rect* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Rect(
                            ABI::Windows::Foundation::Rect value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRectangleGeometry = _uuidof(IRectangleGeometry);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRectangleGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRectangleGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IRectangleGeometryStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("1ae7ac26-8a8b-55a5-b035-586e2b642919")
                    IRectangleGeometryStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RectProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRectangleGeometryStatics = _uuidof(IRectangleGeometryStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRenderedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RenderedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRenderedEventArgs[] = L"Microsoft.UI.Xaml.Media.IRenderedEventArgs";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b268b885-118d-5b66-8099-3b6bb8644726")
                    IRenderedEventArgs : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FrameDuration(
                            ABI::Windows::Foundation::TimeSpan* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRenderedEventArgs = _uuidof(IRenderedEventArgs);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRenderingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RenderingEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRenderingEventArgs[] = L"Microsoft.UI.Xaml.Media.IRenderingEventArgs";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("a67c8f8d-1885-5fc9-975c-901224f79b1e")
                    IRenderingEventArgs : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_RenderingTime(
                            ABI::Windows::Foundation::TimeSpan* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRenderingEventArgs = _uuidof(IRenderingEventArgs);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRotateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RotateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRotateTransform[] = L"Microsoft.UI.Xaml.Media.IRotateTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("d4686e7c-a374-5cac-8927-0ef07c5b254d")
                    IRotateTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Angle(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Angle(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRotateTransform = _uuidof(IRotateTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRotateTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RotateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRotateTransformStatics[] = L"Microsoft.UI.Xaml.Media.IRotateTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("8ec4c662-04f8-51d7-bcb2-17f10c2faa38")
                    IRotateTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AngleProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IRotateTransformStatics = _uuidof(IRotateTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IScaleTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ScaleTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IScaleTransform[] = L"Microsoft.UI.Xaml.Media.IScaleTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("94b064a4-34f0-5ef9-8b67-444f5699f52a")
                    IScaleTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ScaleX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_ScaleY(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IScaleTransform = _uuidof(IScaleTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IScaleTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ScaleTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IScaleTransformStatics[] = L"Microsoft.UI.Xaml.Media.IScaleTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("76485bd5-a5bf-5790-a837-8193c84df353")
                    IScaleTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_ScaleYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IScaleTransformStatics = _uuidof(IScaleTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Shadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IShadow[] = L"Microsoft.UI.Xaml.Media.IShadow";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("cc12fd6a-50aa-5eb3-9a0e-b938b454c439")
                    IShadow : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IShadow = _uuidof(IShadow);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IShadowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Shadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IShadowFactory[] = L"Microsoft.UI.Xaml.Media.IShadowFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c9115fbb-fcc3-52bf-b8ee-c348102a46e0")
                    IShadowFactory : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IShadowFactory = _uuidof(IShadowFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISkewTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SkewTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISkewTransform[] = L"Microsoft.UI.Xaml.Media.ISkewTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("230abaa6-a9b6-5210-873f-36bea29d7c06")
                    ISkewTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CenterY(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AngleX(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AngleX(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AngleY(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AngleY(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISkewTransform = _uuidof(ISkewTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISkewTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SkewTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISkewTransformStatics[] = L"Microsoft.UI.Xaml.Media.ISkewTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("93265150-53d0-52e3-88a3-3d93e2ed861a")
                    ISkewTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CenterXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_CenterYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AngleXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AngleYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISkewTransformStatics = _uuidof(ISkewTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrush[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b3865c31-37c8-55c1-8a72-d41c67642e2a")
                    ISolidColorBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Color(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Color(
                            ABI::Windows::UI::Color value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISolidColorBrush = _uuidof(ISolidColorBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrushFactory[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("7b559384-4daa-54f4-91ef-33a23fd816ca")
                    ISolidColorBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithColor(
                            ABI::Windows::UI::Color color,
                            ABI::Microsoft::UI::Xaml::Media::ISolidColorBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISolidColorBrushFactory = _uuidof(ISolidColorBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrushStatics[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6bc16da0-c4e6-59b8-995b-b31e48424c07")
                    ISolidColorBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ColorProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ISolidColorBrushStatics = _uuidof(ISolidColorBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IThemeShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ThemeShadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IThemeShadow[] = L"Microsoft.UI.Xaml.Media.IThemeShadow";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c264208a-d1f4-58ae-8a88-fc59148bee69")
                    IThemeShadow : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Receivers(
                            __FIVector_1_Microsoft__CUI__CXaml__CUIElement** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IThemeShadow = _uuidof(IThemeShadow);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IThemeShadowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ThemeShadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IThemeShadowFactory[] = L"Microsoft.UI.Xaml.Media.IThemeShadowFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("704a9c96-76a0-569e-8ceb-34e92a23fe11")
                    IThemeShadowFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IThemeShadow** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IThemeShadowFactory = _uuidof(IThemeShadowFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrush[] = L"Microsoft.UI.Xaml.Media.ITileBrush";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("ee46060d-cabc-505d-883c-75d2e0e45875")
                    ITileBrush : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_AlignmentX(
                            ABI::Microsoft::UI::Xaml::Media::AlignmentX* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlignmentX(
                            ABI::Microsoft::UI::Xaml::Media::AlignmentX value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlignmentY(
                            ABI::Microsoft::UI::Xaml::Media::AlignmentY* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_AlignmentY(
                            ABI::Microsoft::UI::Xaml::Media::AlignmentY value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Stretch(
                            ABI::Microsoft::UI::Xaml::Media::Stretch* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Stretch(
                            ABI::Microsoft::UI::Xaml::Media::Stretch value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITileBrush = _uuidof(ITileBrush);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrushFactory[] = L"Microsoft.UI.Xaml.Media.ITileBrushFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("8542e5e6-5177-506f-8a3b-aa7da651f099")
                    ITileBrushFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::ITileBrush** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITileBrushFactory = _uuidof(ITileBrushFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrushStatics[] = L"Microsoft.UI.Xaml.Media.ITileBrushStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("f402197b-9047-5f8a-90bc-6f5d8c748a5f")
                    ITileBrushStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_AlignmentXProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_AlignmentYProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_StretchProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITileBrushStatics = _uuidof(ITileBrushStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Transform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransform[] = L"Microsoft.UI.Xaml.Media.ITransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("92a8dee5-1413-56b9-8cca-3c46918fde1b")
                    ITransform : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_ITransform = _uuidof(ITransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Transform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformFactory[] = L"Microsoft.UI.Xaml.Media.ITransformFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("7da293f9-b82e-5d15-b623-c08210cbb640")
                    ITransformFactory : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_ITransformFactory = _uuidof(ITransformFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TransformGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformGroup[] = L"Microsoft.UI.Xaml.Media.ITransformGroup";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("17c55f3b-899c-588f-8bd4-40fa3a5fcb04")
                    ITransformGroup : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_Children(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Children(
                            __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Value(
                            ABI::Microsoft::UI::Xaml::Media::Matrix* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITransformGroup = _uuidof(ITransformGroup);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformGroupStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TransformGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformGroupStatics[] = L"Microsoft.UI.Xaml.Media.ITransformGroupStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("8f1508f6-7dcf-53d5-bbc0-d8fcd96d7399")
                    ITransformGroupStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_ChildrenProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITransformGroupStatics = _uuidof(ITransformGroupStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITranslateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TranslateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITranslateTransform[] = L"Microsoft.UI.Xaml.Media.ITranslateTransform";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("cfa21ca9-b79f-5450-b459-a96c48cb2c8f")
                    ITranslateTransform : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_X(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_X(
                            DOUBLE value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_Y(
                            DOUBLE* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_Y(
                            DOUBLE value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITranslateTransform = _uuidof(ITranslateTransform);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITranslateTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TranslateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITranslateTransformStatics[] = L"Microsoft.UI.Xaml.Media.ITranslateTransformStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("1342eb11-5a6e-5263-ab3e-9b672a86fc0c")
                    ITranslateTransformStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_XProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE get_YProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_ITranslateTransformStatics = _uuidof(ITranslateTransformStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IVisualTreeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IVisualTreeHelper[] = L"Microsoft.UI.Xaml.Media.IVisualTreeHelper";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5f69ac1e-6504-5e3f-a11c-87684c1db814")
                    IVisualTreeHelper : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IVisualTreeHelper = _uuidof(IVisualTreeHelper);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics[] = L"Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("5aece43c-7651-5bb5-855c-2198496e455e")
                    IVisualTreeHelperStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE FindElementsInHostCoordinatesPoint(
                            ABI::Windows::Foundation::Point intersectingPoint,
                            ABI::Microsoft::UI::Xaml::IUIElement* subtree,
                            __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE FindElementsInHostCoordinatesRect(
                            ABI::Windows::Foundation::Rect intersectingRect,
                            ABI::Microsoft::UI::Xaml::IUIElement* subtree,
                            __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE FindAllElementsInHostCoordinatesPoint(
                            ABI::Windows::Foundation::Point intersectingPoint,
                            ABI::Microsoft::UI::Xaml::IUIElement* subtree,
                            boolean includeAllElements,
                            __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE FindAllElementsInHostCoordinatesRect(
                            ABI::Windows::Foundation::Rect intersectingRect,
                            ABI::Microsoft::UI::Xaml::IUIElement* subtree,
                            boolean includeAllElements,
                            __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetChild(
                            ABI::Microsoft::UI::Xaml::IDependencyObject* reference,
                            INT32 childIndex,
                            ABI::Microsoft::UI::Xaml::IDependencyObject** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetChildrenCount(
                            ABI::Microsoft::UI::Xaml::IDependencyObject* reference,
                            INT32* result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetParent(
                            ABI::Microsoft::UI::Xaml::IDependencyObject* reference,
                            ABI::Microsoft::UI::Xaml::IDependencyObject** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE DisconnectChildrenRecursive(
                            ABI::Microsoft::UI::Xaml::IUIElement* element
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetOpenPopups(
                            ABI::Microsoft::UI::Xaml::IWindow* window,
                            __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup** result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE GetOpenPopupsForXamlRoot(
                            ABI::Microsoft::UI::Xaml::IXamlRoot* xamlRoot,
                            __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup** result
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IVisualTreeHelperStatics = _uuidof(IVisualTreeHelperStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("feaead28-5cd0-5e58-bcea-8670f832aca9")
                    IXamlCompositionBrushBase : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FallbackColor(
                            ABI::Windows::UI::Color* value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_FallbackColor(
                            ABI::Windows::UI::Color value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlCompositionBrushBase = _uuidof(IXamlCompositionBrushBase);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("b1626d56-0f6f-5416-ada4-5c8105d3f082")
                    IXamlCompositionBrushBaseFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IXamlCompositionBrushBase** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlCompositionBrushBaseFactory = _uuidof(IXamlCompositionBrushBaseFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("8881b559-54a0-56c4-a79a-135152fb1dfa")
                    IXamlCompositionBrushBaseOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE OnConnected(void) = 0;
                        virtual HRESULT STDMETHODCALLTYPE OnDisconnected(void) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlCompositionBrushBaseOverrides = _uuidof(IXamlCompositionBrushBaseOverrides);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("6617e1a5-e27a-5b95-b03e-6758b58f92a0")
                    IXamlCompositionBrushBaseProtected : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CompositionBrush(
                            ABI::Microsoft::UI::Composition::ICompositionBrush** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CompositionBrush(
                            ABI::Microsoft::UI::Composition::ICompositionBrush* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlCompositionBrushBaseProtected = _uuidof(IXamlCompositionBrushBaseProtected);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("3eed6e16-c386-5a1c-b70d-ef1c0015e691")
                    IXamlCompositionBrushBaseStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_FallbackColorProperty(
                            ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlCompositionBrushBaseStatics = _uuidof(IXamlCompositionBrushBaseStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLight
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLight[] = L"Microsoft.UI.Xaml.Media.IXamlLight";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("dcd20139-8cd5-5da5-a25c-2b7b813d8d58")
                    IXamlLight : public IInspectable
                    {
                    public:
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlLight = _uuidof(IXamlLight);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightFactory[] = L"Microsoft.UI.Xaml.Media.IXamlLightFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("76da6306-96fc-553e-bb39-9a4801d06f48")
                    IXamlLightFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                            IInspectable* baseInterface,
                            IInspectable** innerInterface,
                            ABI::Microsoft::UI::Xaml::Media::IXamlLight** value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlLightFactory = _uuidof(IXamlLightFactory);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightOverrides[] = L"Microsoft.UI.Xaml.Media.IXamlLightOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("696d4f30-92ee-540d-ad70-33d4489514d0")
                    IXamlLightOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GetId(
                            HSTRING* result
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE OnConnected(
                            ABI::Microsoft::UI::Xaml::IUIElement* newElement
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE OnDisconnected(
                            ABI::Microsoft::UI::Xaml::IUIElement* oldElement
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlLightOverrides = _uuidof(IXamlLightOverrides);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightProtected[] = L"Microsoft.UI.Xaml.Media.IXamlLightProtected";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("c307bf12-fdaf-54ca-a631-ad0e86263c6e")
                    IXamlLightProtected : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE get_CompositionLight(
                            ABI::Microsoft::UI::Composition::ICompositionLight** value
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE put_CompositionLight(
                            ABI::Microsoft::UI::Composition::ICompositionLight* value
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlLightProtected = _uuidof(IXamlLightProtected);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightStatics[] = L"Microsoft.UI.Xaml.Media.IXamlLightStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    MIDL_INTERFACE("a2d8ea26-26ff-5374-b1dd-f232d5604f6a")
                    IXamlLightStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE AddTargetElement(
                            HSTRING lightId,
                            ABI::Microsoft::UI::Xaml::IUIElement* element
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE RemoveTargetElement(
                            HSTRING lightId,
                            ABI::Microsoft::UI::Xaml::IUIElement* element
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE AddTargetBrush(
                            HSTRING lightId,
                            ABI::Microsoft::UI::Xaml::Media::IBrush* brush
                            ) = 0;
                        virtual HRESULT STDMETHODCALLTYPE RemoveTargetBrush(
                            HSTRING lightId,
                            ABI::Microsoft::UI::Xaml::Media::IBrush* brush
                            ) = 0;
                    };

                    extern MIDL_CONST_ID IID& IID_IXamlLightStatics = _uuidof(IXamlLightStatics);
                } /* Media */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IAcrylicBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2 interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IAcrylicBrush ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IAcrylicBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_AcrylicBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_AcrylicBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_AcrylicBrush[] = L"Microsoft.UI.Xaml.Media.AcrylicBrush";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ArcSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IArcSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IArcSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ArcSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ArcSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ArcSegment[] = L"Microsoft.UI.Xaml.Media.ArcSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BezierSegment[] = L"Microsoft.UI.Xaml.Media.BezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BitmapCache
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBitmapCache ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BitmapCache_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BitmapCache_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BitmapCache[] = L"Microsoft.UI.Xaml.Media.BitmapCache";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Brush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBrush ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IBrushOverrides
 *    Microsoft.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Brush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Brush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Brush[] = L"Microsoft.UI.Xaml.Media.Brush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BrushCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Brush> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Brush>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BrushCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BrushCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BrushCollection[] = L"Microsoft.UI.Xaml.Media.BrushCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CacheMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICacheMode ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CacheMode_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CacheMode_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CacheMode[] = L"Microsoft.UI.Xaml.Media.CacheMode";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CompositeTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ICompositeTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICompositeTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositeTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositeTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CompositeTransform[] = L"Microsoft.UI.Xaml.Media.CompositeTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CompositionTarget
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ICompositionTargetStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositionTarget_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CompositionTarget[] = L"Microsoft.UI.Xaml.Media.CompositionTarget";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.DoubleCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Double> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Double>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_DoubleCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_DoubleCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_DoubleCollection[] = L"Microsoft.UI.Xaml.Media.DoubleCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IEllipseGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_EllipseGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_EllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_EllipseGeometry[] = L"Microsoft.UI.Xaml.Media.EllipseGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.FontFamily
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IFontFamilyStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IFontFamily ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_FontFamily_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_FontFamily_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_FontFamily[] = L"Microsoft.UI.Xaml.Media.FontFamily";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeneralTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeneralTransform ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IGeneralTransformOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeneralTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeneralTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeneralTransform[] = L"Microsoft.UI.Xaml.Media.GeneralTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Geometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Geometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Geometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Geometry[] = L"Microsoft.UI.Xaml.Media.Geometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeometryCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Geometry> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Geometry>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeometryCollection[] = L"Microsoft.UI.Xaml.Media.GeometryCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeometryGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGeometryGroupStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeometryGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeometryGroup[] = L"Microsoft.UI.Xaml.Media.GeometryGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientBrush[] = L"Microsoft.UI.Xaml.Media.GradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientStop
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGradientStopStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStop_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientStop[] = L"Microsoft.UI.Xaml.Media.GradientStop";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientStopCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.GradientStop> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.GradientStop>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStopCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientStopCollection[] = L"Microsoft.UI.Xaml.Media.GradientStopCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ImageBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IImageBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IImageBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ImageBrush[] = L"Microsoft.UI.Xaml.Media.ImageBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ImageSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IImageSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageSource_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ImageSource[] = L"Microsoft.UI.Xaml.Media.ImageSource";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LineGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILineGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LineGeometry[] = L"Microsoft.UI.Xaml.Media.LineGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILineSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILineSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LineSegment[] = L"Microsoft.UI.Xaml.Media.LineSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LinearGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LinearGradientBrush[] = L"Microsoft.UI.Xaml.Media.LinearGradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs[] = L"Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILoadedImageSurface ** Default Interface **
 *    Windows.Foundation.IClosable
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LoadedImageSurface[] = L"Microsoft.UI.Xaml.Media.LoadedImageSurface";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrix3DProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Matrix3DProjection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Matrix3DProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Matrix3DProjection[] = L"Microsoft.UI.Xaml.Media.Matrix3DProjection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MatrixHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrixHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrixHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MatrixHelper[] = L"Microsoft.UI.Xaml.Media.MatrixHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MatrixTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrixTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrixTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MatrixTransform[] = L"Microsoft.UI.Xaml.Media.MatrixTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs[] = L"Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathFigure
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPathFigureStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathFigure ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigure_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigure_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathFigure[] = L"Microsoft.UI.Xaml.Media.PathFigure";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathFigureCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathFigure> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathFigure>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigureCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigureCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathFigureCollection[] = L"Microsoft.UI.Xaml.Media.PathFigureCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPathGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathGeometry[] = L"Microsoft.UI.Xaml.Media.PathGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathSegment[] = L"Microsoft.UI.Xaml.Media.PathSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathSegmentCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathSegment> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathSegment>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegmentCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegmentCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathSegmentCollection[] = L"Microsoft.UI.Xaml.Media.PathSegmentCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PlaneProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPlaneProjectionStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPlaneProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PlaneProjection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PlaneProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PlaneProjection[] = L"Microsoft.UI.Xaml.Media.PlaneProjection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PointCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.Foundation.Point> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PointCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PointCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PointCollection[] = L"Microsoft.UI.Xaml.Media.PointCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyBezierSegment[] = L"Microsoft.UI.Xaml.Media.PolyBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyLineSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyLineSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyLineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyLineSegment[] = L"Microsoft.UI.Xaml.Media.PolyLineSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Projection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Projection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Projection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Projection[] = L"Microsoft.UI.Xaml.Media.Projection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IQuadraticBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_QuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.QuadraticBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RadialGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RadialGradientBrush[] = L"Microsoft.UI.Xaml.Media.RadialGradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRectangleGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RectangleGeometry[] = L"Microsoft.UI.Xaml.Media.RectangleGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RenderedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRenderedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RenderedEventArgs[] = L"Microsoft.UI.Xaml.Media.RenderedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RenderingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRenderingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderingEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RenderingEventArgs[] = L"Microsoft.UI.Xaml.Media.RenderingEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RotateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRotateTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRotateTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RotateTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RotateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RotateTransform[] = L"Microsoft.UI.Xaml.Media.RotateTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ScaleTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IScaleTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IScaleTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ScaleTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ScaleTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ScaleTransform[] = L"Microsoft.UI.Xaml.Media.ScaleTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Shadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Shadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Shadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Shadow[] = L"Microsoft.UI.Xaml.Media.Shadow";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.SkewTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ISkewTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ISkewTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_SkewTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_SkewTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_SkewTransform[] = L"Microsoft.UI.Xaml.Media.SkewTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Media.ISolidColorBrushFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ISolidColorBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ISolidColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_SolidColorBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_SolidColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_SolidColorBrush[] = L"Microsoft.UI.Xaml.Media.SolidColorBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ThemeShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IThemeShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ThemeShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ThemeShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ThemeShadow[] = L"Microsoft.UI.Xaml.Media.ThemeShadow";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TileBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITileBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITileBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TileBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TileBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TileBrush[] = L"Microsoft.UI.Xaml.Media.TileBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Transform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Transform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Transform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Transform[] = L"Microsoft.UI.Xaml.Media.Transform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TransformCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Transform> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Transform>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TransformCollection[] = L"Microsoft.UI.Xaml.Media.TransformCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TransformGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITransformGroupStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITransformGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TransformGroup[] = L"Microsoft.UI.Xaml.Media.TransformGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TranslateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITranslateTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITranslateTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TranslateTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TranslateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TranslateTransform[] = L"Microsoft.UI.Xaml.Media.TranslateTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IVisualTreeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_VisualTreeHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_VisualTreeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_VisualTreeHelper[] = L"Microsoft.UI.Xaml.Media.VisualTreeHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase[] = L"Microsoft.UI.Xaml.Media.XamlCompositionBrushBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.XamlLight
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IXamlLightStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IXamlLight ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IXamlLightProtected
 *    Microsoft.UI.Xaml.Media.IXamlLightOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_XamlLight[] = L"Microsoft.UI.Xaml.Media.XamlLight";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2 __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2 __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____FIIterator_1_double_INTERFACE_DEFINED__)
#define ____FIIterator_1_double_INTERFACE_DEFINED__

typedef interface __FIIterator_1_double __FIIterator_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_double;

typedef struct __FIIterator_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_double* This,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_double* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_doubleVtbl;

interface __FIIterator_1_double
{
    CONST_VTBL struct __FIIterator_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_double_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_double_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_double_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_double_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_double_INTERFACE_DEFINED__

#if !defined(____FIIterable_1_double_INTERFACE_DEFINED__)
#define ____FIIterable_1_double_INTERFACE_DEFINED__

typedef interface __FIIterable_1_double __FIIterable_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_double;

typedef struct __FIIterable_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_double* This,
        __FIIterator_1_double** result);

    END_INTERFACE
} __FIIterable_1_doubleVtbl;

interface __FIIterable_1_double
{
    CONST_VTBL struct __FIIterable_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_double_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_double_INTERFACE_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup_FWD_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CBrush** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGeometry** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathFigure** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CPathSegment** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CTransform** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CUIElement __FIIterator_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CUIElement __FIIterable_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CUIElement* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CUIElement** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CFoundation__CPoint __FIIterator_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CFoundation__CPoint;

typedef struct __FIIterator_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Windows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Windows__CFoundation__CPointVtbl;

interface __FIIterator_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterator_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Windows__CFoundation__CPoint_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Windows__CFoundation__CPoint_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CFoundation__CPoint __FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CFoundation__CPoint;

typedef struct __FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Windows__CFoundation__CPoint* This,
        __FIIterator_1_Windows__CFoundation__CPoint** result);

    END_INTERFACE
} __FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterable_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Windows__CFoundation__CPoint_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

typedef interface __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

    END_INTERFACE
} __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Invoke(This, sender, event) \
    ((This)->lpVtbl->Invoke(This, sender, event))

#endif /* COBJMACROS */

#endif // ____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__)
#define ____FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

typedef interface __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop;

typedef struct __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* This,
        EventRegistrationToken token);

    END_INTERFACE
} __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl;

interface __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop
{
    CONST_VTBL struct __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_add_VectorChanged(This, vhnd, result) \
    ((This)->lpVtbl->add_VectorChanged(This, vhnd, result))

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_remove_VectorChanged(This, token) \
    ((This)->lpVtbl->remove_VectorChanged(This, token))

#endif /* COBJMACROS */

#endif // ____FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if !defined(____FIVectorView_1_double_INTERFACE_DEFINED__)
#define ____FIVectorView_1_double_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_double __FIVectorView_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_double;

typedef struct __FIVectorView_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_doubleVtbl;

interface __FIVectorView_1_double
{
    CONST_VTBL struct __FIVectorView_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_double_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_double_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_double_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_double_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_double_INTERFACE_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIPopup** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CFoundation__CPoint __FIVectorView_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CFoundation__CPoint;

typedef struct __FIVectorView_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Windows__CFoundation__CPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Windows__CFoundation__CPointVtbl;

interface __FIVectorView_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIVectorView_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Windows__CFoundation__CPoint_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Windows__CFoundation__CPoint_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Windows__CFoundation__CPoint_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Windows__CFoundation__CPoint_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if !defined(____FIVector_1_double_INTERFACE_DEFINED__)
#define ____FIVector_1_double_INTERFACE_DEFINED__

typedef interface __FIVector_1_double __FIVector_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_double;

typedef struct __FIVector_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_double* This,
        UINT32 index,
        DOUBLE* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_double* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_double* This,
        __FIVectorView_1_double** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_double* This,
        DOUBLE value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_double* This,
        UINT32 index,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_double* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_double* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_double* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        DOUBLE* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_double* This,
        UINT32 itemsLength,
        DOUBLE* items);

    END_INTERFACE
} __FIVector_1_doubleVtbl;

interface __FIVector_1_double
{
    CONST_VTBL struct __FIVector_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_double_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_double_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_double_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_double_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_double_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_double_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_double_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_double_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_double_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_double_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_double_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_double_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_double_INTERFACE_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CBrush** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CBrush_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CGeometry** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathFigure** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CPathSegment** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CTransform** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CFoundation__CPoint __FIVector_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CFoundation__CPoint;

typedef struct __FIVector_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Windows__CFoundation__CPoint* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Windows__CFoundation__CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Windows__CFoundation__CPoint* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Windows__CFoundation__CPoint* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Windows__CFoundation__CPoint* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Windows__CFoundation__CPoint* This,
        __FIVectorView_1_Windows__CFoundation__CPoint** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 index,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Windows__CFoundation__CPoint* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Windows__CFoundation__CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Windows__CFoundation__CPoint* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CFoundation_CPoint* items);

    END_INTERFACE
} __FIVector_1_Windows__CFoundation__CPointVtbl;

interface __FIVector_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIVector_1_Windows__CFoundation__CPointVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Windows__CFoundation__CPoint_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Windows__CFoundation__CPoint_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Windows__CFoundation__CPoint_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Windows__CFoundation__CPoint_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Windows__CFoundation__CPoint_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Windows__CFoundation__CPoint_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Windows__CFoundation__CPoint_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Windows__CFoundation__CPoint_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Windows__CFoundation__CPoint_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Windows__CFoundation__CPoint_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Windows__CFoundation__CPoint_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Windows__CFoundation__CPoint_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Windows__CFoundation__CPoint_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Windows__CFoundation__CPoint_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Windows__CFoundation__CPoint_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Windows__CFoundation__CPoint_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Windows__CFoundation__CPoint_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__
#endif // WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs;

typedef struct __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* args);

    END_INTERFACE
} __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl;

interface __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs
{
    CONST_VTBL struct __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if !defined(____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_IInspectable __FIEventHandler_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_IInspectable;

typedef struct __FIEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIEventHandler_1_IInspectable* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FIEventHandler_1_IInspectable* This,
        IInspectable* sender,
        IInspectable* args);

    END_INTERFACE
} __FIEventHandler_1_IInspectableVtbl;

interface __FIEventHandler_1_IInspectable
{
    CONST_VTBL struct __FIEventHandler_1_IInspectableVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIEventHandler_1_IInspectable_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIEventHandler_1_IInspectable_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIEventHandler_1_IInspectable_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIEventHandler_1_IInspectable_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

#if !defined(____FIReference_1_double_INTERFACE_DEFINED__)
#define ____FIReference_1_double_INTERFACE_DEFINED__

typedef interface __FIReference_1_double __FIReference_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_double;

typedef struct __FIReference_1_doubleVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIReference_1_double* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIReference_1_double* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIReference_1_double* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIReference_1_double* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIReference_1_double* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIReference_1_double* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__FIReference_1_double* This,
        DOUBLE* result);

    END_INTERFACE
} __FIReference_1_doubleVtbl;

interface __FIReference_1_double
{
    CONST_VTBL struct __FIReference_1_doubleVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIReference_1_double_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIReference_1_double_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIReference_1_double_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIReference_1_double_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIReference_1_double_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIReference_1_double_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIReference_1_double_get_Value(This, result) \
    ((This)->lpVtbl->get_Value(This, result))

#endif /* COBJMACROS */

#endif // ____FIReference_1_double_INTERFACE_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(__FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* sender,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* args);

    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_Invoke(This, sender, args) \
    ((This)->lpVtbl->Invoke(This, sender, args))

#endif /* COBJMACROS */

#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace;

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositor __x_ABI_CMicrosoft_CUI_CComposition_CICompositor;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface __x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface;

#endif // ____x_ABI_CMicrosoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CUIElement __FIVector_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CUIElement* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIWindow __x_ABI_CMicrosoft_CUI_CXaml_CIWindow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStream __x_ABI_CWindows_CStorage_CStreams_CIInputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix;

/*
 *
 * Struct Microsoft.UI.Xaml.Media.AlignmentX
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX
{
    AlignmentX_Left = 0,
    AlignmentX_Center = 1,
    AlignmentX_Right = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.AlignmentY
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY
{
    AlignmentY_Top = 0,
    AlignmentY_Center = 1,
    AlignmentY_Bottom = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.BrushMappingMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode
{
    BrushMappingMode_Absolute = 0,
    BrushMappingMode_RelativeToBoundingBox = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.ColorInterpolationMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode
{
    ColorInterpolationMode_ScRgbLinearInterpolation = 0,
    ColorInterpolationMode_SRgbLinearInterpolation = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.ElementCompositeMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CElementCompositeMode
{
    ElementCompositeMode_Inherit = 0,
    ElementCompositeMode_SourceOver = 1,
    ElementCompositeMode_MinBlend = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.FastPlayFallbackBehaviour
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFastPlayFallbackBehaviour
{
    FastPlayFallbackBehaviour_Skip = 0,
    FastPlayFallbackBehaviour_Hide = 1,
    FastPlayFallbackBehaviour_Disable = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.FillRule
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule
{
    FillRule_EvenOdd = 0,
    FillRule_Nonzero = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.GradientSpreadMethod
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod
{
    GradientSpreadMethod_Pad = 0,
    GradientSpreadMethod_Reflect = 1,
    GradientSpreadMethod_Repeat = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus
{
    LoadedImageSourceLoadStatus_Success = 0,
    LoadedImageSourceLoadStatus_NetworkError = 1,
    LoadedImageSourceLoadStatus_InvalidFormat = 2,
    LoadedImageSourceLoadStatus_Other = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.PenLineCap
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap
{
    PenLineCap_Flat = 0,
    PenLineCap_Square = 1,
    PenLineCap_Round = 2,
    PenLineCap_Triangle = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.PenLineJoin
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin
{
    PenLineJoin_Miter = 0,
    PenLineJoin_Bevel = 1,
    PenLineJoin_Round = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.Stretch
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch
{
    Stretch_None = 0,
    Stretch_Fill = 1,
    Stretch_Uniform = 2,
    Stretch_UniformToFill = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.StyleSimulations
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStyleSimulations
{
    StyleSimulations_None = 0,
    StyleSimulations_BoldSimulation = 1,
    StyleSimulations_ItalicSimulation = 2,
    StyleSimulations_BoldItalicSimulation = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.SweepDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection
{
    SweepDirection_Counterclockwise = 0,
    SweepDirection_Clockwise = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Media.Matrix
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix
{
    DOUBLE M11;
    DOUBLE M12;
    DOUBLE M21;
    DOUBLE M22;
    DOUBLE OffsetX;
    DOUBLE OffsetY;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrush[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TintColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_TintColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_TintOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TintOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TintTransitionDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* put_TintTransitionDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysUseFallback)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysUseFallback)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_get_TintColor(This, value) \
    ((This)->lpVtbl->get_TintColor(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_put_TintColor(This, value) \
    ((This)->lpVtbl->put_TintColor(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_get_TintOpacity(This, value) \
    ((This)->lpVtbl->get_TintOpacity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_put_TintOpacity(This, value) \
    ((This)->lpVtbl->put_TintOpacity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_get_TintTransitionDuration(This, value) \
    ((This)->lpVtbl->get_TintTransitionDuration(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_put_TintTransitionDuration(This, value) \
    ((This)->lpVtbl->put_TintTransitionDuration(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_get_AlwaysUseFallback(This, value) \
    ((This)->lpVtbl->get_AlwaysUseFallback(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_put_AlwaysUseFallback(This, value) \
    ((This)->lpVtbl->put_AlwaysUseFallback(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrush2
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrush2[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrush2";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TintLuminosityOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        __FIReference_1_double** value);
    HRESULT (STDMETHODCALLTYPE* put_TintLuminosityOpacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2* This,
        __FIReference_1_double* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_get_TintLuminosityOpacity(This, value) \
    ((This)->lpVtbl->get_TintLuminosityOpacity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_put_TintLuminosityOpacity(This, value) \
    ((This)->lpVtbl->put_TintLuminosityOpacity(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush2_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushFactory[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushStatics[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TintColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TintOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TintTransitionDurationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysUseFallbackProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_get_TintColorProperty(This, value) \
    ((This)->lpVtbl->get_TintColorProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_get_TintOpacityProperty(This, value) \
    ((This)->lpVtbl->get_TintOpacityProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_get_TintTransitionDurationProperty(This, value) \
    ((This)->lpVtbl->get_TintTransitionDurationProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_get_AlwaysUseFallbackProperty(This, value) \
    ((This)->lpVtbl->get_AlwaysUseFallbackProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IAcrylicBrushStatics2[] = L"Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TintLuminosityOpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2Vtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_get_TintLuminosityOpacityProperty(This, value) \
    ((This)->lpVtbl->get_TintLuminosityOpacityProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIAcrylicBrushStatics2_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IArcSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ArcSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IArcSegment[] = L"Microsoft.UI.Xaml.Media.IArcSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        struct __x_ABI_CWindows_CFoundation_CSize value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_IsLargeArc)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsLargeArc)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SweepDirection)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection* value);
    HRESULT (STDMETHODCALLTYPE* put_SweepDirection)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CSweepDirection value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_get_Point(This, value) \
    ((This)->lpVtbl->get_Point(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_put_Point(This, value) \
    ((This)->lpVtbl->put_Point(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_get_Size(This, value) \
    ((This)->lpVtbl->get_Size(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_put_Size(This, value) \
    ((This)->lpVtbl->put_Size(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_get_RotationAngle(This, value) \
    ((This)->lpVtbl->get_RotationAngle(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_put_RotationAngle(This, value) \
    ((This)->lpVtbl->put_RotationAngle(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_get_IsLargeArc(This, value) \
    ((This)->lpVtbl->get_IsLargeArc(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_put_IsLargeArc(This, value) \
    ((This)->lpVtbl->put_IsLargeArc(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_get_SweepDirection(This, value) \
    ((This)->lpVtbl->get_SweepDirection(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_put_SweepDirection(This, value) \
    ((This)->lpVtbl->put_SweepDirection(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IArcSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ArcSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IArcSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IArcSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SizeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationAngleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsLargeArcProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SweepDirectionProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_get_PointProperty(This, value) \
    ((This)->lpVtbl->get_PointProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_get_SizeProperty(This, value) \
    ((This)->lpVtbl->get_SizeProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_get_RotationAngleProperty(This, value) \
    ((This)->lpVtbl->get_RotationAngleProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_get_IsLargeArcProperty(This, value) \
    ((This)->lpVtbl->get_IsLargeArcProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_get_SweepDirectionProperty(This, value) \
    ((This)->lpVtbl->get_SweepDirectionProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBezierSegment[] = L"Microsoft.UI.Xaml.Media.IBezierSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point3)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point3)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_get_Point1(This, value) \
    ((This)->lpVtbl->get_Point1(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_put_Point1(This, value) \
    ((This)->lpVtbl->put_Point1(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_get_Point2(This, value) \
    ((This)->lpVtbl->get_Point2(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_put_Point2(This, value) \
    ((This)->lpVtbl->put_Point2(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_get_Point3(This, value) \
    ((This)->lpVtbl->get_Point3(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_put_Point3(This, value) \
    ((This)->lpVtbl->put_Point3(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IBezierSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point1Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point2Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point3Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point1Property(This, value) \
    ((This)->lpVtbl->get_Point1Property(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point2Property(This, value) \
    ((This)->lpVtbl->get_Point2Property(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point3Property(This, value) \
    ((This)->lpVtbl->get_Point3Property(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBitmapCache
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.BitmapCache
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBitmapCache[] = L"Microsoft.UI.Xaml.Media.IBitmapCache";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCacheVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrush[] = L"Microsoft.UI.Xaml.Media.IBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_RelativeTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_get_Opacity(This, value) \
    ((This)->lpVtbl->get_Opacity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_put_Opacity(This, value) \
    ((This)->lpVtbl->put_Opacity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_get_Transform(This, value) \
    ((This)->lpVtbl->get_Transform(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_put_Transform(This, value) \
    ((This)->lpVtbl->put_Transform(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_get_RelativeTransform(This, value) \
    ((This)->lpVtbl->get_RelativeTransform(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_put_RelativeTransform(This, value) \
    ((This)->lpVtbl->put_RelativeTransform(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushFactory[] = L"Microsoft.UI.Xaml.Media.IBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushOverrides[] = L"Microsoft.UI.Xaml.Media.IBrushOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PopulatePropertyInfoOverride)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides* This,
        HSTRING propertyName,
        __x_ABI_CMicrosoft_CUI_CComposition_CIAnimationPropertyInfo* animationPropertyInfo);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_PopulatePropertyInfoOverride(This, propertyName, animationPropertyInfo) \
    ((This)->lpVtbl->PopulatePropertyInfoOverride(This, propertyName, animationPropertyInfo))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Brush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IBrushStatics[] = L"Microsoft.UI.Xaml.Media.IBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OpacityProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RelativeTransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_get_OpacityProperty(This, value) \
    ((This)->lpVtbl->get_OpacityProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_get_TransformProperty(This, value) \
    ((This)->lpVtbl->get_TransformProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_get_RelativeTransformProperty(This, value) \
    ((This)->lpVtbl->get_RelativeTransformProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICacheMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CacheMode
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICacheMode[] = L"Microsoft.UI.Xaml.Media.ICacheMode";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICacheModeFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CacheMode
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICacheModeFactory[] = L"Microsoft.UI.Xaml.Media.ICacheModeFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheMode** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositeTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositeTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositeTransform[] = L"Microsoft.UI.Xaml.Media.ICompositeTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SkewX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SkewX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SkewY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_SkewY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Rotation)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TranslateX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_TranslateY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_CenterX(This, value) \
    ((This)->lpVtbl->get_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_CenterX(This, value) \
    ((This)->lpVtbl->put_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_CenterY(This, value) \
    ((This)->lpVtbl->get_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_CenterY(This, value) \
    ((This)->lpVtbl->put_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_ScaleX(This, value) \
    ((This)->lpVtbl->get_ScaleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_ScaleX(This, value) \
    ((This)->lpVtbl->put_ScaleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_ScaleY(This, value) \
    ((This)->lpVtbl->get_ScaleY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_ScaleY(This, value) \
    ((This)->lpVtbl->put_ScaleY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_SkewX(This, value) \
    ((This)->lpVtbl->get_SkewX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_SkewX(This, value) \
    ((This)->lpVtbl->put_SkewX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_SkewY(This, value) \
    ((This)->lpVtbl->get_SkewY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_SkewY(This, value) \
    ((This)->lpVtbl->put_SkewY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_Rotation(This, value) \
    ((This)->lpVtbl->get_Rotation(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_Rotation(This, value) \
    ((This)->lpVtbl->put_Rotation(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_TranslateX(This, value) \
    ((This)->lpVtbl->get_TranslateX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_TranslateX(This, value) \
    ((This)->lpVtbl->put_TranslateX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_get_TranslateY(This, value) \
    ((This)->lpVtbl->get_TranslateY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_put_TranslateY(This, value) \
    ((This)->lpVtbl->put_TranslateY(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositeTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositeTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositeTransformStatics[] = L"Microsoft.UI.Xaml.Media.ICompositeTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SkewXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SkewYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_TranslateYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_CenterXProperty(This, value) \
    ((This)->lpVtbl->get_CenterXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_CenterYProperty(This, value) \
    ((This)->lpVtbl->get_CenterYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_ScaleXProperty(This, value) \
    ((This)->lpVtbl->get_ScaleXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_ScaleYProperty(This, value) \
    ((This)->lpVtbl->get_ScaleYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_SkewXProperty(This, value) \
    ((This)->lpVtbl->get_SkewXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_SkewYProperty(This, value) \
    ((This)->lpVtbl->get_SkewYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_RotationProperty(This, value) \
    ((This)->lpVtbl->get_RotationProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_TranslateXProperty(This, value) \
    ((This)->lpVtbl->get_TranslateXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_get_TranslateYProperty(This, value) \
    ((This)->lpVtbl->get_TranslateYProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositionTarget
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositionTarget
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositionTarget[] = L"Microsoft.UI.Xaml.Media.ICompositionTarget";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ICompositionTargetStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.CompositionTarget
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ICompositionTargetStatics[] = L"Microsoft.UI.Xaml.Media.ICompositionTargetStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Rendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Rendering)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Rendered)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __FIEventHandler_1_Microsoft__CUI__CXaml__CMedia__CRenderedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Rendered)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SurfaceContentsLost)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __FIEventHandler_1_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SurfaceContentsLost)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetCompositorForCurrentThread)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositor** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_add_Rendering(This, handler, token) \
    ((This)->lpVtbl->add_Rendering(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_remove_Rendering(This, token) \
    ((This)->lpVtbl->remove_Rendering(This, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_add_Rendered(This, handler, token) \
    ((This)->lpVtbl->add_Rendered(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_remove_Rendered(This, token) \
    ((This)->lpVtbl->remove_Rendered(This, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_add_SurfaceContentsLost(This, handler, token) \
    ((This)->lpVtbl->add_SurfaceContentsLost(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_remove_SurfaceContentsLost(This, token) \
    ((This)->lpVtbl->remove_SurfaceContentsLost(This, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_GetCompositorForCurrentThread(This, result) \
    ((This)->lpVtbl->GetCompositorForCurrentThread(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IEllipseGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IEllipseGeometry[] = L"Microsoft.UI.Xaml.Media.IEllipseGeometry";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_get_Center(This, value) \
    ((This)->lpVtbl->get_Center(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_put_Center(This, value) \
    ((This)->lpVtbl->put_Center(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_get_RadiusX(This, value) \
    ((This)->lpVtbl->get_RadiusX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_put_RadiusX(This, value) \
    ((This)->lpVtbl->put_RadiusX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_get_RadiusY(This, value) \
    ((This)->lpVtbl->get_RadiusY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_put_RadiusY(This, value) \
    ((This)->lpVtbl->put_RadiusY(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IEllipseGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IEllipseGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IEllipseGeometryStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_CenterProperty(This, value) \
    ((This)->lpVtbl->get_CenterProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_RadiusXProperty(This, value) \
    ((This)->lpVtbl->get_RadiusXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_RadiusYProperty(This, value) \
    ((This)->lpVtbl->get_RadiusYProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamily
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamily[] = L"Microsoft.UI.Xaml.Media.IFontFamily";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This,
        HSTRING* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_get_Source(This, value) \
    ((This)->lpVtbl->get_Source(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamilyFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamilyFactory[] = L"Microsoft.UI.Xaml.Media.IFontFamilyFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This,
        HSTRING familyName,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_CreateInstanceWithName(This, familyName, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithName(This, familyName, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IFontFamilyStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.FontFamily
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IFontFamilyStatics[] = L"Microsoft.UI.Xaml.Media.IFontFamilyStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_XamlAutoFontFamily)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_get_XamlAutoFontFamily(This, value) \
    ((This)->lpVtbl->get_XamlAutoFontFamily(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransform[] = L"Microsoft.UI.Xaml.Media.IGeneralTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Inverse)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);
    HRESULT (STDMETHODCALLTYPE* TransformPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* TryTransform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CPoint inPoint,
        struct __x_ABI_CWindows_CFoundation_CPoint* outPoint,
        boolean* returnValue);
    HRESULT (STDMETHODCALLTYPE* TransformBounds)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform* This,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_get_Inverse(This, value) \
    ((This)->lpVtbl->get_Inverse(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_TransformPoint(This, point, result) \
    ((This)->lpVtbl->TransformPoint(This, point, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_TryTransform(This, inPoint, outPoint, returnValue) \
    ((This)->lpVtbl->TryTransform(This, inPoint, outPoint, returnValue))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_TransformBounds(This, rect, result) \
    ((This)->lpVtbl->TransformBounds(This, rect, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransformFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransformFactory[] = L"Microsoft.UI.Xaml.Media.IGeneralTransformFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeneralTransformOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeneralTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeneralTransformOverrides[] = L"Microsoft.UI.Xaml.Media.IGeneralTransformOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InverseCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransform** value);
    HRESULT (STDMETHODCALLTYPE* TryTransformCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint inPoint,
        struct __x_ABI_CWindows_CFoundation_CPoint* outPoint,
        boolean* returnValue);
    HRESULT (STDMETHODCALLTYPE* TransformBoundsCore)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CRect rect,
        struct __x_ABI_CWindows_CFoundation_CRect* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_get_InverseCore(This, value) \
    ((This)->lpVtbl->get_InverseCore(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_TryTransformCore(This, inPoint, outPoint, returnValue) \
    ((This)->lpVtbl->TryTransformCore(This, inPoint, outPoint, returnValue))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_TransformBoundsCore(This, rect, result) \
    ((This)->lpVtbl->TransformBoundsCore(This, rect, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometry[] = L"Microsoft.UI.Xaml.Media.IGeometry";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* value);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_get_Transform(This, value) \
    ((This)->lpVtbl->get_Transform(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_put_Transform(This, value) \
    ((This)->lpVtbl->put_Transform(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_get_Bounds(This, value) \
    ((This)->lpVtbl->get_Bounds(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryFactory[] = L"Microsoft.UI.Xaml.Media.IGeometryFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeometryGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryGroup[] = L"Microsoft.UI.Xaml.Media.IGeometryGroup";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule* value);
    HRESULT (STDMETHODCALLTYPE* put_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule value);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry** value);
    HRESULT (STDMETHODCALLTYPE* put_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGeometry* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_get_FillRule(This, value) \
    ((This)->lpVtbl->get_FillRule(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_put_FillRule(This, value) \
    ((This)->lpVtbl->put_FillRule(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_get_Children(This, value) \
    ((This)->lpVtbl->get_Children(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_put_Children(This, value) \
    ((This)->lpVtbl->put_Children(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryGroupStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GeometryGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryGroupStatics[] = L"Microsoft.UI.Xaml.Media.IGeometryGroupStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FillRuleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_get_FillRuleProperty(This, value) \
    ((This)->lpVtbl->get_FillRuleProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_get_ChildrenProperty(This, value) \
    ((This)->lpVtbl->get_ChildrenProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Geometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IGeometryStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Empty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometry** value);
    HRESULT (STDMETHODCALLTYPE* get_StandardFlatteningTolerance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_TransformProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_get_Empty(This, value) \
    ((This)->lpVtbl->get_Empty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_get_StandardFlatteningTolerance(This, value) \
    ((This)->lpVtbl->get_StandardFlatteningTolerance(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_get_TransformProperty(This, value) \
    ((This)->lpVtbl->get_TransformProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrush[] = L"Microsoft.UI.Xaml.Media.IGradientBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod* value);
    HRESULT (STDMETHODCALLTYPE* put_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod value);
    HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode value);
    HRESULT (STDMETHODCALLTYPE* get_ColorInterpolationMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorInterpolationMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CColorInterpolationMode value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** value);
    HRESULT (STDMETHODCALLTYPE* put_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_get_SpreadMethod(This, value) \
    ((This)->lpVtbl->get_SpreadMethod(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_put_SpreadMethod(This, value) \
    ((This)->lpVtbl->put_SpreadMethod(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_get_MappingMode(This, value) \
    ((This)->lpVtbl->get_MappingMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_put_MappingMode(This, value) \
    ((This)->lpVtbl->put_MappingMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_get_ColorInterpolationMode(This, value) \
    ((This)->lpVtbl->get_ColorInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_put_ColorInterpolationMode(This, value) \
    ((This)->lpVtbl->put_ColorInterpolationMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_get_GradientStops(This, value) \
    ((This)->lpVtbl->get_GradientStops(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_put_GradientStops(This, value) \
    ((This)->lpVtbl->put_GradientStops(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.IGradientBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.IGradientBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethodProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MappingModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ColorInterpolationModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStopsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_get_SpreadMethodProperty(This, value) \
    ((This)->lpVtbl->get_SpreadMethodProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_get_MappingModeProperty(This, value) \
    ((This)->lpVtbl->get_MappingModeProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_get_ColorInterpolationModeProperty(This, value) \
    ((This)->lpVtbl->get_ColorInterpolationModeProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_get_GradientStopsProperty(This, value) \
    ((This)->lpVtbl->get_GradientStopsProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientStop
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientStop
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientStop[] = L"Microsoft.UI.Xaml.Media.IGradientStop";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_get_Offset(This, value) \
    ((This)->lpVtbl->get_Offset(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_put_Offset(This, value) \
    ((This)->lpVtbl->put_Offset(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IGradientStopStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.GradientStop
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IGradientStopStatics[] = L"Microsoft.UI.Xaml.Media.IGradientStopStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_OffsetProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_get_ColorProperty(This, value) \
    ((This)->lpVtbl->get_ColorProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_get_OffsetProperty(This, value) \
    ((This)->lpVtbl->get_OffsetProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageBrush[] = L"Microsoft.UI.Xaml.Media.IImageBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ImageSource)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource** value);
    HRESULT (STDMETHODCALLTYPE* put_ImageSource)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* value);
    HRESULT (STDMETHODCALLTYPE* add_ImageFailed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIExceptionRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageFailed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ImageOpened)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ImageOpened)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_get_ImageSource(This, value) \
    ((This)->lpVtbl->get_ImageSource(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_put_ImageSource(This, value) \
    ((This)->lpVtbl->put_ImageSource(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_add_ImageFailed(This, handler, token) \
    ((This)->lpVtbl->add_ImageFailed(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_remove_ImageFailed(This, token) \
    ((This)->lpVtbl->remove_ImageFailed(This, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_add_ImageOpened(This, handler, token) \
    ((This)->lpVtbl->add_ImageOpened(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_remove_ImageOpened(This, token) \
    ((This)->lpVtbl->remove_ImageOpened(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageBrushStatics[] = L"Microsoft.UI.Xaml.Media.IImageBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ImageSourceProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_get_ImageSourceProperty(This, value) \
    ((This)->lpVtbl->get_ImageSourceProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageSource
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageSource[] = L"Microsoft.UI.Xaml.Media.IImageSource";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IImageSourceFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ImageSource
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IImageSourceFactory[] = L"Microsoft.UI.Xaml.Media.IImageSourceFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineGeometry[] = L"Microsoft.UI.Xaml.Media.ILineGeometry";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_get_StartPoint(This, value) \
    ((This)->lpVtbl->get_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_put_StartPoint(This, value) \
    ((This)->lpVtbl->put_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_get_EndPoint(This, value) \
    ((This)->lpVtbl->get_EndPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_put_EndPoint(This, value) \
    ((This)->lpVtbl->put_EndPoint(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineGeometryStatics[] = L"Microsoft.UI.Xaml.Media.ILineGeometryStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EndPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_get_StartPointProperty(This, value) \
    ((This)->lpVtbl->get_StartPointProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_get_EndPointProperty(This, value) \
    ((This)->lpVtbl->get_EndPointProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineSegment[] = L"Microsoft.UI.Xaml.Media.ILineSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_get_Point(This, value) \
    ((This)->lpVtbl->get_Point(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_put_Point(This, value) \
    ((This)->lpVtbl->put_Point(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILineSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILineSegmentStatics[] = L"Microsoft.UI.Xaml.Media.ILineSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_get_PointProperty(This, value) \
    ((This)->lpVtbl->get_PointProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrush[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_get_StartPoint(This, value) \
    ((This)->lpVtbl->get_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_put_StartPoint(This, value) \
    ((This)->lpVtbl->put_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_get_EndPoint(This, value) \
    ((This)->lpVtbl->get_EndPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_put_EndPoint(This, value) \
    ((This)->lpVtbl->put_EndPoint(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithGradientStopCollectionAndAngle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop* gradientStopCollection,
        DOUBLE angle,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_CreateInstanceWithGradientStopCollectionAndAngle(This, gradientStopCollection, angle, value) \
    ((This)->lpVtbl->CreateInstanceWithGradientStopCollectionAndAngle(This, gradientStopCollection, angle, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILinearGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_EndPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_get_StartPointProperty(This, value) \
    ((This)->lpVtbl->get_StartPointProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_get_EndPointProperty(This, value) \
    ((This)->lpVtbl->get_EndPointProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSourceLoadCompletedEventArgs[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CLoadedImageSourceLoadStatus* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_get_Status(This, value) \
    ((This)->lpVtbl->get_Status(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSourceLoadCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSurface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSurface[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSurface";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DecodedPhysicalSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_DecodedSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_NaturalSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* add_LoadCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        __FITypedEventHandler_2_Microsoft__CUI__CXaml__CMedia__CLoadedImageSurface_Microsoft__CUI__CXaml__CMedia__CLoadedImageSourceLoadCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LoadCompleted)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface* This,
        EventRegistrationToken token);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_get_DecodedPhysicalSize(This, value) \
    ((This)->lpVtbl->get_DecodedPhysicalSize(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_get_DecodedSize(This, value) \
    ((This)->lpVtbl->get_DecodedSize(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_get_NaturalSize(This, value) \
    ((This)->lpVtbl->get_NaturalSize(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_add_LoadCompleted(This, handler, token) \
    ((This)->lpVtbl->add_LoadCompleted(This, handler, token))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_remove_LoadCompleted(This, token) \
    ((This)->lpVtbl->remove_LoadCompleted(This, token))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ILoadedImageSurfaceStatics[] = L"Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromUriWithSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        struct __x_ABI_CWindows_CFoundation_CSize desiredMaxSize,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromUri)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromStreamWithSize)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        struct __x_ABI_CWindows_CFoundation_CSize desiredMaxSize,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);
    HRESULT (STDMETHODCALLTYPE* StartLoadFromStream)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* stream,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurface** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_StartLoadFromUriWithSize(This, uri, desiredMaxSize, result) \
    ((This)->lpVtbl->StartLoadFromUriWithSize(This, uri, desiredMaxSize, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_StartLoadFromUri(This, uri, result) \
    ((This)->lpVtbl->StartLoadFromUri(This, uri, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_StartLoadFromStreamWithSize(This, stream, desiredMaxSize, result) \
    ((This)->lpVtbl->StartLoadFromStreamWithSize(This, stream, desiredMaxSize, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_StartLoadFromStream(This, stream, result) \
    ((This)->lpVtbl->StartLoadFromStream(This, stream, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CILoadedImageSurfaceStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrix3DProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrix3DProjection[] = L"Microsoft.UI.Xaml.Media.IMatrix3DProjection";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D* value);
    HRESULT (STDMETHODCALLTYPE* put_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_get_ProjectionMatrix(This, value) \
    ((This)->lpVtbl->get_ProjectionMatrix(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_put_ProjectionMatrix(This, value) \
    ((This)->lpVtbl->put_ProjectionMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrix3DProjectionStatics[] = L"Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_get_ProjectionMatrixProperty(This, value) \
    ((This)->lpVtbl->get_ProjectionMatrixProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixHelper[] = L"Microsoft.UI.Xaml.Media.IMatrixHelper";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixHelperStatics[] = L"Microsoft.UI.Xaml.Media.IMatrixHelperStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Identity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);
    HRESULT (STDMETHODCALLTYPE* FromElements)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        DOUBLE m11,
        DOUBLE m12,
        DOUBLE m21,
        DOUBLE m22,
        DOUBLE offsetX,
        DOUBLE offsetY,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* result);
    HRESULT (STDMETHODCALLTYPE* GetIsIdentity)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix target,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Transform)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix target,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_get_Identity(This, value) \
    ((This)->lpVtbl->get_Identity(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_FromElements(This, m11, m12, m21, m22, offsetX, offsetY, result) \
    ((This)->lpVtbl->FromElements(This, m11, m12, m21, m22, offsetX, offsetY, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetIsIdentity(This, target, result) \
    ((This)->lpVtbl->GetIsIdentity(This, target, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_Transform(This, target, point, result) \
    ((This)->lpVtbl->Transform(This, target, point, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixTransform[] = L"Microsoft.UI.Xaml.Media.IMatrixTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Matrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);
    HRESULT (STDMETHODCALLTYPE* put_Matrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_get_Matrix(This, value) \
    ((This)->lpVtbl->get_Matrix(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_put_Matrix(This, value) \
    ((This)->lpVtbl->put_Matrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMatrixTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MatrixTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMatrixTransformStatics[] = L"Microsoft.UI.Xaml.Media.IMatrixTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_get_MatrixProperty(This, value) \
    ((This)->lpVtbl->get_MatrixProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IMediaTransportControlsThumbnailRequestedEventArgs[] = L"Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetThumbnailImage)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        __x_ABI_CWindows_CStorage_CStreams_CIInputStream* source);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_SetThumbnailImage(This, source) \
    ((This)->lpVtbl->SetThumbnailImage(This, source))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_GetDeferral(This, result) \
    ((This)->lpVtbl->GetDeferral(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIMediaTransportControlsThumbnailRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathFigure
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathFigure
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathFigure[] = L"Microsoft.UI.Xaml.Media.IPathFigure";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Segments)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment** value);
    HRESULT (STDMETHODCALLTYPE* put_Segments)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathSegment* value);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_IsClosed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsClosed)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsFilled)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsFilled)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure* This,
        boolean value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_get_Segments(This, value) \
    ((This)->lpVtbl->get_Segments(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_put_Segments(This, value) \
    ((This)->lpVtbl->put_Segments(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_get_StartPoint(This, value) \
    ((This)->lpVtbl->get_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_put_StartPoint(This, value) \
    ((This)->lpVtbl->put_StartPoint(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_get_IsClosed(This, value) \
    ((This)->lpVtbl->get_IsClosed(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_put_IsClosed(This, value) \
    ((This)->lpVtbl->put_IsClosed(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_get_IsFilled(This, value) \
    ((This)->lpVtbl->get_IsFilled(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_put_IsFilled(This, value) \
    ((This)->lpVtbl->put_IsFilled(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathFigureStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathFigure
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathFigureStatics[] = L"Microsoft.UI.Xaml.Media.IPathFigureStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SegmentsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsClosedProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_IsFilledProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_get_SegmentsProperty(This, value) \
    ((This)->lpVtbl->get_SegmentsProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_get_StartPointProperty(This, value) \
    ((This)->lpVtbl->get_StartPointProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_get_IsClosedProperty(This, value) \
    ((This)->lpVtbl->get_IsClosedProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_get_IsFilledProperty(This, value) \
    ((This)->lpVtbl->get_IsFilledProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathGeometry[] = L"Microsoft.UI.Xaml.Media.IPathGeometry";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule* value);
    HRESULT (STDMETHODCALLTYPE* put_FillRule)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule value);
    HRESULT (STDMETHODCALLTYPE* get_Figures)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure** value);
    HRESULT (STDMETHODCALLTYPE* put_Figures)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CPathFigure* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_get_FillRule(This, value) \
    ((This)->lpVtbl->get_FillRule(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_put_FillRule(This, value) \
    ((This)->lpVtbl->put_FillRule(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_get_Figures(This, value) \
    ((This)->lpVtbl->get_Figures(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_put_Figures(This, value) \
    ((This)->lpVtbl->put_Figures(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IPathGeometryStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FillRuleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_FiguresProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_get_FillRuleProperty(This, value) \
    ((This)->lpVtbl->get_FillRuleProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_get_FiguresProperty(This, value) \
    ((This)->lpVtbl->get_FiguresProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathSegment[] = L"Microsoft.UI.Xaml.Media.IPathSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPathSegmentFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PathSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPathSegmentFactory[] = L"Microsoft.UI.Xaml.Media.IPathSegmentFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPlaneProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PlaneProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPlaneProjection[] = L"Microsoft.UI.Xaml.Media.IPlaneProjection";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_LocalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterOfRotationZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_GlobalOffsetZ)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrix)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CMatrix3D* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetX(This, value) \
    ((This)->lpVtbl->get_LocalOffsetX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetX(This, value) \
    ((This)->lpVtbl->put_LocalOffsetX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetY(This, value) \
    ((This)->lpVtbl->get_LocalOffsetY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetY(This, value) \
    ((This)->lpVtbl->put_LocalOffsetY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetZ(This, value) \
    ((This)->lpVtbl->get_LocalOffsetZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetZ(This, value) \
    ((This)->lpVtbl->put_LocalOffsetZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationX(This, value) \
    ((This)->lpVtbl->get_RotationX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationX(This, value) \
    ((This)->lpVtbl->put_RotationX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationY(This, value) \
    ((This)->lpVtbl->get_RotationY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationY(This, value) \
    ((This)->lpVtbl->put_RotationY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationZ(This, value) \
    ((This)->lpVtbl->get_RotationZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationZ(This, value) \
    ((This)->lpVtbl->put_RotationZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationX(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationX(This, value) \
    ((This)->lpVtbl->put_CenterOfRotationX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationY(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationY(This, value) \
    ((This)->lpVtbl->put_CenterOfRotationY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationZ(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationZ(This, value) \
    ((This)->lpVtbl->put_CenterOfRotationZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetX(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetX(This, value) \
    ((This)->lpVtbl->put_GlobalOffsetX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetY(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetY(This, value) \
    ((This)->lpVtbl->put_GlobalOffsetY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetZ(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetZ(This, value) \
    ((This)->lpVtbl->put_GlobalOffsetZ(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_get_ProjectionMatrix(This, value) \
    ((This)->lpVtbl->get_ProjectionMatrix(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPlaneProjectionStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PlaneProjection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPlaneProjectionStatics[] = L"Microsoft.UI.Xaml.Media.IPlaneProjectionStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalOffsetZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RotationZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterOfRotationZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GlobalOffsetZProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ProjectionMatrixProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetXProperty(This, value) \
    ((This)->lpVtbl->get_LocalOffsetXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetYProperty(This, value) \
    ((This)->lpVtbl->get_LocalOffsetYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetZProperty(This, value) \
    ((This)->lpVtbl->get_LocalOffsetZProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationXProperty(This, value) \
    ((This)->lpVtbl->get_RotationXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationYProperty(This, value) \
    ((This)->lpVtbl->get_RotationYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationZProperty(This, value) \
    ((This)->lpVtbl->get_RotationZProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationXProperty(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationYProperty(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationZProperty(This, value) \
    ((This)->lpVtbl->get_CenterOfRotationZProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetXProperty(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetYProperty(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetZProperty(This, value) \
    ((This)->lpVtbl->get_GlobalOffsetZProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_ProjectionMatrixProperty(This, value) \
    ((This)->lpVtbl->get_ProjectionMatrixProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyBezierSegment[] = L"Microsoft.UI.Xaml.Media.IPolyBezierSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_get_Points(This, value) \
    ((This)->lpVtbl->get_Points(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_put_Points(This, value) \
    ((This)->lpVtbl->put_Points(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_get_PointsProperty(This, value) \
    ((This)->lpVtbl->get_PointsProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyLineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyLineSegment[] = L"Microsoft.UI.Xaml.Media.IPolyLineSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_get_Points(This, value) \
    ((This)->lpVtbl->get_Points(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_put_Points(This, value) \
    ((This)->lpVtbl->put_Points(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyLineSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_get_PointsProperty(This, value) \
    ((This)->lpVtbl->get_PointsProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint** value);
    HRESULT (STDMETHODCALLTYPE* put_Points)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment* This,
        __FIVector_1_Windows__CFoundation__CPoint* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_get_Points(This, value) \
    ((This)->lpVtbl->get_Points(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_put_Points(This, value) \
    ((This)->lpVtbl->put_Points(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PointsProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_get_PointsProperty(This, value) \
    ((This)->lpVtbl->get_PointsProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Projection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IProjection[] = L"Microsoft.UI.Xaml.Media.IProjection";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IProjectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Projection
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IProjectionFactory[] = L"Microsoft.UI.Xaml.Media.IProjectionFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjection** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.IQuadraticBezierSegment";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point1)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Point2)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_get_Point1(This, value) \
    ((This)->lpVtbl->get_Point1(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_put_Point1(This, value) \
    ((This)->lpVtbl->put_Point1(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_get_Point2(This, value) \
    ((This)->lpVtbl->get_Point2(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_put_Point2(This, value) \
    ((This)->lpVtbl->put_Point2(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IQuadraticBezierSegmentStatics[] = L"Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Point1Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_Point2Property)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_get_Point1Property(This, value) \
    ((This)->lpVtbl->get_Point1Property(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_get_Point2Property(This, value) \
    ((This)->lpVtbl->get_Point2Property(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrush[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_Center)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_RadiusY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOrigin)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* put_GradientOrigin)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        struct __x_ABI_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode* value);
    HRESULT (STDMETHODCALLTYPE* put_MappingMode)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CBrushMappingMode value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpace)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationSpace)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CComposition_CCompositionColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod* value);
    HRESULT (STDMETHODCALLTYPE* put_SpreadMethod)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CGradientSpreadMethod value);
    HRESULT (STDMETHODCALLTYPE* get_GradientStops)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush* This,
        __FIObservableVector_1_Microsoft__CUI__CXaml__CMedia__CGradientStop** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_Center(This, value) \
    ((This)->lpVtbl->get_Center(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_Center(This, value) \
    ((This)->lpVtbl->put_Center(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_RadiusX(This, value) \
    ((This)->lpVtbl->get_RadiusX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_RadiusX(This, value) \
    ((This)->lpVtbl->put_RadiusX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_RadiusY(This, value) \
    ((This)->lpVtbl->get_RadiusY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_RadiusY(This, value) \
    ((This)->lpVtbl->put_RadiusY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_GradientOrigin(This, value) \
    ((This)->lpVtbl->get_GradientOrigin(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_GradientOrigin(This, value) \
    ((This)->lpVtbl->put_GradientOrigin(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_MappingMode(This, value) \
    ((This)->lpVtbl->get_MappingMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_MappingMode(This, value) \
    ((This)->lpVtbl->put_MappingMode(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_InterpolationSpace(This, value) \
    ((This)->lpVtbl->get_InterpolationSpace(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_InterpolationSpace(This, value) \
    ((This)->lpVtbl->put_InterpolationSpace(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_SpreadMethod(This, value) \
    ((This)->lpVtbl->get_SpreadMethod(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_put_SpreadMethod(This, value) \
    ((This)->lpVtbl->put_SpreadMethod(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_get_GradientStops(This, value) \
    ((This)->lpVtbl->get_GradientStops(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrushFactory[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRadialGradientBrushStatics[] = L"Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_RadiusYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_GradientOriginProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationSpaceProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_MappingModeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_SpreadMethodProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_CenterProperty(This, value) \
    ((This)->lpVtbl->get_CenterProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_RadiusXProperty(This, value) \
    ((This)->lpVtbl->get_RadiusXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_RadiusYProperty(This, value) \
    ((This)->lpVtbl->get_RadiusYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_GradientOriginProperty(This, value) \
    ((This)->lpVtbl->get_GradientOriginProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_InterpolationSpaceProperty(This, value) \
    ((This)->lpVtbl->get_InterpolationSpaceProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_MappingModeProperty(This, value) \
    ((This)->lpVtbl->get_MappingModeProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_get_SpreadMethodProperty(This, value) \
    ((This)->lpVtbl->get_SpreadMethodProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRadialGradientBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRectangleGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRectangleGeometry[] = L"Microsoft.UI.Xaml.Media.IRectangleGeometry";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Rect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_Rect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_get_Rect(This, value) \
    ((This)->lpVtbl->get_Rect(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_put_Rect(This, value) \
    ((This)->lpVtbl->put_Rect(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRectangleGeometryStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRectangleGeometryStatics[] = L"Microsoft.UI.Xaml.Media.IRectangleGeometryStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RectProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_get_RectProperty(This, value) \
    ((This)->lpVtbl->get_RectProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRenderedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RenderedEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRenderedEventArgs[] = L"Microsoft.UI.Xaml.Media.IRenderedEventArgs";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FrameDuration)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_get_FrameDuration(This, value) \
    ((This)->lpVtbl->get_FrameDuration(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRenderingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RenderingEventArgs
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRenderingEventArgs[] = L"Microsoft.UI.Xaml.Media.IRenderingEventArgs";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RenderingTime)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_get_RenderingTime(This, value) \
    ((This)->lpVtbl->get_RenderingTime(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRotateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RotateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRotateTransform[] = L"Microsoft.UI.Xaml.Media.IRotateTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_get_CenterX(This, value) \
    ((This)->lpVtbl->get_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_put_CenterX(This, value) \
    ((This)->lpVtbl->put_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_get_CenterY(This, value) \
    ((This)->lpVtbl->get_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_put_CenterY(This, value) \
    ((This)->lpVtbl->put_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_get_Angle(This, value) \
    ((This)->lpVtbl->get_Angle(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_put_Angle(This, value) \
    ((This)->lpVtbl->put_Angle(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IRotateTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.RotateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IRotateTransformStatics[] = L"Microsoft.UI.Xaml.Media.IRotateTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_get_CenterXProperty(This, value) \
    ((This)->lpVtbl->get_CenterXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_get_CenterYProperty(This, value) \
    ((This)->lpVtbl->get_CenterYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_get_AngleProperty(This, value) \
    ((This)->lpVtbl->get_AngleProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IScaleTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ScaleTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IScaleTransform[] = L"Microsoft.UI.Xaml.Media.IScaleTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_ScaleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_get_CenterX(This, value) \
    ((This)->lpVtbl->get_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_put_CenterX(This, value) \
    ((This)->lpVtbl->put_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_get_CenterY(This, value) \
    ((This)->lpVtbl->get_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_put_CenterY(This, value) \
    ((This)->lpVtbl->put_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_get_ScaleX(This, value) \
    ((This)->lpVtbl->get_ScaleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_put_ScaleX(This, value) \
    ((This)->lpVtbl->put_ScaleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_get_ScaleY(This, value) \
    ((This)->lpVtbl->get_ScaleY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_put_ScaleY(This, value) \
    ((This)->lpVtbl->put_ScaleY(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IScaleTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ScaleTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IScaleTransformStatics[] = L"Microsoft.UI.Xaml.Media.IScaleTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_ScaleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_get_CenterXProperty(This, value) \
    ((This)->lpVtbl->get_CenterXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_get_CenterYProperty(This, value) \
    ((This)->lpVtbl->get_CenterYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_get_ScaleXProperty(This, value) \
    ((This)->lpVtbl->get_ScaleXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_get_ScaleYProperty(This, value) \
    ((This)->lpVtbl->get_ScaleYProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Shadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IShadow[] = L"Microsoft.UI.Xaml.Media.IShadow";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IShadowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Shadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IShadowFactory[] = L"Microsoft.UI.Xaml.Media.IShadowFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIShadowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISkewTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SkewTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISkewTransform[] = L"Microsoft.UI.Xaml.Media.ISkewTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_AngleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_AngleX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_AngleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_AngleY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_get_CenterX(This, value) \
    ((This)->lpVtbl->get_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_put_CenterX(This, value) \
    ((This)->lpVtbl->put_CenterX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_get_CenterY(This, value) \
    ((This)->lpVtbl->get_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_put_CenterY(This, value) \
    ((This)->lpVtbl->put_CenterY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_get_AngleX(This, value) \
    ((This)->lpVtbl->get_AngleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_put_AngleX(This, value) \
    ((This)->lpVtbl->put_AngleX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_get_AngleY(This, value) \
    ((This)->lpVtbl->get_AngleY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_put_AngleY(This, value) \
    ((This)->lpVtbl->put_AngleY(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISkewTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SkewTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISkewTransformStatics[] = L"Microsoft.UI.Xaml.Media.ISkewTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CenterXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_CenterYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AngleYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_get_CenterXProperty(This, value) \
    ((This)->lpVtbl->get_CenterXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_get_CenterYProperty(This, value) \
    ((This)->lpVtbl->get_CenterYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_get_AngleXProperty(This, value) \
    ((This)->lpVtbl->get_AngleXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_get_AngleYProperty(This, value) \
    ((This)->lpVtbl->get_AngleYProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrush[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This,
        struct __x_ABI_CWindows_CUI_CColor value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_get_Color(This, value) \
    ((This)->lpVtbl->get_Color(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_put_Color(This, value) \
    ((This)->lpVtbl->put_Color(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrushFactory[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This,
        struct __x_ABI_CWindows_CUI_CColor color,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_CreateInstanceWithColor(This, color, value) \
    ((This)->lpVtbl->CreateInstanceWithColor(This, color, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ISolidColorBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ISolidColorBrushStatics[] = L"Microsoft.UI.Xaml.Media.ISolidColorBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_get_ColorProperty(This, value) \
    ((This)->lpVtbl->get_ColorProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IThemeShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ThemeShadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IThemeShadow[] = L"Microsoft.UI.Xaml.Media.IThemeShadow";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Receivers)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow* This,
        __FIVector_1_Microsoft__CUI__CXaml__CUIElement** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_get_Receivers(This, value) \
    ((This)->lpVtbl->get_Receivers(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IThemeShadowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.ThemeShadow
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IThemeShadowFactory[] = L"Microsoft.UI.Xaml.Media.IThemeShadowFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadow** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIThemeShadowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrush[] = L"Microsoft.UI.Xaml.Media.ITileBrush";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX* value);
    HRESULT (STDMETHODCALLTYPE* put_AlignmentX)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentX value);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY* value);
    HRESULT (STDMETHODCALLTYPE* put_AlignmentY)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAlignmentY value);
    HRESULT (STDMETHODCALLTYPE* get_Stretch)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch* value);
    HRESULT (STDMETHODCALLTYPE* put_Stretch)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_get_AlignmentX(This, value) \
    ((This)->lpVtbl->get_AlignmentX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_put_AlignmentX(This, value) \
    ((This)->lpVtbl->put_AlignmentX(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_get_AlignmentY(This, value) \
    ((This)->lpVtbl->get_AlignmentY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_put_AlignmentY(This, value) \
    ((This)->lpVtbl->put_AlignmentY(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_get_Stretch(This, value) \
    ((This)->lpVtbl->get_Stretch(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_put_Stretch(This, value) \
    ((This)->lpVtbl->put_Stretch(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrushFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrushFactory[] = L"Microsoft.UI.Xaml.Media.ITileBrushFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrush** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITileBrushStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TileBrush
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITileBrushStatics[] = L"Microsoft.UI.Xaml.Media.ITileBrushStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentXProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_AlignmentYProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_StretchProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_get_AlignmentXProperty(This, value) \
    ((This)->lpVtbl->get_AlignmentXProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_get_AlignmentYProperty(This, value) \
    ((This)->lpVtbl->get_AlignmentYProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_get_StretchProperty(This, value) \
    ((This)->lpVtbl->get_StretchProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Transform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransform[] = L"Microsoft.UI.Xaml.Media.ITransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.Transform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformFactory[] = L"Microsoft.UI.Xaml.Media.ITransformFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TransformGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformGroup[] = L"Microsoft.UI.Xaml.Media.ITransformGroup";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform** value);
    HRESULT (STDMETHODCALLTYPE* put_Children)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        __FIVector_1_Microsoft__CUI__CXaml__CMedia__CTransform* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMatrix* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_get_Children(This, value) \
    ((This)->lpVtbl->get_Children(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_put_Children(This, value) \
    ((This)->lpVtbl->put_Children(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_get_Value(This, value) \
    ((This)->lpVtbl->get_Value(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITransformGroupStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TransformGroup
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITransformGroupStatics[] = L"Microsoft.UI.Xaml.Media.ITransformGroupStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_get_ChildrenProperty(This, value) \
    ((This)->lpVtbl->get_ChildrenProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITranslateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TranslateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITranslateTransform[] = L"Microsoft.UI.Xaml.Media.ITranslateTransform";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_X)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_X)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Y)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* put_Y)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform* This,
        DOUBLE value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_get_X(This, value) \
    ((This)->lpVtbl->get_X(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_put_X(This, value) \
    ((This)->lpVtbl->put_X(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_get_Y(This, value) \
    ((This)->lpVtbl->get_Y(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_put_Y(This, value) \
    ((This)->lpVtbl->put_Y(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.ITranslateTransformStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.TranslateTransform
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_ITranslateTransformStatics[] = L"Microsoft.UI.Xaml.Media.ITranslateTransformStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_XProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_YProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_get_XProperty(This, value) \
    ((This)->lpVtbl->get_XProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_get_YProperty(This, value) \
    ((This)->lpVtbl->get_YProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IVisualTreeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IVisualTreeHelper[] = L"Microsoft.UI.Xaml.Media.IVisualTreeHelper";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IVisualTreeHelperStatics[] = L"Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FindElementsInHostCoordinatesPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindElementsInHostCoordinatesRect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect intersectingRect,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindAllElementsInHostCoordinatesPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        boolean includeAllElements,
        __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* FindAllElementsInHostCoordinatesRect)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        struct __x_ABI_CWindows_CFoundation_CRect intersectingRect,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* subtree,
        boolean includeAllElements,
        __FIIterable_1_Microsoft__CUI__CXaml__CUIElement** result);
    HRESULT (STDMETHODCALLTYPE* GetChild)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        INT32 childIndex,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* GetChildrenCount)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetParent)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject* reference,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyObject** result);
    HRESULT (STDMETHODCALLTYPE* DisconnectChildrenRecursive)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* GetOpenPopups)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIWindow* window,
        __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);
    HRESULT (STDMETHODCALLTYPE* GetOpenPopupsForXamlRoot)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIXamlRoot* xamlRoot,
        __FIVectorView_1_Microsoft__CUI__CXaml__CControls__CPrimitives__CPopup** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindElementsInHostCoordinatesPoint(This, intersectingPoint, subtree, result) \
    ((This)->lpVtbl->FindElementsInHostCoordinatesPoint(This, intersectingPoint, subtree, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindElementsInHostCoordinatesRect(This, intersectingRect, subtree, result) \
    ((This)->lpVtbl->FindElementsInHostCoordinatesRect(This, intersectingRect, subtree, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindAllElementsInHostCoordinatesPoint(This, intersectingPoint, subtree, includeAllElements, result) \
    ((This)->lpVtbl->FindAllElementsInHostCoordinatesPoint(This, intersectingPoint, subtree, includeAllElements, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindAllElementsInHostCoordinatesRect(This, intersectingRect, subtree, includeAllElements, result) \
    ((This)->lpVtbl->FindAllElementsInHostCoordinatesRect(This, intersectingRect, subtree, includeAllElements, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetChild(This, reference, childIndex, result) \
    ((This)->lpVtbl->GetChild(This, reference, childIndex, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetChildrenCount(This, reference, result) \
    ((This)->lpVtbl->GetChildrenCount(This, reference, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetParent(This, reference, result) \
    ((This)->lpVtbl->GetParent(This, reference, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_DisconnectChildrenRecursive(This, element) \
    ((This)->lpVtbl->DisconnectChildrenRecursive(This, element))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetOpenPopups(This, window, result) \
    ((This)->lpVtbl->GetOpenPopups(This, window, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetOpenPopupsForXamlRoot(This, xamlRoot, result) \
    ((This)->lpVtbl->GetOpenPopupsForXamlRoot(This, xamlRoot, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBase[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FallbackColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_FallbackColor)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase* This,
        struct __x_ABI_CWindows_CUI_CColor value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_get_FallbackColor(This, value) \
    ((This)->lpVtbl->get_FallbackColor(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_put_FallbackColor(This, value) \
    ((This)->lpVtbl->put_FallbackColor(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseFactory[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBase** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseOverrides[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnConnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);
    HRESULT (STDMETHODCALLTYPE* OnDisconnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides* This);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_OnConnected(This) \
    ((This)->lpVtbl->OnConnected(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_OnDisconnected(This) \
    ((This)->lpVtbl->OnDisconnected(This))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseProtected[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompositionBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush** value);
    HRESULT (STDMETHODCALLTYPE* put_CompositionBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionBrush* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtectedVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_get_CompositionBrush(This, value) \
    ((This)->lpVtbl->get_CompositionBrush(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_put_CompositionBrush(This, value) \
    ((This)->lpVtbl->put_CompositionBrush(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlCompositionBrushBaseStatics[] = L"Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FallbackColorProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_get_FallbackColorProperty(This, value) \
    ((This)->lpVtbl->get_FallbackColorProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlCompositionBrushBaseStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLight
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLight[] = L"Microsoft.UI.Xaml.Media.IXamlLight";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightFactory[] = L"Microsoft.UI.Xaml.Media.IXamlLightFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLight** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightOverrides[] = L"Microsoft.UI.Xaml.Media.IXamlLightOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetId)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* OnConnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* newElement);
    HRESULT (STDMETHODCALLTYPE* OnDisconnected)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* oldElement);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_GetId(This, result) \
    ((This)->lpVtbl->GetId(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_OnConnected(This, newElement) \
    ((This)->lpVtbl->OnConnected(This, newElement))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_OnDisconnected(This, oldElement) \
    ((This)->lpVtbl->OnDisconnected(This, oldElement))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightProtected[] = L"Microsoft.UI.Xaml.Media.IXamlLightProtected";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompositionLight)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight** value);
    HRESULT (STDMETHODCALLTYPE* put_CompositionLight)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected* This,
        __x_ABI_CMicrosoft_CUI_CComposition_CICompositionLight* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtectedVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_get_CompositionLight(This, value) \
    ((This)->lpVtbl->get_CompositionLight(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_put_CompositionLight(This, value) \
    ((This)->lpVtbl->put_CompositionLight(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Media.IXamlLightStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Media.XamlLight
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Media_IXamlLightStatics[] = L"Microsoft.UI.Xaml.Media.IXamlLightStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddTargetElement)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* RemoveTargetElement)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element);
    HRESULT (STDMETHODCALLTYPE* AddTargetBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* brush);
    HRESULT (STDMETHODCALLTYPE* RemoveTargetBrush)(__x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics* This,
        HSTRING lightId,
        __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIBrush* brush);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_AddTargetElement(This, lightId, element) \
    ((This)->lpVtbl->AddTargetElement(This, lightId, element))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_RemoveTargetElement(This, lightId, element) \
    ((This)->lpVtbl->RemoveTargetElement(This, lightId, element))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_AddTargetBrush(This, lightId, brush) \
    ((This)->lpVtbl->AddTargetBrush(This, lightId, brush))

#define __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_RemoveTargetBrush(This, lightId, brush) \
    ((This)->lpVtbl->RemoveTargetBrush(This, lightId, brush))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CMedia_CIXamlLightStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.AcrylicBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IAcrylicBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2 interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IAcrylicBrush ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IAcrylicBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_AcrylicBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_AcrylicBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_AcrylicBrush[] = L"Microsoft.UI.Xaml.Media.AcrylicBrush";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ArcSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IArcSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IArcSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ArcSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ArcSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ArcSegment[] = L"Microsoft.UI.Xaml.Media.ArcSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BezierSegment[] = L"Microsoft.UI.Xaml.Media.BezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BitmapCache
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBitmapCache ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BitmapCache_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BitmapCache_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BitmapCache[] = L"Microsoft.UI.Xaml.Media.BitmapCache";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Brush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IBrush ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IBrushOverrides
 *    Microsoft.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Brush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Brush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Brush[] = L"Microsoft.UI.Xaml.Media.Brush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.BrushCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Brush> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Brush>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_BrushCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_BrushCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_BrushCollection[] = L"Microsoft.UI.Xaml.Media.BrushCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CacheMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICacheMode ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CacheMode_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CacheMode_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CacheMode[] = L"Microsoft.UI.Xaml.Media.CacheMode";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CompositeTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ICompositeTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICompositeTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositeTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositeTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CompositeTransform[] = L"Microsoft.UI.Xaml.Media.CompositeTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.CompositionTarget
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ICompositionTargetStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositionTarget_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_CompositionTarget[] = L"Microsoft.UI.Xaml.Media.CompositionTarget";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.DoubleCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Double> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Double>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_DoubleCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_DoubleCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_DoubleCollection[] = L"Microsoft.UI.Xaml.Media.DoubleCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.EllipseGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IEllipseGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_EllipseGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_EllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_EllipseGeometry[] = L"Microsoft.UI.Xaml.Media.EllipseGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.FontFamily
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IFontFamilyStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IFontFamily ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_FontFamily_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_FontFamily_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_FontFamily[] = L"Microsoft.UI.Xaml.Media.FontFamily";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeneralTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeneralTransform ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IGeneralTransformOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeneralTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeneralTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeneralTransform[] = L"Microsoft.UI.Xaml.Media.GeneralTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Geometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Geometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Geometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Geometry[] = L"Microsoft.UI.Xaml.Media.Geometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeometryCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Geometry> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Geometry>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeometryCollection[] = L"Microsoft.UI.Xaml.Media.GeometryCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GeometryGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGeometryGroupStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGeometryGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GeometryGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GeometryGroup[] = L"Microsoft.UI.Xaml.Media.GeometryGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientBrush[] = L"Microsoft.UI.Xaml.Media.GradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientStop
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IGradientStopStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStop_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientStop[] = L"Microsoft.UI.Xaml.Media.GradientStop";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.GradientStopCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.GradientStop> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.GradientStop>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStopCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_GradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_GradientStopCollection[] = L"Microsoft.UI.Xaml.Media.GradientStopCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ImageBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IImageBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IImageBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ImageBrush[] = L"Microsoft.UI.Xaml.Media.ImageBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ImageSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IImageSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageSource_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ImageSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ImageSource[] = L"Microsoft.UI.Xaml.Media.ImageSource";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LineGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILineGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LineGeometry[] = L"Microsoft.UI.Xaml.Media.LineGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILineSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILineSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LineSegment[] = L"Microsoft.UI.Xaml.Media.LineSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LinearGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LinearGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LinearGradientBrush[] = L"Microsoft.UI.Xaml.Media.LinearGradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LoadedImageSourceLoadCompletedEventArgs[] = L"Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.LoadedImageSurface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ILoadedImageSurface ** Default Interface **
 *    Windows.Foundation.IClosable
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_LoadedImageSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_LoadedImageSurface[] = L"Microsoft.UI.Xaml.Media.LoadedImageSurface";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Matrix3DProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrix3DProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Matrix3DProjection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Matrix3DProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Matrix3DProjection[] = L"Microsoft.UI.Xaml.Media.Matrix3DProjection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MatrixHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrixHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrixHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MatrixHelper[] = L"Microsoft.UI.Xaml.Media.MatrixHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MatrixTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IMatrixTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMatrixTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MatrixTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MatrixTransform[] = L"Microsoft.UI.Xaml.Media.MatrixTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_MediaTransportControlsThumbnailRequestedEventArgs[] = L"Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathFigure
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPathFigureStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathFigure ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigure_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigure_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathFigure[] = L"Microsoft.UI.Xaml.Media.PathFigure";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathFigureCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathFigure> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathFigure>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigureCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathFigureCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathFigureCollection[] = L"Microsoft.UI.Xaml.Media.PathFigureCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPathGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathGeometry[] = L"Microsoft.UI.Xaml.Media.PathGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPathSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathSegment[] = L"Microsoft.UI.Xaml.Media.PathSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PathSegmentCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.PathSegment> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.PathSegment>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegmentCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PathSegmentCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PathSegmentCollection[] = L"Microsoft.UI.Xaml.Media.PathSegmentCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PlaneProjection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPlaneProjectionStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPlaneProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PlaneProjection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PlaneProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PlaneProjection[] = L"Microsoft.UI.Xaml.Media.PlaneProjection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PointCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Windows.Foundation.Point> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PointCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PointCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PointCollection[] = L"Microsoft.UI.Xaml.Media.PointCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyBezierSegment[] = L"Microsoft.UI.Xaml.Media.PolyBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyLineSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyLineSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyLineSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyLineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyLineSegment[] = L"Microsoft.UI.Xaml.Media.PolyLineSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_PolyQuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Projection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IProjection ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Projection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Projection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Projection[] = L"Microsoft.UI.Xaml.Media.Projection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.QuadraticBezierSegment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IQuadraticBezierSegment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_QuadraticBezierSegment[] = L"Microsoft.UI.Xaml.Media.QuadraticBezierSegment";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RadialGradientBrush
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.XamlContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RadialGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RadialGradientBrush[] = L"Microsoft.UI.Xaml.Media.RadialGradientBrush";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RectangleGeometry
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRectangleGeometryStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RectangleGeometry[] = L"Microsoft.UI.Xaml.Media.RectangleGeometry";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RenderedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRenderedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RenderedEventArgs[] = L"Microsoft.UI.Xaml.Media.RenderedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RenderingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRenderingEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderingEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RenderingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RenderingEventArgs[] = L"Microsoft.UI.Xaml.Media.RenderingEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.RotateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IRotateTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IRotateTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_RotateTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_RotateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_RotateTransform[] = L"Microsoft.UI.Xaml.Media.RotateTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ScaleTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IScaleTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IScaleTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ScaleTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ScaleTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ScaleTransform[] = L"Microsoft.UI.Xaml.Media.ScaleTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Shadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Shadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Shadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Shadow[] = L"Microsoft.UI.Xaml.Media.Shadow";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.SkewTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ISkewTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ISkewTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_SkewTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_SkewTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_SkewTransform[] = L"Microsoft.UI.Xaml.Media.SkewTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.SolidColorBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Media.ISolidColorBrushFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ISolidColorBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ISolidColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_SolidColorBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_SolidColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_SolidColorBrush[] = L"Microsoft.UI.Xaml.Media.SolidColorBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.ThemeShadow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IThemeShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_ThemeShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_ThemeShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_ThemeShadow[] = L"Microsoft.UI.Xaml.Media.ThemeShadow";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TileBrush
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITileBrushStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITileBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TileBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TileBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TileBrush[] = L"Microsoft.UI.Xaml.Media.TileBrush";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.Transform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_Transform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_Transform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_Transform[] = L"Microsoft.UI.Xaml.Media.Transform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TransformCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Transform> ** Default Interface **
 *    Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Transform>
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TransformCollection[] = L"Microsoft.UI.Xaml.Media.TransformCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TransformGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITransformGroupStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITransformGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TransformGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TransformGroup[] = L"Microsoft.UI.Xaml.Media.TransformGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.TranslateTransform
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.ITranslateTransformStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.ITranslateTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_TranslateTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_TranslateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_TranslateTransform[] = L"Microsoft.UI.Xaml.Media.TranslateTransform";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.VisualTreeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IVisualTreeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_VisualTreeHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_VisualTreeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_VisualTreeHelper[] = L"Microsoft.UI.Xaml.Media.VisualTreeHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected
 *    Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_XamlCompositionBrushBase[] = L"Microsoft.UI.Xaml.Media.XamlCompositionBrushBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Media.XamlLight
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Media.IXamlLightStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Media.IXamlLight ** Default Interface **
 *    Microsoft.UI.Xaml.Media.IXamlLightProtected
 *    Microsoft.UI.Xaml.Media.IXamlLightOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Media_XamlLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Media_XamlLight[] = L"Microsoft.UI.Xaml.Media.XamlLight";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __microsoft2Eui2Examl2Emedia_p_h__

#endif // __microsoft2Eui2Examl2Emedia_h__
