
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __microsoft2Eui2Examl2Eautomation2Epeers_h__
#define __microsoft2Eui2Examl2Eautomation2Epeers_h__
#ifndef __microsoft2Eui2Examl2Eautomation2Epeers_p_h__
#define __microsoft2Eui2Examl2Eautomation2Epeers_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)
#define MICROSOFT_UI_XAML_WINUICONTRACT_VERSION 0x30000
#endif // defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)

#if !defined(MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION)
#define MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION 0x30000
#endif // defined(MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xa0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Microsoft.UI.Xaml.h"
#include "Microsoft.UI.Xaml.Automation.h"
#include "Microsoft.UI.Xaml.Automation.Provider.h"
#include "Microsoft.UI.Xaml.Controls.h"
#include "Microsoft.UI.Xaml.Controls.Primitives.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAnimatedVisualPlayerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAnimatedVisualPlayerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarToggleButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarToggleButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutoSuggestBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutoSuggestBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotation;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotationFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotationStatics;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerOverrides;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerProtected;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerProtected

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerStatics;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IBreadcrumbBarItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IBreadcrumbBarItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonBaseAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICalendarDatePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICalendarDatePickerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICheckBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICheckBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IColorPickerSliderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IColorPickerSliderAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IColorSpectrumAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IColorSpectrumAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDropDownButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDropDownButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IExpanderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IExpanderAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlyoutPresenterAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeerStatics;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics ABI::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewHeaderItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGroupItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGroupItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubSectionAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubSectionAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHyperlinkButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHyperlinkButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IImageAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IImageAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IInfoBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IInfoBarAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeerOverrides;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListPickerFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseHeaderItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewHeaderItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaPlayerElementAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaPlayerElementAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaTransportControlsAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaTransportControlsAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuBarAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuBarItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuBarItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutPresenterAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INavigationViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INavigationViewAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INavigationViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INavigationViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INumberBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface INumberBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPasswordBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPasswordBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPersonPictureAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPersonPictureAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPickerFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPipsPagerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPipsPagerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressBarAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressRingAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressRingAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonsAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonsAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRangeBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRangeBaseAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRatingControlAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRatingControlAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeatButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeatButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeaterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeaterAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichEditBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichEditBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockOverflowAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockOverflowAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollBarAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollViewerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollViewerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISemanticZoomAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISemanticZoomAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISliderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISliderAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISplitButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISplitButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITabViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITabViewAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITabViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITabViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITeachingTipAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITeachingTipAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBlockAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBlockAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBoxAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IThumbAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IThumbAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleMenuFlyoutItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleMenuFlyoutItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSplitButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSplitButtonAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSwitchAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSwitchAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewItemAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewItemDataAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewListAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITreeViewListAutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IWebView2AutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer ABI::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IWebView2AutomationPeerFactory;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory ABI::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeerFactory

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f5322c8c-bc0a-56cf-812c-5fe140021f62"))
IIterator<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3513d61b-ff0f-523d-872c-a496adb9bca2"))
IIterable<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AutomationPeerAnnotation;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("27b3501a-5cb5-572b-b3a3-10c38d82eacc"))
IIterator<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ae90a2bb-4062-586e-b436-1acf9f4dfd56"))
IIterable<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterator`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define __FIIterator_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_HSTRING_USE */



#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IIterable`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define __FIIterable_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_HSTRING_USE */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("26501cc8-81ab-54e0-8049-2bbd47c9ff36"))
IVectorView<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7a5622c2-354b-5d4e-b86d-3482eb35513e"))
IVectorView<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIVectorView_1_HSTRING_USE
#define DEF___FIVectorView_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2f13c006-a03a-5f69-b090-75a43e33423e"))
IVectorView<HSTRING> : IVectorView_impl<HSTRING>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVectorView`1<String>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<HSTRING> __FIVectorView_1_HSTRING_t;
#define __FIVectorView_1_HSTRING ABI::Windows::Foundation::Collections::__FIVectorView_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_HSTRING_USE */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("91d7782f-c53a-5620-8ce1-0d9419249322"))
IVector<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeer>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeer*> __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe9ed1b7-7185-52e9-b037-bf9902ac3561"))
IVector<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>>
{
    static const wchar_t* z_get_rc_name_impl()
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>";
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ }

#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    typedef enum AnnotationType : int AnnotationType;
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    class AutomationProperty;
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    interface IAutomationProperty;
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty ABI::Microsoft::UI::Xaml::Automation::IAutomationProperty

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    typedef enum AutomationTextEditChangeType : int AutomationTextEditChangeType;
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IDropTargetProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IDropTargetProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IExpandCollapseProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IExpandCollapseProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IInvokeProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IInvokeProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IItemContainerProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IItemContainerProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IRangeValueProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IRangeValueProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        class IRawElementProviderSimple;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IIRawElementProviderSimple;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IScrollItemProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IScrollItemProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IScrollProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IScrollProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface ISelectionItemProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider ABI::Microsoft::UI::Xaml::Automation::Provider::ISelectionItemProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface ISelectionProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider ABI::Microsoft::UI::Xaml::Automation::Provider::ISelectionProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IToggleProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IToggleProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IValueProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IValueProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IVirtualizedItemProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IVirtualizedItemProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Provider {
                        interface IWindowProvider;
                    } /* Provider */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider ABI::Microsoft::UI::Xaml::Automation::Provider::IWindowProvider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class AnimatedVisualPlayer;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAnimatedVisualPlayer;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer ABI::Microsoft::UI::Xaml::Controls::IAnimatedVisualPlayer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class AppBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar ABI::Microsoft::UI::Xaml::Controls::IAppBar

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class AppBarButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton ABI::Microsoft::UI::Xaml::Controls::IAppBarButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class AppBarToggleButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAppBarToggleButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton ABI::Microsoft::UI::Xaml::Controls::IAppBarToggleButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class AutoSuggestBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IAutoSuggestBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class BreadcrumbBarItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IBreadcrumbBarItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem ABI::Microsoft::UI::Xaml::Controls::IBreadcrumbBarItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Button;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton ABI::Microsoft::UI::Xaml::Controls::IButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class CalendarDatePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICalendarDatePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker ABI::Microsoft::UI::Xaml::Controls::ICalendarDatePicker

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class CheckBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ICheckBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox ABI::Microsoft::UI::Xaml::Controls::ICheckBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ComboBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox ABI::Microsoft::UI::Xaml::Controls::IComboBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ComboBoxItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IComboBoxItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem ABI::Microsoft::UI::Xaml::Controls::IComboBoxItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class DatePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDatePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker ABI::Microsoft::UI::Xaml::Controls::IDatePicker

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class DropDownButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IDropDownButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton ABI::Microsoft::UI::Xaml::Controls::IDropDownButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Expander;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IExpander;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander ABI::Microsoft::UI::Xaml::Controls::IExpander

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class FlipView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView ABI::Microsoft::UI::Xaml::Controls::IFlipView

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class FlipViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlipViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem ABI::Microsoft::UI::Xaml::Controls::IFlipViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class FlyoutPresenter;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IFlyoutPresenter;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter ABI::Microsoft::UI::Xaml::Controls::IFlyoutPresenter

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class GridView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView ABI::Microsoft::UI::Xaml::Controls::IGridView

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class GridViewHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem ABI::Microsoft::UI::Xaml::Controls::IGridViewHeaderItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class GridViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGridViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem ABI::Microsoft::UI::Xaml::Controls::IGridViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class GroupItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IGroupItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem ABI::Microsoft::UI::Xaml::Controls::IGroupItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Hub;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHub;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub ABI::Microsoft::UI::Xaml::Controls::IHub

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class HubSection;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHubSection;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection ABI::Microsoft::UI::Xaml::Controls::IHubSection

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class HyperlinkButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IHyperlinkButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton ABI::Microsoft::UI::Xaml::Controls::IHyperlinkButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Image;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IImage;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage ABI::Microsoft::UI::Xaml::Controls::IImage

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class InfoBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IInfoBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar ABI::Microsoft::UI::Xaml::Controls::IInfoBar

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ItemsControl;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsControl;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl ABI::Microsoft::UI::Xaml::Controls::IItemsControl

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ItemsRepeater;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IItemsRepeater;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater ABI::Microsoft::UI::Xaml::Controls::IItemsRepeater

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox ABI::Microsoft::UI::Xaml::Controls::IListBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListBoxItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListBoxItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem ABI::Microsoft::UI::Xaml::Controls::IListBoxItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView ABI::Microsoft::UI::Xaml::Controls::IListView

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListViewBase;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBase;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase ABI::Microsoft::UI::Xaml::Controls::IListViewBase

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListViewBaseHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewBaseHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem ABI::Microsoft::UI::Xaml::Controls::IListViewBaseHeaderItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListViewHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewHeaderItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem ABI::Microsoft::UI::Xaml::Controls::IListViewHeaderItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ListViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IListViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem ABI::Microsoft::UI::Xaml::Controls::IListViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MediaPlayerElement;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaPlayerElement;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement ABI::Microsoft::UI::Xaml::Controls::IMediaPlayerElement

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MediaTransportControls;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMediaTransportControls;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls ABI::Microsoft::UI::Xaml::Controls::IMediaTransportControls

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MenuBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar ABI::Microsoft::UI::Xaml::Controls::IMenuBar

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MenuBarItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuBarItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem ABI::Microsoft::UI::Xaml::Controls::IMenuBarItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MenuFlyoutItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class MenuFlyoutPresenter;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IMenuFlyoutPresenter;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutPresenter

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class NavigationView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INavigationView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView ABI::Microsoft::UI::Xaml::Controls::INavigationView

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class NavigationViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INavigationViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem ABI::Microsoft::UI::Xaml::Controls::INavigationViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class NumberBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface INumberBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox ABI::Microsoft::UI::Xaml::Controls::INumberBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class PasswordBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPasswordBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox ABI::Microsoft::UI::Xaml::Controls::IPasswordBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class PersonPicture;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPersonPicture;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture ABI::Microsoft::UI::Xaml::Controls::IPersonPicture

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class PipsPager;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPipsPager;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager ABI::Microsoft::UI::Xaml::Controls::IPipsPager

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Pivot;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPivot;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot ABI::Microsoft::UI::Xaml::Controls::IPivot

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class PivotItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IPivotItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem ABI::Microsoft::UI::Xaml::Controls::IPivotItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class ButtonBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IButtonBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase ABI::Microsoft::UI::Xaml::Controls::Primitives::IButtonBase

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class ColorPickerSlider;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IColorPickerSlider;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider ABI::Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class ColorSpectrum;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IColorSpectrum;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum ABI::Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class RangeBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IRangeBase;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase ABI::Microsoft::UI::Xaml::Controls::Primitives::IRangeBase

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class RepeatButton;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IRepeatButton;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton ABI::Microsoft::UI::Xaml::Controls::Primitives::IRepeatButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class ScrollBar;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IScrollBar;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollBar

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class Selector;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface ISelector;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector ABI::Microsoft::UI::Xaml::Controls::Primitives::ISelector

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class Thumb;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IThumb;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb ABI::Microsoft::UI::Xaml::Controls::Primitives::IThumb

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        class ToggleButton;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        interface IToggleButton;
                    } /* Primitives */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton ABI::Microsoft::UI::Xaml::Controls::Primitives::IToggleButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ProgressBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressBar;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar ABI::Microsoft::UI::Xaml::Controls::IProgressBar

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ProgressRing;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IProgressRing;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing ABI::Microsoft::UI::Xaml::Controls::IProgressRing

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RadioButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRadioButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton ABI::Microsoft::UI::Xaml::Controls::IRadioButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RadioButtons;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRadioButtons;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons ABI::Microsoft::UI::Xaml::Controls::IRadioButtons

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RatingControl;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRatingControl;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl ABI::Microsoft::UI::Xaml::Controls::IRatingControl

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RichEditBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichEditBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox ABI::Microsoft::UI::Xaml::Controls::IRichEditBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RichTextBlock;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlock;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock ABI::Microsoft::UI::Xaml::Controls::IRichTextBlock

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class RichTextBlockOverflow;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IRichTextBlockOverflow;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow ABI::Microsoft::UI::Xaml::Controls::IRichTextBlockOverflow

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ScrollViewer;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IScrollViewer;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer ABI::Microsoft::UI::Xaml::Controls::IScrollViewer

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class SemanticZoom;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISemanticZoom;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class Slider;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISlider;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider ABI::Microsoft::UI::Xaml::Controls::ISlider

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class SplitButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ISplitButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton ABI::Microsoft::UI::Xaml::Controls::ISplitButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TabView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITabView;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView ABI::Microsoft::UI::Xaml::Controls::ITabView

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TabViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITabViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem ABI::Microsoft::UI::Xaml::Controls::ITabViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TeachingTip;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITeachingTip;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip ABI::Microsoft::UI::Xaml::Controls::ITeachingTip

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TextBlock;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBlock;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock ABI::Microsoft::UI::Xaml::Controls::ITextBlock

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TextBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITextBox;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox ABI::Microsoft::UI::Xaml::Controls::ITextBox

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TimePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITimePicker;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker ABI::Microsoft::UI::Xaml::Controls::ITimePicker

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ToggleMenuFlyoutItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleMenuFlyoutItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem ABI::Microsoft::UI::Xaml::Controls::IToggleMenuFlyoutItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ToggleSplitButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleSplitButton;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton ABI::Microsoft::UI::Xaml::Controls::IToggleSplitButton

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class ToggleSwitch;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IToggleSwitch;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch ABI::Microsoft::UI::Xaml::Controls::IToggleSwitch

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TreeViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITreeViewItem;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem ABI::Microsoft::UI::Xaml::Controls::ITreeViewItem

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class TreeViewList;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface ITreeViewList;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList ABI::Microsoft::UI::Xaml::Controls::ITreeViewList

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    class WebView2;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    interface IWebView2;
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2 ABI::Microsoft::UI::Xaml::Controls::IWebView2

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class DependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IDependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty ABI::Microsoft::UI::Xaml::IDependencyProperty

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class FrameworkElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement ABI::Microsoft::UI::Xaml::IFrameworkElement

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                class UIElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                interface IUIElement;
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#define __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement ABI::Microsoft::UI::Xaml::IUIElement

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Point Point;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            typedef struct Rect Rect;
        } /* Foundation */
    } /* Windows */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationControlType : int AutomationControlType;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationEvents : int AutomationEvents;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationHeadingLevel : int AutomationHeadingLevel;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationLandmarkType : int AutomationLandmarkType;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationLiveSetting : int AutomationLiveSetting;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationNavigationDirection : int AutomationNavigationDirection;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationNotificationKind : int AutomationNotificationKind;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationNotificationProcessing : int AutomationNotificationProcessing;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationOrientation : int AutomationOrientation;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum AutomationStructureChangeType : int AutomationStructureChangeType;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef enum PatternInterface : int PatternInterface;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        typedef struct RawElementProviderRuntimeId RawElementProviderRuntimeId;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AnimatedVisualPlayerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AppBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AppBarButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AppBarToggleButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class AutoSuggestBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class BreadcrumbBarItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ButtonBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class CalendarDatePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class CheckBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ColorPickerSliderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ColorSpectrumAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ComboBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ComboBoxItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ComboBoxItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class DatePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class DropDownButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ExpanderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class FlipViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class FlipViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class FlipViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class FlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class FrameworkElementAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class GridViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class GridViewHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class GridViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class GridViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class GroupItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class HubAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class HubSectionAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class HyperlinkButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ImageAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class InfoBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ItemsControlAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListBoxItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListBoxItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewBaseHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewHeaderItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ListViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MediaPlayerElementAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MediaTransportControlsAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MenuBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MenuBarItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MenuFlyoutItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class MenuFlyoutPresenterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class NavigationViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class NavigationViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class NumberBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PasswordBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PersonPictureAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PipsPagerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PivotAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PivotItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class PivotItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ProgressBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ProgressRingAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RadioButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RadioButtonsAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RangeBaseAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RatingControlAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RepeatButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RepeaterAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RichEditBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RichTextBlockAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class RichTextBlockOverflowAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ScrollBarAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ScrollViewerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class SelectorAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class SelectorItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class SemanticZoomAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class SliderAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class SplitButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TabViewAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TabViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TeachingTipAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TextBlockAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TextBoxAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ThumbAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TimePickerAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ToggleButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ToggleMenuFlyoutItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ToggleSplitButtonAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class ToggleSwitchAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TreeViewItemAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TreeViewItemDataAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class TreeViewListAutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        class WebView2AutomationPeer;
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AccessibilityView : int
                        {
                            AccessibilityView_Raw = 0,
                            AccessibilityView_Control = 1,
                            AccessibilityView_Content = 2,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationControlType : int
                        {
                            AutomationControlType_Button = 0,
                            AutomationControlType_Calendar = 1,
                            AutomationControlType_CheckBox = 2,
                            AutomationControlType_ComboBox = 3,
                            AutomationControlType_Edit = 4,
                            AutomationControlType_Hyperlink = 5,
                            AutomationControlType_Image = 6,
                            AutomationControlType_ListItem = 7,
                            AutomationControlType_List = 8,
                            AutomationControlType_Menu = 9,
                            AutomationControlType_MenuBar = 10,
                            AutomationControlType_MenuItem = 11,
                            AutomationControlType_ProgressBar = 12,
                            AutomationControlType_RadioButton = 13,
                            AutomationControlType_ScrollBar = 14,
                            AutomationControlType_Slider = 15,
                            AutomationControlType_Spinner = 16,
                            AutomationControlType_StatusBar = 17,
                            AutomationControlType_Tab = 18,
                            AutomationControlType_TabItem = 19,
                            AutomationControlType_Text = 20,
                            AutomationControlType_ToolBar = 21,
                            AutomationControlType_ToolTip = 22,
                            AutomationControlType_Tree = 23,
                            AutomationControlType_TreeItem = 24,
                            AutomationControlType_Custom = 25,
                            AutomationControlType_Group = 26,
                            AutomationControlType_Thumb = 27,
                            AutomationControlType_DataGrid = 28,
                            AutomationControlType_DataItem = 29,
                            AutomationControlType_Document = 30,
                            AutomationControlType_SplitButton = 31,
                            AutomationControlType_Window = 32,
                            AutomationControlType_Pane = 33,
                            AutomationControlType_Header = 34,
                            AutomationControlType_HeaderItem = 35,
                            AutomationControlType_Table = 36,
                            AutomationControlType_TitleBar = 37,
                            AutomationControlType_Separator = 38,
                            AutomationControlType_SemanticZoom = 39,
                            AutomationControlType_AppBar = 40,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationEvents : int
                        {
                            AutomationEvents_ToolTipOpened = 0,
                            AutomationEvents_ToolTipClosed = 1,
                            AutomationEvents_MenuOpened = 2,
                            AutomationEvents_MenuClosed = 3,
                            AutomationEvents_AutomationFocusChanged = 4,
                            AutomationEvents_InvokePatternOnInvoked = 5,
                            AutomationEvents_SelectionItemPatternOnElementAddedToSelection = 6,
                            AutomationEvents_SelectionItemPatternOnElementRemovedFromSelection = 7,
                            AutomationEvents_SelectionItemPatternOnElementSelected = 8,
                            AutomationEvents_SelectionPatternOnInvalidated = 9,
                            AutomationEvents_TextPatternOnTextSelectionChanged = 10,
                            AutomationEvents_TextPatternOnTextChanged = 11,
                            AutomationEvents_AsyncContentLoaded = 12,
                            AutomationEvents_PropertyChanged = 13,
                            AutomationEvents_StructureChanged = 14,
                            AutomationEvents_DragStart = 15,
                            AutomationEvents_DragCancel = 16,
                            AutomationEvents_DragComplete = 17,
                            AutomationEvents_DragEnter = 18,
                            AutomationEvents_DragLeave = 19,
                            AutomationEvents_Dropped = 20,
                            AutomationEvents_LiveRegionChanged = 21,
                            AutomationEvents_InputReachedTarget = 22,
                            AutomationEvents_InputReachedOtherElement = 23,
                            AutomationEvents_InputDiscarded = 24,
                            AutomationEvents_WindowClosed = 25,
                            AutomationEvents_WindowOpened = 26,
                            AutomationEvents_ConversionTargetChanged = 27,
                            AutomationEvents_TextEditTextChanged = 28,
                            AutomationEvents_LayoutInvalidated = 29,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationHeadingLevel : int
                        {
                            AutomationHeadingLevel_None = 0,
                            AutomationHeadingLevel_Level1 = 1,
                            AutomationHeadingLevel_Level2 = 2,
                            AutomationHeadingLevel_Level3 = 3,
                            AutomationHeadingLevel_Level4 = 4,
                            AutomationHeadingLevel_Level5 = 5,
                            AutomationHeadingLevel_Level6 = 6,
                            AutomationHeadingLevel_Level7 = 7,
                            AutomationHeadingLevel_Level8 = 8,
                            AutomationHeadingLevel_Level9 = 9,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationLandmarkType : int
                        {
                            AutomationLandmarkType_None = 0,
                            AutomationLandmarkType_Custom = 1,
                            AutomationLandmarkType_Form = 2,
                            AutomationLandmarkType_Main = 3,
                            AutomationLandmarkType_Navigation = 4,
                            AutomationLandmarkType_Search = 5,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationLiveSetting : int
                        {
                            AutomationLiveSetting_Off = 0,
                            AutomationLiveSetting_Polite = 1,
                            AutomationLiveSetting_Assertive = 2,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationNavigationDirection : int
                        {
                            AutomationNavigationDirection_Parent = 0,
                            AutomationNavigationDirection_NextSibling = 1,
                            AutomationNavigationDirection_PreviousSibling = 2,
                            AutomationNavigationDirection_FirstChild = 3,
                            AutomationNavigationDirection_LastChild = 4,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationNotificationKind : int
                        {
                            AutomationNotificationKind_ItemAdded = 0,
                            AutomationNotificationKind_ItemRemoved = 1,
                            AutomationNotificationKind_ActionCompleted = 2,
                            AutomationNotificationKind_ActionAborted = 3,
                            AutomationNotificationKind_Other = 4,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationNotificationProcessing : int
                        {
                            AutomationNotificationProcessing_ImportantAll = 0,
                            AutomationNotificationProcessing_ImportantMostRecent = 1,
                            AutomationNotificationProcessing_All = 2,
                            AutomationNotificationProcessing_MostRecent = 3,
                            AutomationNotificationProcessing_CurrentThenMostRecent = 4,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationOrientation : int
                        {
                            AutomationOrientation_None = 0,
                            AutomationOrientation_Horizontal = 1,
                            AutomationOrientation_Vertical = 2,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum AutomationStructureChangeType : int
                        {
                            AutomationStructureChangeType_ChildAdded = 0,
                            AutomationStructureChangeType_ChildRemoved = 1,
                            AutomationStructureChangeType_ChildrenInvalidated = 2,
                            AutomationStructureChangeType_ChildrenBulkAdded = 3,
                            AutomationStructureChangeType_ChildrenBulkRemoved = 4,
                            AutomationStructureChangeType_ChildrenReordered = 5,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.PatternInterface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        enum PatternInterface : int
                        {
                            PatternInterface_Invoke = 0,
                            PatternInterface_Selection = 1,
                            PatternInterface_Value = 2,
                            PatternInterface_RangeValue = 3,
                            PatternInterface_Scroll = 4,
                            PatternInterface_ScrollItem = 5,
                            PatternInterface_ExpandCollapse = 6,
                            PatternInterface_Grid = 7,
                            PatternInterface_GridItem = 8,
                            PatternInterface_MultipleView = 9,
                            PatternInterface_Window = 10,
                            PatternInterface_SelectionItem = 11,
                            PatternInterface_Dock = 12,
                            PatternInterface_Table = 13,
                            PatternInterface_TableItem = 14,
                            PatternInterface_Toggle = 15,
                            PatternInterface_Transform = 16,
                            PatternInterface_Text = 17,
                            PatternInterface_ItemContainer = 18,
                            PatternInterface_VirtualizedItem = 19,
                            PatternInterface_Text2 = 20,
                            PatternInterface_TextChild = 21,
                            PatternInterface_TextRange = 22,
                            PatternInterface_Annotation = 23,
                            PatternInterface_Drag = 24,
                            PatternInterface_DropTarget = 25,
                            PatternInterface_ObjectModel = 26,
                            PatternInterface_Spreadsheet = 27,
                            PatternInterface_SpreadsheetItem = 28,
                            PatternInterface_Styles = 29,
                            PatternInterface_Transform2 = 30,
                            PatternInterface_SynchronizedInput = 31,
                            PatternInterface_TextEdit = 32,
                            PatternInterface_CustomNavigation = 33,
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        struct RawElementProviderRuntimeId
                        {
                            UINT32 Part1;
                            UINT32 Part2;
                        };
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f949eeb6-b3ea-58ad-b62b-b7255bcc04df")
                        IAnimatedVisualPlayerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IAnimatedVisualPlayerAutomationPeer = _uuidof(IAnimatedVisualPlayerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d2a49198-80bb-51d6-b495-3dc5aab59589")
                        IAnimatedVisualPlayerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IAnimatedVisualPlayer* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAnimatedVisualPlayerAutomationPeerFactory = _uuidof(IAnimatedVisualPlayerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("883a52e2-1810-5f1a-a9fd-1db0f9c62b02")
                        IAppBarAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarAutomationPeer = _uuidof(IAppBarAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("64f68ce4-ad2d-5c18-abc0-d0157cc63088")
                        IAppBarAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IAppBar* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarAutomationPeerFactory = _uuidof(IAppBarAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("439efdb4-141b-5fff-8723-03e6e69f6b36")
                        IAppBarButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarButtonAutomationPeer = _uuidof(IAppBarButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6f611433-7e50-5e2e-b192-d6a285962c74")
                        IAppBarButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IAppBarButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarButtonAutomationPeerFactory = _uuidof(IAppBarButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("17d28eb5-4635-5e2d-af01-8dcd23a608c4")
                        IAppBarToggleButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarToggleButtonAutomationPeer = _uuidof(IAppBarToggleButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3cb5ef43-ae92-5452-92e9-cd0ccca26891")
                        IAppBarToggleButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IAppBarToggleButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAppBarToggleButtonAutomationPeerFactory = _uuidof(IAppBarToggleButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("695236fc-0021-5936-bdf9-ed5991db0d52")
                        IAutoSuggestBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IAutoSuggestBoxAutomationPeer = _uuidof(IAutoSuggestBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c30950c9-b682-56df-9cb2-de6786fb8f90")
                        IAutoSuggestBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IAutoSuggestBox* owner,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutoSuggestBoxAutomationPeerFactory = _uuidof(IAutoSuggestBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e51d3e4e-34f0-568c-999f-6277e2afe6d7")
                        IAutomationPeer : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE get_EventsSource(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE put_EventsSource(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetPattern(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface patternInterface,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RaiseAutomationEvent(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents eventId
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RaisePropertyChangedEvent(
                                ABI::Microsoft::UI::Xaml::Automation::IAutomationProperty* automationProperty,
                                IInspectable* oldValue,
                                IInspectable* newValue
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAcceleratorKey(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAccessKey(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAutomationControlType(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAutomationId(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetBoundingRectangle(
                                ABI::Windows::Foundation::Rect* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetChildren(
                                __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE Navigate(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection direction,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetClassName(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetClickablePoint(
                                ABI::Windows::Foundation::Point* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetHelpText(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetItemStatus(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetItemType(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLabeledBy(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLocalizedControlType(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetName(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetOrientation(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE HasKeyboardFocus(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsContentElement(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsControlElement(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsEnabled(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsKeyboardFocusable(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsOffscreen(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsPassword(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsRequiredForForm(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE SetFocus(void) = 0;
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
                            DEPRECATED("Consider using Navigate with AutomationNavigationDirection::Parent, which is an improved version of GetParent. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
                            virtual HRESULT STDMETHODCALLTYPE GetParent(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE InvalidatePeer(void) = 0;
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
                            DEPRECATED("Consider using GetElementFromPoint, which is an improved version of GetPeerFromPoint. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
                            virtual HRESULT STDMETHODCALLTYPE GetPeerFromPoint(
                                ABI::Windows::Foundation::Point point,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetElementFromPoint(
                                ABI::Windows::Foundation::Point pointInWindowCoordinates,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFocusedElement(
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLiveSetting(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE ShowContextMenu(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetControlledPeers(
                                __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAnnotations(
                                __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE SetParent(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* peer
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RaiseTextEditTextChangedEvent(
                                ABI::Microsoft::UI::Xaml::Automation::AutomationTextEditChangeType automationTextEditChangeType,
                                __FIVectorView_1_HSTRING* changedData
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetPositionInSet(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetSizeOfSet(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLevel(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RaiseStructureChangedEvent(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationStructureChangeType structureChangeType,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* child
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLandmarkType(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLocalizedLandmarkType(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsPeripheral(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsDataValidForForm(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFullDescription(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetCulture(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RaiseNotificationEvent(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationKind notificationKind,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNotificationProcessing notificationProcessing,
                                HSTRING displayString,
                                HSTRING activityId
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetHeadingLevel(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsDialog(
                                boolean* result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeer = _uuidof(IAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2738b92a-2528-5b63-973d-d29eb0593647")
                        IAutomationPeerAnnotation : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE get_Type(
                                ABI::Microsoft::UI::Xaml::Automation::AnnotationType* value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE put_Type(
                                ABI::Microsoft::UI::Xaml::Automation::AnnotationType value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE get_Peer(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE put_Peer(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerAnnotation = _uuidof(IAutomationPeerAnnotation);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("25a1a202-bd68-5d41-a311-f84af9c8c440")
                        IAutomationPeerAnnotationFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Automation::AnnotationType type,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation** value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateWithPeerParameter(
                                ABI::Microsoft::UI::Xaml::Automation::AnnotationType type,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* peer,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerAnnotationFactory = _uuidof(IAutomationPeerAnnotationFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c46105d7-8ca3-50e3-a1bc-b6bb2f9ce1cd")
                        IAutomationPeerAnnotationStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE get_TypeProperty(
                                ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE get_PeerProperty(
                                ABI::Microsoft::UI::Xaml::IDependencyProperty** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerAnnotationStatics = _uuidof(IAutomationPeerAnnotationStatics);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("a1af86a0-6ec6-5be2-858f-72808be6fddd")
                        IAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerFactory = _uuidof(IAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("44f8f6df-1b60-512d-a295-dd8c276c4618")
                        IAutomationPeerOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE GetPatternCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::PatternInterface patternInterface,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAcceleratorKeyCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAccessKeyCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAutomationControlTypeCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationControlType* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAutomationIdCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetBoundingRectangleCore(
                                ABI::Windows::Foundation::Rect* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetChildrenCore(
                                __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE NavigateCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationNavigationDirection direction,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetClassNameCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetClickablePointCore(
                                ABI::Windows::Foundation::Point* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetHelpTextCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetItemStatusCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetItemTypeCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLabeledByCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLocalizedControlTypeCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetNameCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetOrientationCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationOrientation* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE HasKeyboardFocusCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsContentElementCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsControlElementCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsEnabledCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsKeyboardFocusableCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsOffscreenCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsPasswordCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsRequiredForFormCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE SetFocusCore(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetPeerFromPointCore(
                                ABI::Windows::Foundation::Point point,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetElementFromPointCore(
                                ABI::Windows::Foundation::Point pointInWindowCoordinates,
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFocusedElementCore(
                                IInspectable** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLiveSettingCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLiveSetting* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE ShowContextMenuCore(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetControlledPeersCore(
                                __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetAnnotationsCore(
                                __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetPositionInSetCore(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetSizeOfSetCore(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLevelCore(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLandmarkTypeCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationLandmarkType* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLocalizedLandmarkTypeCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsPeripheralCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsDataValidForFormCore(
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFullDescriptionCore(
                                HSTRING* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetDescribedByCore(
                                __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFlowsToCore(
                                __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetFlowsFromCore(
                                __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetCultureCore(
                                INT32* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetHeadingLevelCore(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationHeadingLevel* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsDialogCore(
                                boolean* result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerOverrides = _uuidof(IAutomationPeerOverrides);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9663b2c3-8c1f-56d4-abd9-268082a9e8bc")
                        IAutomationPeerProtected : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE PeerFromProvider(
                                ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple* provider,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE ProviderFromPeer(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer* peer,
                                ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple** result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerProtected = _uuidof(IAutomationPeerProtected);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("90b157ff-18d5-5623-850c-612ceae576bd")
                        IAutomationPeerStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ListenerExists(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::AutomationEvents eventId,
                                boolean* result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GenerateRawElementProviderRuntimeId(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::RawElementProviderRuntimeId* result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IAutomationPeerStatics = _uuidof(IAutomationPeerStatics);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("48e81612-7de0-5065-b881-04ebfff90497")
                        IBreadcrumbBarItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IBreadcrumbBarItemAutomationPeer = _uuidof(IBreadcrumbBarItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("dfb02146-405f-52ed-a873-0ed4942850be")
                        IBreadcrumbBarItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IBreadcrumbBarItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IBreadcrumbBarItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IBreadcrumbBarItemAutomationPeerFactory = _uuidof(IBreadcrumbBarItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("a3a2e96b-8a2d-50bf-9b3d-dfbc4653f5a6")
                        IButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IButtonAutomationPeer = _uuidof(IButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1c2f87b7-fbc1-56b0-a654-550d61c423d1")
                        IButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IButtonAutomationPeerFactory = _uuidof(IButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7a88a2d8-f8dd-5526-8a40-e2e3888193bf")
                        IButtonBaseAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IButtonBaseAutomationPeer = _uuidof(IButtonBaseAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d6e707bb-7299-5f7a-9c03-7fa10f939771")
                        IButtonBaseAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IButtonBase* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IButtonBaseAutomationPeerFactory = _uuidof(IButtonBaseAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("246d63e3-812f-5f28-8d18-af79409a4f95")
                        ICalendarDatePickerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ICalendarDatePickerAutomationPeer = _uuidof(ICalendarDatePickerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6d272c12-68a3-586e-879b-571e606803b4")
                        ICalendarDatePickerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ICalendarDatePicker* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ICalendarDatePickerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ICalendarDatePickerAutomationPeerFactory = _uuidof(ICalendarDatePickerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9b449814-2c1a-5bdc-9524-1df91c06e992")
                        ICheckBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ICheckBoxAutomationPeer = _uuidof(ICheckBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0f5b9e3c-6de5-588e-835f-3228be930fea")
                        ICheckBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ICheckBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ICheckBoxAutomationPeerFactory = _uuidof(ICheckBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("793d35d4-4152-50fa-b5f4-f6c045c1339d")
                        IColorPickerSliderAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IColorPickerSliderAutomationPeer = _uuidof(IColorPickerSliderAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e5f9093f-5e2c-5148-b5d1-1cda4eb86913")
                        IColorPickerSliderAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IColorPickerSliderAutomationPeerFactory = _uuidof(IColorPickerSliderAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("005ac3d1-b031-58ab-918d-030fabaeaf87")
                        IColorSpectrumAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IColorSpectrumAutomationPeer = _uuidof(IColorSpectrumAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("cfccae7e-fe0f-5c9c-9d1a-69e20e0232cf")
                        IColorSpectrumAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IColorSpectrumAutomationPeerFactory = _uuidof(IColorSpectrumAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("459d2245-1fd2-5dda-822c-bed13df6776b")
                        IComboBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxAutomationPeer = _uuidof(IComboBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d094829f-2a6f-5b1f-a0ce-0f682cc56c0f")
                        IComboBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IComboBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxAutomationPeerFactory = _uuidof(IComboBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3d4195bc-b579-5cda-b56f-1e7399e14122")
                        IComboBoxItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxItemAutomationPeer = _uuidof(IComboBoxItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ead9d22d-112b-550e-8cac-760614f979aa")
                        IComboBoxItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IComboBoxItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxItemAutomationPeerFactory = _uuidof(IComboBoxItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("65b69b50-cbc3-5ae7-bf9c-2794fe56c6b3")
                        IComboBoxItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxItemDataAutomationPeer = _uuidof(IComboBoxItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("66778718-8757-56d5-bd3a-f2ff40e83a78")
                        IComboBoxItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IComboBoxItemDataAutomationPeerFactory = _uuidof(IComboBoxItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f3d7c3e5-c817-58a5-bb47-d9eb228f3ba0")
                        IDatePickerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IDatePickerAutomationPeer = _uuidof(IDatePickerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("480f7825-b4a7-5c56-9f8a-fed84b9348ae")
                        IDatePickerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IDatePicker* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IDatePickerAutomationPeerFactory = _uuidof(IDatePickerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("600b7162-0529-5fd1-b6e4-41dc37eda513")
                        IDatePickerFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IDatePickerFlyoutPresenterAutomationPeer = _uuidof(IDatePickerFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7dc37dec-0a0a-5c98-8a6f-9e47dbab2f82")
                        IDropDownButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IDropDownButtonAutomationPeer = _uuidof(IDropDownButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("68c4bffa-1685-5936-b219-517e87fd591f")
                        IDropDownButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IDropDownButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IDropDownButtonAutomationPeerFactory = _uuidof(IDropDownButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f7527408-cc89-5b65-bbde-eae6d66dc3e5")
                        IExpanderAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IExpanderAutomationPeer = _uuidof(IExpanderAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2024523b-4a40-5976-aaab-0f05664f7494")
                        IExpanderAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IExpander* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IExpanderAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IExpanderAutomationPeerFactory = _uuidof(IExpanderAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9f2901ea-23cb-5cac-87d4-7fa9c7ffbc60")
                        IFlipViewAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewAutomationPeer = _uuidof(IFlipViewAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e73c7f75-ed47-522a-8a27-45feda1031f0")
                        IFlipViewAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IFlipView* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewAutomationPeerFactory = _uuidof(IFlipViewAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3569b1bb-7601-56de-812a-171455d8ad32")
                        IFlipViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewItemAutomationPeer = _uuidof(IFlipViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("aa3b880f-62cb-5878-8f0b-7b3548c65080")
                        IFlipViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IFlipViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewItemAutomationPeerFactory = _uuidof(IFlipViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3bb31a93-e737-501d-b9a6-a11461c9bcf5")
                        IFlipViewItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewItemDataAutomationPeer = _uuidof(IFlipViewItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6f892ace-4467-587c-953c-c1c13b632e5f")
                        IFlipViewItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFlipViewItemDataAutomationPeerFactory = _uuidof(IFlipViewItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e589b818-4a64-58c5-9c0b-5cea0f867e9b")
                        IFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IFlyoutPresenterAutomationPeer = _uuidof(IFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e529e586-7aa3-50a6-b17e-678b54fee127")
                        IFlyoutPresenterAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IFlyoutPresenter* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFlyoutPresenterAutomationPeerFactory = _uuidof(IFlyoutPresenterAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7dab4f24-605c-51cb-87db-3eed1b9fb37b")
                        IFrameworkElementAutomationPeer : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE get_Owner(
                                ABI::Microsoft::UI::Xaml::IUIElement** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFrameworkElementAutomationPeer = _uuidof(IFrameworkElementAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1682c3f8-238d-5c7e-a5a5-08cc3c10ac7c")
                        IFrameworkElementAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::IFrameworkElement* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFrameworkElementAutomationPeerFactory = _uuidof(IFrameworkElementAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("081f6fbe-6500-528a-a506-f5a4d41ddf6c")
                        IFrameworkElementAutomationPeerStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE FromElement(
                                ABI::Microsoft::UI::Xaml::IUIElement* element,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreatePeerForElement(
                                ABI::Microsoft::UI::Xaml::IUIElement* element,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer** result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IFrameworkElementAutomationPeerStatics = _uuidof(IFrameworkElementAutomationPeerStatics);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7870992f-3328-53c2-b412-2914438975b4")
                        IGridViewAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewAutomationPeer = _uuidof(IGridViewAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("71b829e1-7d57-580b-b1a6-d780ed992248")
                        IGridViewAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IGridView* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewAutomationPeerFactory = _uuidof(IGridViewAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c38af4b0-2757-569b-bdc7-a5b7b74ffdba")
                        IGridViewHeaderItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewHeaderItemAutomationPeer = _uuidof(IGridViewHeaderItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6161999a-e042-5d9b-aa38-9fe1296bfb01")
                        IGridViewHeaderItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IGridViewHeaderItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewHeaderItemAutomationPeerFactory = _uuidof(IGridViewHeaderItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("de249c2e-5419-5798-b625-cd2c05307572")
                        IGridViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewItemAutomationPeer = _uuidof(IGridViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("04735951-0f91-53f5-984b-75bf0ed41540")
                        IGridViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IGridViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewItemAutomationPeerFactory = _uuidof(IGridViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0372c2a0-5094-5811-96ba-0dbe77187435")
                        IGridViewItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewItemDataAutomationPeer = _uuidof(IGridViewItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("44137b3e-c6f3-53ce-915d-fc8e60ccee74")
                        IGridViewItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IGridViewItemDataAutomationPeerFactory = _uuidof(IGridViewItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2ff50701-4164-511d-bb23-d21eb88d5eb9")
                        IGroupItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IGroupItemAutomationPeer = _uuidof(IGroupItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("cdb10ed9-d1d3-5faa-8772-70014da666b3")
                        IGroupItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IGroupItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IGroupItemAutomationPeerFactory = _uuidof(IGroupItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("8fa20cb6-42c1-531e-b54f-fcaf33c943a9")
                        IHubAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IHubAutomationPeer = _uuidof(IHubAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c1b1f1cf-3926-56c9-b690-530c8bc78806")
                        IHubAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IHub* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IHubAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IHubAutomationPeerFactory = _uuidof(IHubAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("174e94ab-c033-534a-895c-eaaf1dcc4352")
                        IHubSectionAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IHubSectionAutomationPeer = _uuidof(IHubSectionAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("dc56cf08-2031-56b6-9ad5-7f8d7475d35d")
                        IHubSectionAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IHubSection* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IHubSectionAutomationPeerFactory = _uuidof(IHubSectionAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6a770ab2-02d0-59ba-a28e-3dfba1f10dd8")
                        IHyperlinkButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IHyperlinkButtonAutomationPeer = _uuidof(IHyperlinkButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2476e661-abce-5d35-b38b-6cee2c4148f4")
                        IHyperlinkButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IHyperlinkButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IHyperlinkButtonAutomationPeerFactory = _uuidof(IHyperlinkButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1f6eb184-8765-5455-bd1d-93c251c17f9b")
                        IImageAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IImageAutomationPeer = _uuidof(IImageAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1b26001b-49a6-5ff4-b1b1-2d504d2ef133")
                        IImageAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IImage* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IImageAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IImageAutomationPeerFactory = _uuidof(IImageAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("aa2c40eb-df80-5050-92c5-5fda5abfdef2")
                        IInfoBarAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IInfoBarAutomationPeer = _uuidof(IInfoBarAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("5fd3e590-68b9-5c9c-a572-0bc10167ce46")
                        IInfoBarAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IInfoBar* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IInfoBarAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IInfoBarAutomationPeerFactory = _uuidof(IInfoBarAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("be8a71bb-3e36-54d2-920e-60722f1c62ff")
                        IItemAutomationPeer : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE get_Item(
                                IInspectable** value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE get_ItemsControlAutomationPeer(
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IItemAutomationPeer = _uuidof(IItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ffe08885-14ac-5859-b031-5f3a4c504e6d")
                        IItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IItemAutomationPeerFactory = _uuidof(IItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0ae7bb7e-1407-5947-985f-9d542f433ab1")
                        IItemsControlAutomationPeer : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateItemAutomationPeer(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer** result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IItemsControlAutomationPeer = _uuidof(IItemsControlAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9de524cc-5e66-51a0-a7e0-a1742d28334b")
                        IItemsControlAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IItemsControl* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IItemsControlAutomationPeerFactory = _uuidof(IItemsControlAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d751b35b-236e-5859-a834-52fa369cd3bd")
                        IItemsControlAutomationPeerOverrides : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE OnCreateItemAutomationPeer(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IItemAutomationPeer** result
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IItemsControlAutomationPeerOverrides = _uuidof(IItemsControlAutomationPeerOverrides);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2bc1ca3f-3617-53a8-94b9-bec91d573525")
                        IListBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxAutomationPeer = _uuidof(IListBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("004aaf6f-a12c-5fa4-a1f7-e3b0fbe45ddd")
                        IListBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxAutomationPeerFactory = _uuidof(IListBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("19a8c4b4-e63a-5b2e-8e2f-c834e6a08204")
                        IListBoxItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxItemAutomationPeer = _uuidof(IListBoxItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("936e36ef-0fae-58a2-8fb2-313999793263")
                        IListBoxItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListBoxItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxItemAutomationPeerFactory = _uuidof(IListBoxItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2b81660f-46dc-5765-b10a-2269d12eba42")
                        IListBoxItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxItemDataAutomationPeer = _uuidof(IListBoxItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2ce97068-5280-5bec-8ba5-785c58986dcf")
                        IListBoxItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListBoxItemDataAutomationPeerFactory = _uuidof(IListBoxItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("16574767-e8ca-551a-a9e9-e5394de33469")
                        IListPickerFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListPickerFlyoutPresenterAutomationPeer = _uuidof(IListPickerFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("8f2a3373-e305-55f3-923e-d9eee8d1a6ee")
                        IListViewAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewAutomationPeer = _uuidof(IListViewAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3c6d8fc2-57ea-584e-9a89-504c65251d0f")
                        IListViewAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListView* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewAutomationPeerFactory = _uuidof(IListViewAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ad9a395c-5a96-5331-9636-ee4c53184986")
                        IListViewBaseAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewBaseAutomationPeer = _uuidof(IListViewBaseAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("361ed030-7c93-5967-97cb-4a9693e34050")
                        IListViewBaseAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListViewBase* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewBaseAutomationPeerFactory = _uuidof(IListViewBaseAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("623314d2-c7f1-5003-9560-07d420a33a2a")
                        IListViewBaseHeaderItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewBaseHeaderItemAutomationPeer = _uuidof(IListViewBaseHeaderItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e6041212-904b-5d22-b856-d3ef53d16aa6")
                        IListViewBaseHeaderItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListViewBaseHeaderItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewBaseHeaderItemAutomationPeerFactory = _uuidof(IListViewBaseHeaderItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0293eaca-f7de-5a0d-9beb-79dc1ac4a7de")
                        IListViewHeaderItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewHeaderItemAutomationPeer = _uuidof(IListViewHeaderItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f7b3480b-bfff-5c1c-b9d5-8eee544aebf8")
                        IListViewHeaderItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListViewHeaderItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewHeaderItemAutomationPeerFactory = _uuidof(IListViewHeaderItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("de487f2c-5a61-599e-b9ff-0fd7675d7af3")
                        IListViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewItemAutomationPeer = _uuidof(IListViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d6625ba7-1ae3-58b1-af12-e5cd5afc17ff")
                        IListViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IListViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewItemAutomationPeerFactory = _uuidof(IListViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("88bb28d3-45ed-5415-825f-dd2da536c968")
                        IListViewItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewItemDataAutomationPeer = _uuidof(IListViewItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9b22e7ea-6f7a-5c05-8072-5bddf54f9bda")
                        IListViewItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IListViewItemDataAutomationPeerFactory = _uuidof(IListViewItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("00b612f4-8faf-5c0c-92e4-4396e0f7b8d8")
                        ILoopingSelectorAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ILoopingSelectorAutomationPeer = _uuidof(ILoopingSelectorAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9c108861-895f-5e92-84c1-ff12072e7ec0")
                        ILoopingSelectorItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ILoopingSelectorItemAutomationPeer = _uuidof(ILoopingSelectorItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1f8362eb-a069-5121-a56b-619365b4515c")
                        ILoopingSelectorItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ILoopingSelectorItemDataAutomationPeer = _uuidof(ILoopingSelectorItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f68b8ca2-4428-5c35-b6a8-1b2ea062c22c")
                        IMediaPlayerElementAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMediaPlayerElementAutomationPeer = _uuidof(IMediaPlayerElementAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2ae1aa11-7a7c-5580-a7d7-f7597859bdc2")
                        IMediaPlayerElementAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IMediaPlayerElement* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaPlayerElementAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMediaPlayerElementAutomationPeerFactory = _uuidof(IMediaPlayerElementAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("da850d4e-8715-5ae7-81a9-abd10d17c1ed")
                        IMediaTransportControlsAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMediaTransportControlsAutomationPeer = _uuidof(IMediaTransportControlsAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("77f281e1-cb51-5360-b74e-6fe4f8ee5028")
                        IMediaTransportControlsAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IMediaTransportControls* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMediaTransportControlsAutomationPeerFactory = _uuidof(IMediaTransportControlsAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ae96e710-b9d3-59dd-973e-1bbc86cf0afc")
                        IMenuBarAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuBarAutomationPeer = _uuidof(IMenuBarAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d3e1ca3f-1702-5bd3-8adb-e6f6cb9e7531")
                        IMenuBarAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IMenuBar* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuBarAutomationPeerFactory = _uuidof(IMenuBarAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2da890cd-0aae-53b9-8c12-81003f60ed14")
                        IMenuBarItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuBarItemAutomationPeer = _uuidof(IMenuBarItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("603b63c4-a626-50e6-9c1a-649699ca7ad6")
                        IMenuBarItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IMenuBarItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuBarItemAutomationPeerFactory = _uuidof(IMenuBarItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("fdb57952-2a4f-5ed4-8ada-320def75ea71")
                        IMenuFlyoutItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuFlyoutItemAutomationPeer = _uuidof(IMenuFlyoutItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("fe125e46-7c1c-5a7c-98e0-c7aa3a00a6cd")
                        IMenuFlyoutItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuFlyoutItemAutomationPeerFactory = _uuidof(IMenuFlyoutItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("74d3ff77-1e92-5f96-99a1-697d74283ba7")
                        IMenuFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuFlyoutPresenterAutomationPeer = _uuidof(IMenuFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("beadfdfc-1035-5ffd-bae6-03f754b05dcc")
                        IMenuFlyoutPresenterAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IMenuFlyoutPresenter* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IMenuFlyoutPresenterAutomationPeerFactory = _uuidof(IMenuFlyoutPresenterAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("72013eae-b015-550d-ba8d-a05112b62731")
                        INavigationViewAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_INavigationViewAutomationPeer = _uuidof(INavigationViewAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("75075b03-a2f7-5869-b23c-63cbe5acc43a")
                        INavigationViewAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::INavigationView* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_INavigationViewAutomationPeerFactory = _uuidof(INavigationViewAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c7924c7a-739f-5251-9b86-df6486eb08a7")
                        INavigationViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_INavigationViewItemAutomationPeer = _uuidof(INavigationViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("890516d0-5a62-528b-8873-4f7140b40489")
                        INavigationViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::INavigationViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_INavigationViewItemAutomationPeerFactory = _uuidof(INavigationViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("235befeb-6c98-5d35-a2e7-001eae342509")
                        INumberBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_INumberBoxAutomationPeer = _uuidof(INumberBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("659719ac-4405-58f4-bde2-ef61dfe64c21")
                        INumberBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::INumberBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::INumberBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_INumberBoxAutomationPeerFactory = _uuidof(INumberBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("49b18dba-fa3b-5106-a1e8-1aaa3d24d5e1")
                        IPasswordBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPasswordBoxAutomationPeer = _uuidof(IPasswordBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7b0d5cba-c5b3-553e-989a-a10ee04144af")
                        IPasswordBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IPasswordBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPasswordBoxAutomationPeerFactory = _uuidof(IPasswordBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2e71779b-aca4-52c2-8a25-bc5f1ee3b0ae")
                        IPersonPictureAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPersonPictureAutomationPeer = _uuidof(IPersonPictureAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("bd1709e5-1940-56fc-b5c3-85e4570951cc")
                        IPersonPictureAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IPersonPicture* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPersonPictureAutomationPeerFactory = _uuidof(IPersonPictureAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("b29f6d28-154b-5c1d-a5e8-98604bb5cdf6")
                        IPickerFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPickerFlyoutPresenterAutomationPeer = _uuidof(IPickerFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("93de1bc2-cf84-5b5f-91be-a7c781b2021a")
                        IPipsPagerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPipsPagerAutomationPeer = _uuidof(IPipsPagerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("fb5248ef-e835-5997-bc36-d4e5db4a1b5a")
                        IPipsPagerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IPipsPager* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPipsPagerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPipsPagerAutomationPeerFactory = _uuidof(IPipsPagerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("84225540-a6a3-5e65-a3dc-b31b81ab14c1")
                        IPivotAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotAutomationPeer = _uuidof(IPivotAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("b1dd0229-c14c-5ac0-8331-be24fa2007f0")
                        IPivotAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IPivot* owner,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotAutomationPeerFactory = _uuidof(IPivotAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("bfe7fb7b-2d88-56e4-b50f-0a40de6f52a1")
                        IPivotItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotItemAutomationPeer = _uuidof(IPivotItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("14966ee7-afaf-5fcc-9346-f0e7192c220a")
                        IPivotItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IPivotItem* owner,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotItemAutomationPeerFactory = _uuidof(IPivotItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6758ebee-b3e0-5feb-aaba-b7f6c59fe49f")
                        IPivotItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotItemDataAutomationPeer = _uuidof(IPivotItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("26d7a6e9-ce6b-5690-9024-75ce5770b0d6")
                        IPivotItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotAutomationPeer* parent,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IPivotItemDataAutomationPeerFactory = _uuidof(IPivotItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("8565ead9-b877-52c7-a147-6fe1fee767af")
                        IProgressBarAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IProgressBarAutomationPeer = _uuidof(IProgressBarAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("cea28c0d-c4b3-5d18-aef6-958031395878")
                        IProgressBarAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IProgressBar* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IProgressBarAutomationPeerFactory = _uuidof(IProgressBarAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3b6952da-9e44-52b0-91df-39da9dc1d8b0")
                        IProgressRingAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IProgressRingAutomationPeer = _uuidof(IProgressRingAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("650f375c-3b29-5376-a7f7-c78082b82d13")
                        IProgressRingAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IProgressRing* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IProgressRingAutomationPeerFactory = _uuidof(IProgressRingAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("cce147b7-574a-53b6-a5b2-ca2622a79b2c")
                        IRadioButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRadioButtonAutomationPeer = _uuidof(IRadioButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ca07c7ee-502a-509e-bc44-682e6828d1f8")
                        IRadioButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IRadioButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRadioButtonAutomationPeerFactory = _uuidof(IRadioButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("fff86275-0cdd-54db-9d88-9c0e5f9bcb4d")
                        IRadioButtonsAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRadioButtonsAutomationPeer = _uuidof(IRadioButtonsAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f13521d0-056e-598c-ad23-a7150049d80a")
                        IRadioButtonsAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IRadioButtons* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRadioButtonsAutomationPeerFactory = _uuidof(IRadioButtonsAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("b5d50512-70a9-5b27-82fe-16f6ba67bac5")
                        IRangeBaseAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRangeBaseAutomationPeer = _uuidof(IRangeBaseAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("8c8f25e9-5194-54a9-b787-ce0293fd6721")
                        IRangeBaseAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IRangeBase* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRangeBaseAutomationPeerFactory = _uuidof(IRangeBaseAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("55493ec4-926b-595a-97a3-a7fa604188a4")
                        IRatingControlAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRatingControlAutomationPeer = _uuidof(IRatingControlAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f87dacb6-e87e-59b3-8a40-331ea7aa747d")
                        IRatingControlAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IRatingControl* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRatingControlAutomationPeerFactory = _uuidof(IRatingControlAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e42a7cc2-ace8-56eb-9967-9b7fd157c37f")
                        IRepeatButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRepeatButtonAutomationPeer = _uuidof(IRepeatButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0fad55a4-1c62-595e-a189-bb43a219c699")
                        IRepeatButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IRepeatButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRepeatButtonAutomationPeerFactory = _uuidof(IRepeatButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("03f2c315-fb55-54b2-9aad-9723aaf5e2cf")
                        IRepeaterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRepeaterAutomationPeer = _uuidof(IRepeaterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("04526bc7-fa3e-55fe-a314-986e2f196a2f")
                        IRepeaterAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IItemsRepeater* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRepeaterAutomationPeerFactory = _uuidof(IRepeaterAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("193a43f1-129d-57e1-bcf9-ba966bcadacb")
                        IRichEditBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRichEditBoxAutomationPeer = _uuidof(IRichEditBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("84f0d84f-54ca-58f2-ac50-d379aab75463")
                        IRichEditBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IRichEditBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRichEditBoxAutomationPeerFactory = _uuidof(IRichEditBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7080ff80-b3b8-5d3c-89b5-d989d561192f")
                        IRichTextBlockAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRichTextBlockAutomationPeer = _uuidof(IRichTextBlockAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f8a4485b-2895-5886-8ff6-497e4f1a6e3d")
                        IRichTextBlockAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IRichTextBlock* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRichTextBlockAutomationPeerFactory = _uuidof(IRichTextBlockAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d0bf83c0-8cfb-5770-b26c-0706e51a9a3b")
                        IRichTextBlockOverflowAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IRichTextBlockOverflowAutomationPeer = _uuidof(IRichTextBlockOverflowAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3e7b3ced-bd1f-5851-97a4-1c318f60d641")
                        IRichTextBlockOverflowAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IRichTextBlockOverflow* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IRichTextBlockOverflowAutomationPeerFactory = _uuidof(IRichTextBlockOverflowAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("028a26c4-05f7-58b2-a81e-a7ac032f756f")
                        IScrollBarAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IScrollBarAutomationPeer = _uuidof(IScrollBarAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("fc67a9cc-e914-532a-8717-0b383e2157f3")
                        IScrollBarAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IScrollBar* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IScrollBarAutomationPeerFactory = _uuidof(IScrollBarAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("25394bad-6ca2-5e04-95fa-95412c1f80ac")
                        IScrollViewerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IScrollViewerAutomationPeer = _uuidof(IScrollViewerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("3f1578f9-60ec-5f7c-8d11-10c535a75a12")
                        IScrollViewerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IScrollViewer* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IScrollViewerAutomationPeerFactory = _uuidof(IScrollViewerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("4bac62ba-fb33-5f8b-995e-0dd93431294f")
                        ISelectorAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ISelectorAutomationPeer = _uuidof(ISelectorAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("d84fe7b9-f5f5-5122-b41c-5575a799d581")
                        ISelectorAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::ISelector* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ISelectorAutomationPeerFactory = _uuidof(ISelectorAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("70b85e53-e684-5068-91b7-2d84fea8e9d7")
                        ISelectorItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ISelectorItemAutomationPeer = _uuidof(ISelectorItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2691e85b-dc9c-5ce6-aec9-21c8da9a4ad1")
                        ISelectorItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ISelectorItemAutomationPeerFactory = _uuidof(ISelectorItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7d7fbd09-112f-50fd-9654-0474ce760b5d")
                        ISemanticZoomAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ISemanticZoomAutomationPeer = _uuidof(ISemanticZoomAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0572c3c2-87df-55d6-8fcc-032330108cd8")
                        ISemanticZoomAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ISemanticZoom* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ISemanticZoomAutomationPeerFactory = _uuidof(ISemanticZoomAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("c321c95f-c917-5714-9d16-ad706e38926a")
                        ISliderAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ISliderAutomationPeer = _uuidof(ISliderAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("81459943-902a-5fe3-9c75-0f8b11f42658")
                        ISliderAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ISlider* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISliderAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ISliderAutomationPeerFactory = _uuidof(ISliderAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0182661c-0df3-5c7d-8752-547804c4fa44")
                        ISplitButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ISplitButtonAutomationPeer = _uuidof(ISplitButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("e82ddc93-780e-5000-981e-9be10eedeb1f")
                        ISplitButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::ISplitButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ISplitButtonAutomationPeerFactory = _uuidof(ISplitButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("efb3f05b-2a25-5266-a1cb-5a0aa451ca32")
                        ITabViewAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITabViewAutomationPeer = _uuidof(ITabViewAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("f8d8c7cb-47cc-5da5-bd1a-e2e1ba0fd24d")
                        ITabViewAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::ITabView* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITabViewAutomationPeerFactory = _uuidof(ITabViewAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("58afb1c3-a3fd-54a1-be39-328dd8a6f8ec")
                        ITabViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITabViewItemAutomationPeer = _uuidof(ITabViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("00218040-9c0d-5c52-b578-593b809047b3")
                        ITabViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::ITabViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITabViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITabViewItemAutomationPeerFactory = _uuidof(ITabViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("607994ec-a995-5b07-b535-8c913f0bc26c")
                        ITeachingTipAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITeachingTipAutomationPeer = _uuidof(ITeachingTipAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("71a061c1-3d71-5548-98fd-62167f246085")
                        ITeachingTipAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::ITeachingTip* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITeachingTipAutomationPeerFactory = _uuidof(ITeachingTipAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("29521960-2ef2-5d15-bf6a-cf585ef8a571")
                        ITextBlockAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITextBlockAutomationPeer = _uuidof(ITextBlockAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2a04c7bb-6d48-5f8e-9622-54dccdf0a5ca")
                        ITextBlockAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ITextBlock* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITextBlockAutomationPeerFactory = _uuidof(ITextBlockAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("9e26139a-0618-56fa-9916-8d5edf564735")
                        ITextBoxAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITextBoxAutomationPeer = _uuidof(ITextBoxAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1e84ac8f-9974-5be1-b6ea-84f309c8b2b8")
                        ITextBoxAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ITextBox* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITextBoxAutomationPeerFactory = _uuidof(ITextBoxAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("b05d6e5b-3586-5157-a497-4f15b87d89eb")
                        IThumbAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IThumbAutomationPeer = _uuidof(IThumbAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("311b414a-7cc8-56d9-b581-149c8bf9d76d")
                        IThumbAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IThumb* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IThumbAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IThumbAutomationPeerFactory = _uuidof(IThumbAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("6309d3bb-3387-5965-acf5-47bfa9b92ed4")
                        ITimePickerAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITimePickerAutomationPeer = _uuidof(ITimePickerAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7cdf2f82-7453-5d86-8ee3-60daaf345f47")
                        ITimePickerAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ITimePicker* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITimePickerAutomationPeerFactory = _uuidof(ITimePickerAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2438268a-62e8-5d61-95d0-d36f6b42e652")
                        ITimePickerFlyoutPresenterAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITimePickerFlyoutPresenterAutomationPeer = _uuidof(ITimePickerFlyoutPresenterAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("637d9b99-bcc2-5e26-b43f-ba6c26af72c3")
                        IToggleButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleButtonAutomationPeer = _uuidof(IToggleButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("2c272096-21e0-5714-9164-1f6a1e0b2181")
                        IToggleButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::Primitives::IToggleButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleButtonAutomationPeerFactory = _uuidof(IToggleButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("ea4e4c7e-1f12-56c0-a2a5-b59e9c25b06d")
                        IToggleMenuFlyoutItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleMenuFlyoutItemAutomationPeer = _uuidof(IToggleMenuFlyoutItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("7789f700-d565-5dc7-8bcc-d459a4c08fd6")
                        IToggleMenuFlyoutItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IToggleMenuFlyoutItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleMenuFlyoutItemAutomationPeerFactory = _uuidof(IToggleMenuFlyoutItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("21356952-4c74-5273-b82d-e5ce1bbcd369")
                        IToggleSplitButtonAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleSplitButtonAutomationPeer = _uuidof(IToggleSplitButtonAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("61c214a5-605b-5e98-b85d-e3121d23edaa")
                        IToggleSplitButtonAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IToggleSplitButton* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleSplitButtonAutomationPeerFactory = _uuidof(IToggleSplitButtonAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("927d6091-5070-574f-9833-0ef89a9cbb4b")
                        IToggleSwitchAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleSwitchAutomationPeer = _uuidof(IToggleSwitchAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("03f5e3e4-4b61-5dcf-afdc-fd23041a0374")
                        IToggleSwitchAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::IToggleSwitch* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IToggleSwitchAutomationPeerFactory = _uuidof(IToggleSwitchAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("25b38166-b905-5480-8439-e459a5b77b8c")
                        ITreeViewItemAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewItemAutomationPeer = _uuidof(ITreeViewItemAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("0c993c78-981f-5dcf-93d3-a217ad9acab6")
                        ITreeViewItemAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ITreeViewItem* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewItemAutomationPeerFactory = _uuidof(ITreeViewItemAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("20f74f77-edfa-5c71-9deb-530dcaf9c11d")
                        ITreeViewItemDataAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewItemDataAutomationPeer = _uuidof(ITreeViewItemDataAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("07fc8e59-55a2-58ab-8921-91e57ddf119f")
                        ITreeViewItemDataAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                IInspectable* item,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer* parent,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemDataAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewItemDataAutomationPeerFactory = _uuidof(ITreeViewItemDataAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("1ebf0f7f-6111-50a5-8398-89c4fdd0dedb")
                        ITreeViewListAutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewListAutomationPeer = _uuidof(ITreeViewListAutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("51332d86-c414-5e7d-b57b-e479983c9e5d")
                        ITreeViewListAutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner(
                                ABI::Microsoft::UI::Xaml::Controls::ITreeViewList* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_ITreeViewListAutomationPeerFactory = _uuidof(ITreeViewListAutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("8e556eca-b000-5e51-810f-7b7d80c39d56")
                        IWebView2AutomationPeer : public IInspectable
                        {
                        public:
                        };

                        extern MIDL_CONST_ID IID& IID_IWebView2AutomationPeer = _uuidof(IWebView2AutomationPeer);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory";
namespace ABI {
    namespace Microsoft {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        MIDL_INTERFACE("68512210-e61e-5b56-a6af-c4fb14677155")
                        IWebView2AutomationPeerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                ABI::Microsoft::UI::Xaml::Controls::IWebView2* owner,
                                IInspectable* baseInterface,
                                IInspectable** innerInterface,
                                ABI::Microsoft::UI::Xaml::Automation::Peers::IWebView2AutomationPeer** value
                                ) = 0;
                        };

                        extern MIDL_CONST_ID IID& IID_IWebView2AutomationPeerFactory = _uuidof(IWebView2AutomationPeerFactory);
                    } /* Peers */
                } /* Automation */
            } /* Xaml */
        } /* UI */
    } /* Microsoft */
} /* ABI */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation[] = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IValueProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides
 *    Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

typedef struct __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __FIIterator_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if !defined(____FIIterator_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1_HSTRING __FIIterator_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_HSTRING;

typedef struct __FIIterator_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterator_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterator_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterator_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterator_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterator_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterator_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

    END_INTERFACE
} __FIIterator_1_HSTRINGVtbl;

interface __FIIterator_1_HSTRING
{
    CONST_VTBL struct __FIIterator_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterator_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterator_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterator_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterator_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterator_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterator_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterator_1_HSTRING_get_Current(This, result) \
    ((This)->lpVtbl->get_Current(This, result))

#define __FIIterator_1_HSTRING_get_HasCurrent(This, result) \
    ((This)->lpVtbl->get_HasCurrent(This, result))

#define __FIIterator_1_HSTRING_MoveNext(This, result) \
    ((This)->lpVtbl->MoveNext(This, result))

#define __FIIterator_1_HSTRING_GetMany(This, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

#if !defined(____FIIterable_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1_HSTRING __FIIterable_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_HSTRING;

typedef struct __FIIterable_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIIterable_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIIterable_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIIterable_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIIterable_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIIterable_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIIterable_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* First)(__FIIterable_1_HSTRING* This,
        __FIIterator_1_HSTRING** result);

    END_INTERFACE
} __FIIterable_1_HSTRINGVtbl;

interface __FIIterable_1_HSTRING
{
    CONST_VTBL struct __FIIterable_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIIterable_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIIterable_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIIterable_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIIterable_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIIterable_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIIterable_1_HSTRING_First(This, result) \
    ((This)->lpVtbl->First(This, result))

#endif /* COBJMACROS */

#endif // ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if !defined(____FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIVectorView_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_HSTRING __FIVectorView_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_HSTRING;

typedef struct __FIVectorView_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVectorView_1_HSTRING* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVectorView_1_HSTRING* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVectorView_1_HSTRING* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVectorView_1_HSTRING* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

    END_INTERFACE
} __FIVectorView_1_HSTRINGVtbl;

interface __FIVectorView_1_HSTRING
{
    CONST_VTBL struct __FIVectorView_1_HSTRINGVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVectorView_1_HSTRING_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVectorView_1_HSTRING_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVectorView_1_HSTRING_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVectorView_1_HSTRING_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVectorView_1_HSTRING_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVectorView_1_HSTRING_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVectorView_1_HSTRING_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVectorView_1_HSTRING_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVectorView_1_HSTRING_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVectorView_1_HSTRING_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#endif /* COBJMACROS */

#endif // ____FIVectorView_1_HSTRING_INTERFACE_DEFINED__

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation* This,
        UINT32 itemsLength,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** items);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetAt(This, index, result) \
    ((This)->lpVtbl->GetAt(This, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Size(This, result) \
    ((This)->lpVtbl->get_Size(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetView(This, result) \
    ((This)->lpVtbl->GetView(This, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_IndexOf(This, value, index, result) \
    ((This)->lpVtbl->IndexOf(This, value, index, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_SetAt(This, index, value) \
    ((This)->lpVtbl->SetAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_InsertAt(This, index, value) \
    ((This)->lpVtbl->InsertAt(This, index, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_RemoveAt(This, index) \
    ((This)->lpVtbl->RemoveAt(This, index))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Append(This, value) \
    ((This)->lpVtbl->Append(This, value))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_RemoveAtEnd(This) \
    ((This)->lpVtbl->RemoveAtEnd(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Clear(This) \
    ((This)->lpVtbl->Clear(This))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This, startIndex, itemsLength, items, result) \
    ((This)->lpVtbl->GetMany(This, startIndex, itemsLength, items, result))

#define __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_ReplaceAll(This, itemsLength, items) \
    ((This)->lpVtbl->ReplaceAll(This, itemsLength, items))

#endif /* COBJMACROS */

#endif // ____FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType;

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIDropTargetProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIExpandCollapseProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIInvokeProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIItemContainerProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIRangeValueProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIScrollProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CISelectionProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIToggleProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIValueProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIVirtualizedItemProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIWindowProvider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2 __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
typedef interface __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement;

#endif // ____x_ABI_CMicrosoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType;

typedef enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface;

typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId;

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AccessibilityView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAccessibilityView
{
    AccessibilityView_Raw = 0,
    AccessibilityView_Control = 1,
    AccessibilityView_Content = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationControlType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType
{
    AutomationControlType_Button = 0,
    AutomationControlType_Calendar = 1,
    AutomationControlType_CheckBox = 2,
    AutomationControlType_ComboBox = 3,
    AutomationControlType_Edit = 4,
    AutomationControlType_Hyperlink = 5,
    AutomationControlType_Image = 6,
    AutomationControlType_ListItem = 7,
    AutomationControlType_List = 8,
    AutomationControlType_Menu = 9,
    AutomationControlType_MenuBar = 10,
    AutomationControlType_MenuItem = 11,
    AutomationControlType_ProgressBar = 12,
    AutomationControlType_RadioButton = 13,
    AutomationControlType_ScrollBar = 14,
    AutomationControlType_Slider = 15,
    AutomationControlType_Spinner = 16,
    AutomationControlType_StatusBar = 17,
    AutomationControlType_Tab = 18,
    AutomationControlType_TabItem = 19,
    AutomationControlType_Text = 20,
    AutomationControlType_ToolBar = 21,
    AutomationControlType_ToolTip = 22,
    AutomationControlType_Tree = 23,
    AutomationControlType_TreeItem = 24,
    AutomationControlType_Custom = 25,
    AutomationControlType_Group = 26,
    AutomationControlType_Thumb = 27,
    AutomationControlType_DataGrid = 28,
    AutomationControlType_DataItem = 29,
    AutomationControlType_Document = 30,
    AutomationControlType_SplitButton = 31,
    AutomationControlType_Window = 32,
    AutomationControlType_Pane = 33,
    AutomationControlType_Header = 34,
    AutomationControlType_HeaderItem = 35,
    AutomationControlType_Table = 36,
    AutomationControlType_TitleBar = 37,
    AutomationControlType_Separator = 38,
    AutomationControlType_SemanticZoom = 39,
    AutomationControlType_AppBar = 40,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationEvents
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents
{
    AutomationEvents_ToolTipOpened = 0,
    AutomationEvents_ToolTipClosed = 1,
    AutomationEvents_MenuOpened = 2,
    AutomationEvents_MenuClosed = 3,
    AutomationEvents_AutomationFocusChanged = 4,
    AutomationEvents_InvokePatternOnInvoked = 5,
    AutomationEvents_SelectionItemPatternOnElementAddedToSelection = 6,
    AutomationEvents_SelectionItemPatternOnElementRemovedFromSelection = 7,
    AutomationEvents_SelectionItemPatternOnElementSelected = 8,
    AutomationEvents_SelectionPatternOnInvalidated = 9,
    AutomationEvents_TextPatternOnTextSelectionChanged = 10,
    AutomationEvents_TextPatternOnTextChanged = 11,
    AutomationEvents_AsyncContentLoaded = 12,
    AutomationEvents_PropertyChanged = 13,
    AutomationEvents_StructureChanged = 14,
    AutomationEvents_DragStart = 15,
    AutomationEvents_DragCancel = 16,
    AutomationEvents_DragComplete = 17,
    AutomationEvents_DragEnter = 18,
    AutomationEvents_DragLeave = 19,
    AutomationEvents_Dropped = 20,
    AutomationEvents_LiveRegionChanged = 21,
    AutomationEvents_InputReachedTarget = 22,
    AutomationEvents_InputReachedOtherElement = 23,
    AutomationEvents_InputDiscarded = 24,
    AutomationEvents_WindowClosed = 25,
    AutomationEvents_WindowOpened = 26,
    AutomationEvents_ConversionTargetChanged = 27,
    AutomationEvents_TextEditTextChanged = 28,
    AutomationEvents_LayoutInvalidated = 29,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel
{
    AutomationHeadingLevel_None = 0,
    AutomationHeadingLevel_Level1 = 1,
    AutomationHeadingLevel_Level2 = 2,
    AutomationHeadingLevel_Level3 = 3,
    AutomationHeadingLevel_Level4 = 4,
    AutomationHeadingLevel_Level5 = 5,
    AutomationHeadingLevel_Level6 = 6,
    AutomationHeadingLevel_Level7 = 7,
    AutomationHeadingLevel_Level8 = 8,
    AutomationHeadingLevel_Level9 = 9,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType
{
    AutomationLandmarkType_None = 0,
    AutomationLandmarkType_Custom = 1,
    AutomationLandmarkType_Form = 2,
    AutomationLandmarkType_Main = 3,
    AutomationLandmarkType_Navigation = 4,
    AutomationLandmarkType_Search = 5,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting
{
    AutomationLiveSetting_Off = 0,
    AutomationLiveSetting_Polite = 1,
    AutomationLiveSetting_Assertive = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNavigationDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection
{
    AutomationNavigationDirection_Parent = 0,
    AutomationNavigationDirection_NextSibling = 1,
    AutomationNavigationDirection_PreviousSibling = 2,
    AutomationNavigationDirection_FirstChild = 3,
    AutomationNavigationDirection_LastChild = 4,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind
{
    AutomationNotificationKind_ItemAdded = 0,
    AutomationNotificationKind_ItemRemoved = 1,
    AutomationNotificationKind_ActionCompleted = 2,
    AutomationNotificationKind_ActionAborted = 3,
    AutomationNotificationKind_Other = 4,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationNotificationProcessing
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing
{
    AutomationNotificationProcessing_ImportantAll = 0,
    AutomationNotificationProcessing_ImportantMostRecent = 1,
    AutomationNotificationProcessing_All = 2,
    AutomationNotificationProcessing_MostRecent = 3,
    AutomationNotificationProcessing_CurrentThenMostRecent = 4,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationOrientation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation
{
    AutomationOrientation_None = 0,
    AutomationOrientation_Horizontal = 1,
    AutomationOrientation_Vertical = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.AutomationStructureChangeType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType
{
    AutomationStructureChangeType_ChildAdded = 0,
    AutomationStructureChangeType_ChildRemoved = 1,
    AutomationStructureChangeType_ChildrenInvalidated = 2,
    AutomationStructureChangeType_ChildrenBulkAdded = 3,
    AutomationStructureChangeType_ChildrenBulkRemoved = 4,
    AutomationStructureChangeType_ChildrenReordered = 5,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.PatternInterface
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface
{
    PatternInterface_Invoke = 0,
    PatternInterface_Selection = 1,
    PatternInterface_Value = 2,
    PatternInterface_RangeValue = 3,
    PatternInterface_Scroll = 4,
    PatternInterface_ScrollItem = 5,
    PatternInterface_ExpandCollapse = 6,
    PatternInterface_Grid = 7,
    PatternInterface_GridItem = 8,
    PatternInterface_MultipleView = 9,
    PatternInterface_Window = 10,
    PatternInterface_SelectionItem = 11,
    PatternInterface_Dock = 12,
    PatternInterface_Table = 13,
    PatternInterface_TableItem = 14,
    PatternInterface_Toggle = 15,
    PatternInterface_Transform = 16,
    PatternInterface_Text = 17,
    PatternInterface_ItemContainer = 18,
    PatternInterface_VirtualizedItem = 19,
    PatternInterface_Text2 = 20,
    PatternInterface_TextChild = 21,
    PatternInterface_TextRange = 22,
    PatternInterface_Annotation = 23,
    PatternInterface_Drag = 24,
    PatternInterface_DropTarget = 25,
    PatternInterface_ObjectModel = 26,
    PatternInterface_Spreadsheet = 27,
    PatternInterface_SpreadsheetItem = 28,
    PatternInterface_Styles = 29,
    PatternInterface_Transform2 = 30,
    PatternInterface_SynchronizedInput = 31,
    PatternInterface_TextEdit = 32,
    PatternInterface_CustomNavigation = 33,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Struct Microsoft.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId
{
    UINT32 Part1;
    UINT32 Part2;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAnimatedVisualPlayer* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAnimatedVisualPlayerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBar* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAppBarToggleButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIAutoSuggestBox* owner,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EventsSource)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** value);
    HRESULT (STDMETHODCALLTYPE* put_EventsSource)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value);
    HRESULT (STDMETHODCALLTYPE* GetPattern)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface patternInterface,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* RaiseAutomationEvent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents eventId);
    HRESULT (STDMETHODCALLTYPE* RaisePropertyChangedEvent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty* automationProperty,
        IInspectable* oldValue,
        IInspectable* newValue);
    HRESULT (STDMETHODCALLTYPE* GetAcceleratorKey)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetAccessKey)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetAutomationControlType)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType* result);
    HRESULT (STDMETHODCALLTYPE* GetAutomationId)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetBoundingRectangle)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* GetChildren)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* Navigate)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection direction,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetClickablePoint)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* GetHelpText)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetItemStatus)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetItemType)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetLabeledBy)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetLocalizedControlType)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetOrientation)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation* result);
    HRESULT (STDMETHODCALLTYPE* HasKeyboardFocus)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsContentElement)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsControlElement)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsEnabled)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsKeyboardFocusable)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsOffscreen)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsPassword)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsRequiredForForm)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetFocus)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This);
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    DEPRECATED("Consider using Navigate with AutomationNavigationDirection::Parent, which is an improved version of GetParent. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    HRESULT (STDMETHODCALLTYPE* GetParent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* InvalidatePeer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This);
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    DEPRECATED("Consider using GetElementFromPoint, which is an improved version of GetPeerFromPoint. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    HRESULT (STDMETHODCALLTYPE* GetPeerFromPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetElementFromPoint)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        struct __x_ABI_CWindows_CFoundation_CPoint pointInWindowCoordinates,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetFocusedElement)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetLiveSetting)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting* result);
    HRESULT (STDMETHODCALLTYPE* ShowContextMenu)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetControlledPeers)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetAnnotations)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* SetParent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* peer);
    HRESULT (STDMETHODCALLTYPE* RaiseTextEditTextChangedEvent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType automationTextEditChangeType,
        __FIVectorView_1_HSTRING* changedData);
    HRESULT (STDMETHODCALLTYPE* GetPositionInSet)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetSizeOfSet)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* RaiseStructureChangedEvent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType structureChangeType,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* child);
    HRESULT (STDMETHODCALLTYPE* GetLandmarkType)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType* result);
    HRESULT (STDMETHODCALLTYPE* GetLocalizedLandmarkType)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* IsPeripheral)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsDataValidForForm)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetFullDescription)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetCulture)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* RaiseNotificationEvent)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind notificationKind,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing notificationProcessing,
        HSTRING displayString,
        HSTRING activityId);
    HRESULT (STDMETHODCALLTYPE* GetHeadingLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel* result);
    HRESULT (STDMETHODCALLTYPE* IsDialog)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* This,
        boolean* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_get_EventsSource(This, value) \
    ((This)->lpVtbl->get_EventsSource(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_put_EventsSource(This, value) \
    ((This)->lpVtbl->put_EventsSource(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetPattern(This, patternInterface, result) \
    ((This)->lpVtbl->GetPattern(This, patternInterface, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaiseAutomationEvent(This, eventId) \
    ((This)->lpVtbl->RaiseAutomationEvent(This, eventId))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaisePropertyChangedEvent(This, automationProperty, oldValue, newValue) \
    ((This)->lpVtbl->RaisePropertyChangedEvent(This, automationProperty, oldValue, newValue))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAcceleratorKey(This, result) \
    ((This)->lpVtbl->GetAcceleratorKey(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAccessKey(This, result) \
    ((This)->lpVtbl->GetAccessKey(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAutomationControlType(This, result) \
    ((This)->lpVtbl->GetAutomationControlType(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAutomationId(This, result) \
    ((This)->lpVtbl->GetAutomationId(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetBoundingRectangle(This, result) \
    ((This)->lpVtbl->GetBoundingRectangle(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetChildren(This, result) \
    ((This)->lpVtbl->GetChildren(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_Navigate(This, direction, result) \
    ((This)->lpVtbl->Navigate(This, direction, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetClassName(This, result) \
    ((This)->lpVtbl->GetClassName(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetClickablePoint(This, result) \
    ((This)->lpVtbl->GetClickablePoint(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetHelpText(This, result) \
    ((This)->lpVtbl->GetHelpText(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetItemStatus(This, result) \
    ((This)->lpVtbl->GetItemStatus(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetItemType(This, result) \
    ((This)->lpVtbl->GetItemType(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLabeledBy(This, result) \
    ((This)->lpVtbl->GetLabeledBy(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLocalizedControlType(This, result) \
    ((This)->lpVtbl->GetLocalizedControlType(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetName(This, result) \
    ((This)->lpVtbl->GetName(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetOrientation(This, result) \
    ((This)->lpVtbl->GetOrientation(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_HasKeyboardFocus(This, result) \
    ((This)->lpVtbl->HasKeyboardFocus(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsContentElement(This, result) \
    ((This)->lpVtbl->IsContentElement(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsControlElement(This, result) \
    ((This)->lpVtbl->IsControlElement(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsEnabled(This, result) \
    ((This)->lpVtbl->IsEnabled(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsKeyboardFocusable(This, result) \
    ((This)->lpVtbl->IsKeyboardFocusable(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsOffscreen(This, result) \
    ((This)->lpVtbl->IsOffscreen(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsPassword(This, result) \
    ((This)->lpVtbl->IsPassword(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsRequiredForForm(This, result) \
    ((This)->lpVtbl->IsRequiredForForm(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_SetFocus(This) \
    ((This)->lpVtbl->SetFocus(This))

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    DEPRECATED("Consider using Navigate with AutomationNavigationDirection::Parent, which is an improved version of GetParent. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetParent(This, result) \
    ((This)->lpVtbl->GetParent(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_InvalidatePeer(This) \
    ((This)->lpVtbl->InvalidatePeer(This))

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
    DEPRECATED("Consider using GetElementFromPoint, which is an improved version of GetPeerFromPoint. For more info, see MSDN.")
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetPeerFromPoint(This, point, result) \
    ((This)->lpVtbl->GetPeerFromPoint(This, point, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetElementFromPoint(This, pointInWindowCoordinates, result) \
    ((This)->lpVtbl->GetElementFromPoint(This, pointInWindowCoordinates, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetFocusedElement(This, result) \
    ((This)->lpVtbl->GetFocusedElement(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLiveSetting(This, result) \
    ((This)->lpVtbl->GetLiveSetting(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_ShowContextMenu(This) \
    ((This)->lpVtbl->ShowContextMenu(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetControlledPeers(This, result) \
    ((This)->lpVtbl->GetControlledPeers(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAnnotations(This, result) \
    ((This)->lpVtbl->GetAnnotations(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_SetParent(This, peer) \
    ((This)->lpVtbl->SetParent(This, peer))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaiseTextEditTextChangedEvent(This, automationTextEditChangeType, changedData) \
    ((This)->lpVtbl->RaiseTextEditTextChangedEvent(This, automationTextEditChangeType, changedData))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetPositionInSet(This, result) \
    ((This)->lpVtbl->GetPositionInSet(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetSizeOfSet(This, result) \
    ((This)->lpVtbl->GetSizeOfSet(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLevel(This, result) \
    ((This)->lpVtbl->GetLevel(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaiseStructureChangedEvent(This, structureChangeType, child) \
    ((This)->lpVtbl->RaiseStructureChangedEvent(This, structureChangeType, child))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLandmarkType(This, result) \
    ((This)->lpVtbl->GetLandmarkType(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLocalizedLandmarkType(This, result) \
    ((This)->lpVtbl->GetLocalizedLandmarkType(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsPeripheral(This, result) \
    ((This)->lpVtbl->IsPeripheral(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsDataValidForForm(This, result) \
    ((This)->lpVtbl->IsDataValidForForm(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetFullDescription(This, result) \
    ((This)->lpVtbl->GetFullDescription(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetCulture(This, result) \
    ((This)->lpVtbl->GetCulture(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaiseNotificationEvent(This, notificationKind, notificationProcessing, displayString, activityId) \
    ((This)->lpVtbl->RaiseNotificationEvent(This, notificationKind, notificationProcessing, displayString, activityId))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetHeadingLevel(This, result) \
    ((This)->lpVtbl->GetHeadingLevel(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsDialog(This, result) \
    ((This)->lpVtbl->IsDialog(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType* value);
    HRESULT (STDMETHODCALLTYPE* put_Type)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType value);
    HRESULT (STDMETHODCALLTYPE* get_Peer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** value);
    HRESULT (STDMETHODCALLTYPE* put_Peer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_get_Type(This, value) \
    ((This)->lpVtbl->get_Type(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_put_Type(This, value) \
    ((This)->lpVtbl->put_Type(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_get_Peer(This, value) \
    ((This)->lpVtbl->get_Peer(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_put_Peer(This, value) \
    ((This)->lpVtbl->put_Peer(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType type,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithPeerParameter)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType type,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* peer,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_CreateInstance(This, type, value) \
    ((This)->lpVtbl->CreateInstance(This, type, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_CreateWithPeerParameter(This, type, peer, value) \
    ((This)->lpVtbl->CreateWithPeerParameter(This, type, peer, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TypeProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);
    HRESULT (STDMETHODCALLTYPE* get_PeerProperty)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIDependencyProperty** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_get_TypeProperty(This, value) \
    ((This)->lpVtbl->get_TypeProperty(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_get_PeerProperty(This, value) \
    ((This)->lpVtbl->get_PeerProperty(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory* This,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_CreateInstance(This, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerOverrides[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetPatternCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface patternInterface,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetAcceleratorKeyCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetAccessKeyCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetAutomationControlTypeCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType* result);
    HRESULT (STDMETHODCALLTYPE* GetAutomationIdCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetBoundingRectangleCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CRect* result);
    HRESULT (STDMETHODCALLTYPE* GetChildrenCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* NavigateCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection direction,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetClassNameCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetClickablePointCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* result);
    HRESULT (STDMETHODCALLTYPE* GetHelpTextCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetItemStatusCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetItemTypeCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetLabeledByCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetLocalizedControlTypeCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetNameCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetOrientationCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation* result);
    HRESULT (STDMETHODCALLTYPE* HasKeyboardFocusCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsContentElementCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsControlElementCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsEnabledCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsKeyboardFocusableCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsOffscreenCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsPasswordCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsRequiredForFormCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetFocusCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetPeerFromPointCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint point,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetElementFromPointCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        struct __x_ABI_CWindows_CFoundation_CPoint pointInWindowCoordinates,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetFocusedElementCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* GetLiveSettingCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting* result);
    HRESULT (STDMETHODCALLTYPE* ShowContextMenuCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetControlledPeersCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIVectorView_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetAnnotationsCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIVector_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation** result);
    HRESULT (STDMETHODCALLTYPE* GetPositionInSetCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetSizeOfSetCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetLevelCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetLandmarkTypeCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType* result);
    HRESULT (STDMETHODCALLTYPE* GetLocalizedLandmarkTypeCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* IsPeripheralCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsDataValidForFormCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetFullDescriptionCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetDescribedByCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetFlowsToCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetFlowsFromCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        __FIIterable_1_Microsoft__CUI__CXaml__CAutomation__CPeers__CAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* GetCultureCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        INT32* result);
    HRESULT (STDMETHODCALLTYPE* GetHeadingLevelCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel* result);
    HRESULT (STDMETHODCALLTYPE* IsDialogCore)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides* This,
        boolean* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetPatternCore(This, patternInterface, result) \
    ((This)->lpVtbl->GetPatternCore(This, patternInterface, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAcceleratorKeyCore(This, result) \
    ((This)->lpVtbl->GetAcceleratorKeyCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAccessKeyCore(This, result) \
    ((This)->lpVtbl->GetAccessKeyCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAutomationControlTypeCore(This, result) \
    ((This)->lpVtbl->GetAutomationControlTypeCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAutomationIdCore(This, result) \
    ((This)->lpVtbl->GetAutomationIdCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetBoundingRectangleCore(This, result) \
    ((This)->lpVtbl->GetBoundingRectangleCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetChildrenCore(This, result) \
    ((This)->lpVtbl->GetChildrenCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_NavigateCore(This, direction, result) \
    ((This)->lpVtbl->NavigateCore(This, direction, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetClassNameCore(This, result) \
    ((This)->lpVtbl->GetClassNameCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetClickablePointCore(This, result) \
    ((This)->lpVtbl->GetClickablePointCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetHelpTextCore(This, result) \
    ((This)->lpVtbl->GetHelpTextCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetItemStatusCore(This, result) \
    ((This)->lpVtbl->GetItemStatusCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetItemTypeCore(This, result) \
    ((This)->lpVtbl->GetItemTypeCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLabeledByCore(This, result) \
    ((This)->lpVtbl->GetLabeledByCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLocalizedControlTypeCore(This, result) \
    ((This)->lpVtbl->GetLocalizedControlTypeCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetNameCore(This, result) \
    ((This)->lpVtbl->GetNameCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetOrientationCore(This, result) \
    ((This)->lpVtbl->GetOrientationCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_HasKeyboardFocusCore(This, result) \
    ((This)->lpVtbl->HasKeyboardFocusCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsContentElementCore(This, result) \
    ((This)->lpVtbl->IsContentElementCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsControlElementCore(This, result) \
    ((This)->lpVtbl->IsControlElementCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsEnabledCore(This, result) \
    ((This)->lpVtbl->IsEnabledCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsKeyboardFocusableCore(This, result) \
    ((This)->lpVtbl->IsKeyboardFocusableCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsOffscreenCore(This, result) \
    ((This)->lpVtbl->IsOffscreenCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsPasswordCore(This, result) \
    ((This)->lpVtbl->IsPasswordCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsRequiredForFormCore(This, result) \
    ((This)->lpVtbl->IsRequiredForFormCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_SetFocusCore(This) \
    ((This)->lpVtbl->SetFocusCore(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetPeerFromPointCore(This, point, result) \
    ((This)->lpVtbl->GetPeerFromPointCore(This, point, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetElementFromPointCore(This, pointInWindowCoordinates, result) \
    ((This)->lpVtbl->GetElementFromPointCore(This, pointInWindowCoordinates, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetFocusedElementCore(This, result) \
    ((This)->lpVtbl->GetFocusedElementCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLiveSettingCore(This, result) \
    ((This)->lpVtbl->GetLiveSettingCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_ShowContextMenuCore(This) \
    ((This)->lpVtbl->ShowContextMenuCore(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetControlledPeersCore(This, result) \
    ((This)->lpVtbl->GetControlledPeersCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAnnotationsCore(This, result) \
    ((This)->lpVtbl->GetAnnotationsCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetPositionInSetCore(This, result) \
    ((This)->lpVtbl->GetPositionInSetCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetSizeOfSetCore(This, result) \
    ((This)->lpVtbl->GetSizeOfSetCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLevelCore(This, result) \
    ((This)->lpVtbl->GetLevelCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLandmarkTypeCore(This, result) \
    ((This)->lpVtbl->GetLandmarkTypeCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLocalizedLandmarkTypeCore(This, result) \
    ((This)->lpVtbl->GetLocalizedLandmarkTypeCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsPeripheralCore(This, result) \
    ((This)->lpVtbl->IsPeripheralCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsDataValidForFormCore(This, result) \
    ((This)->lpVtbl->IsDataValidForFormCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetFullDescriptionCore(This, result) \
    ((This)->lpVtbl->GetFullDescriptionCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetDescribedByCore(This, result) \
    ((This)->lpVtbl->GetDescribedByCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetFlowsToCore(This, result) \
    ((This)->lpVtbl->GetFlowsToCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetFlowsFromCore(This, result) \
    ((This)->lpVtbl->GetFlowsFromCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetCultureCore(This, result) \
    ((This)->lpVtbl->GetCultureCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetHeadingLevelCore(This, result) \
    ((This)->lpVtbl->GetHeadingLevelCore(This, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsDialogCore(This, result) \
    ((This)->lpVtbl->IsDialogCore(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerProtected[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PeerFromProvider)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple* provider,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* ProviderFromPeer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer* peer,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_PeerFromProvider(This, provider, result) \
    ((This)->lpVtbl->PeerFromProvider(This, provider, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_ProviderFromPeer(This, peer, result) \
    ((This)->lpVtbl->ProviderFromPeer(This, peer, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IAutomationPeerStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ListenerExists)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        enum __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents eventId,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GenerateRawElementProviderRuntimeId)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics* This,
        struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId* result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_ListenerExists(This, eventId, result) \
    ((This)->lpVtbl->ListenerExists(This, eventId, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GenerateRawElementProviderRuntimeId(This, result) \
    ((This)->lpVtbl->GenerateRawElementProviderRuntimeId(This, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IBreadcrumbBarItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIBreadcrumbBarItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIBreadcrumbBarItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICalendarDatePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICalendarDatePicker* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICalendarDatePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CICheckBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorPickerSlider* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorPickerSliderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIColorSpectrum* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIColorSpectrumAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIComboBoxItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDatePicker* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIDropDownButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIDropDownButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IExpanderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIExpander* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIExpanderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipView* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlipViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIFlyoutPresenter* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Owner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_get_Owner(This, value) \
    ((This)->lpVtbl->get_Owner(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIFrameworkElement* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics[] = L"Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FromElement)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);
    HRESULT (STDMETHODCALLTYPE* CreatePeerForElement)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CIUIElement* element,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FromElement(This, element, result) \
    ((This)->lpVtbl->FromElement(This, element, result))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_CreatePeerForElement(This, element, result) \
    ((This)->lpVtbl->CreatePeerForElement(This, element, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridView* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewHeaderItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGridViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIGroupItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHub* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHubSection* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIHyperlinkButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIImage* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IInfoBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIInfoBar* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIInfoBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Item)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_ItemsControlAutomationPeer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_get_Item(This, value) \
    ((This)->lpVtbl->get_Item(This, value))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_get_ItemsControlAutomationPeer(This, value) \
    ((This)->lpVtbl->get_ItemsControlAutomationPeer(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateItemAutomationPeer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_CreateItemAutomationPeer(This, item, result) \
    ((This)->lpVtbl->CreateItemAutomationPeer(This, item, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsControl* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides[] = L"Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverridesVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnCreateItemAutomationPeer)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer** result);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverridesVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverridesVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_OnCreateItemAutomationPeer(This, item, result) \
    ((This)->lpVtbl->OnCreateItemAutomationPeer(This, item, result))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListBoxItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListView* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBase* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewBaseHeaderItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewHeaderItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIListViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaPlayerElementAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaPlayerElement* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaPlayerElementAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMediaTransportControls* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBar* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuBarItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuBarItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIMenuFlyoutPresenter* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationView* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINavigationViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINavigationViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_INumberBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CINumberBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CINumberBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPasswordBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPersonPicture* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPersonPictureAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPipsPagerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPipsPager* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPipsPagerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivot* owner,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_CreateInstanceWithOwner(This, owner, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIPivotItem* owner,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer* parent,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressBar* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIProgressRing* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRadioButtons* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRadioButtonsAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRatingControl* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRatingControlAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRepeatButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIItemsRepeater* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRepeaterAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichEditBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlock* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIRichTextBlockOverflow* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollBar* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIScrollViewer* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CISelector* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithParentAndItem)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithParentAndItem(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISemanticZoom* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISlider* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CISplitButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CISplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabView* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITabViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITabViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITabViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITeachingTip* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITeachingTipAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBlock* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITextBox* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIThumb* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITimePicker* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIToggleButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleMenuFlyoutItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSplitButton* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSplitButtonAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIToggleSwitch* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewItem* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemDataAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory* This,
        IInspectable* item,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* parent,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_CreateInstanceWithOwner(This, item, parent, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, item, parent, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithOwner)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CITreeViewList* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstanceWithOwner(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CITreeViewListAutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer* This,
        TrustLevel* trustLevel);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_Automation_Peers_IWebView2AutomationPeerFactory[] = L"Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeerFactory";
typedef struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactoryVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory* This,
        __x_ABI_CMicrosoft_CUI_CXaml_CControls_CIWebView2* owner,
        IInspectable* baseInterface,
        IInspectable** innerInterface,
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeer** value);

    END_INTERFACE
} __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactoryVtbl;

interface __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory
{
    CONST_VTBL struct __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactoryVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_CreateInstance(This, owner, baseInterface, innerInterface, value) \
    ((This)->lpVtbl->CreateInstance(This, owner, baseInterface, innerInterface, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIWebView2AutomationPeerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AnimatedVisualPlayerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerProtected
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_AutomationPeerAnnotation[] = L"Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_BreadcrumbBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ICalendarDatePickerAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_CalendarDatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.CalendarDatePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ColorPickerSliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ColorSpectrumAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IValueProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IWindowProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DatePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_DropDownButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ExpanderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_GroupItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.GroupItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHubAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HubAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HubAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HubSectionAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HubSectionAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IImageAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ImageAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ImageAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_InfoBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides
 *    Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IDropTargetProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IItemContainerProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMediaPlayerElementAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MediaPlayerElementAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MediaPlayerElementAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x30000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuBarItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NavigationViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NavigationViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_NumberBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PersonPictureAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PipsPagerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IVirtualizedItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RadioButtonsAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IRangeValueProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RatingControlAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RepeaterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IScrollProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISelectorAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SelectorAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SelectorAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.ISelectionItemProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISliderAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SliderAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SliderAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IInvokeProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_SplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TabViewAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TabViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TeachingTipAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TextBlockAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TextBlockAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TextBoxAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TextBoxAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IThumbAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ThumbAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ThumbAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TimePickerAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleSplitButtonAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IToggleProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer ** Default Interface **
 *    Microsoft.UI.Xaml.Automation.Provider.IExpandCollapseProvider
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewItemDataAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_TreeViewListAutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

/*
 *
 * Class Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer
 *
 * Introduced to Microsoft.UI.Xaml.XamlContract in version 1.0
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.Automation.Peers.IWebView2AutomationPeer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000
#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Automation_Peers_WebView2AutomationPeer[] = L"Microsoft.UI.Xaml.Automation.Peers.WebView2AutomationPeer";
#endif
#endif // MICROSOFT_UI_XAML_XAMLCONTRACT_VERSION >= 0x10000

#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __microsoft2Eui2Examl2Eautomation2Epeers_p_h__

#endif // __microsoft2Eui2Examl2Eautomation2Epeers_h__
